{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Paginate.js","components/Message.js","constants/productConstants.js","actions/productActions.js","components/BasicSkeleton.js","components/SkeletonShimmer.js","components/CarouselSkeleton.js","components/ProductCarousel.js","components/Meta.js","components/ProductSkeleton.js","pages/HomePage.js","components/ImageMagnifier.js","components/Loader.js","actions/orderActions.js","utils/getDateString.js","pages/ProductPage.js","constants/cartConstants.js","actions/cartActions.js","pages/CartPage.js","components/FormContainer.js","pages/LoginPage.js","pages/RegisterPage.js","pages/ProfilePage.js","pages/ConfirmPage.js","components/CheckoutStatus.js","pages/ShippingPage.js","pages/PaymentPage.js","pages/PlaceOrderPage.js","components/CheckoutForm.js","pages/OrderPage.js","pages/PasswordResetPage.js","pages/UserListPage.js","pages/UserEditPage.js","pages/ProductListPage.js","pages/ProductEditPage.js","pages/OrderListPage.js","assets/404Error.png","pages/ErrorPage.js","serviceWorkerRegistration.js","ServiceWorkerWrapper.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGIN_REFRESH_REQUEST","USER_LOGIN_REFRESH_SUCCESS","USER_LOGIN_REFRESH_FAILURE","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_RESET_PASSWORD_REQUEST","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_FAILURE","USER_EMAIL_VERIFICATION_REQUEST","USER_EMAIL_VERIFICATION_SUCCESS","USER_EMAIL_VERIFICATION_FAILURE","USER_CONFIRM_REQUEST","USER_CONFIRM_SUCCESS","USER_CONFIRM_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","USER_DETAILS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAILURE","USER_PROFILE_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILURE","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILURE","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAILURE","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILURE","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILURE","ORDER_PAY_RESET","ORDER_SHIPPED_REQUEST","ORDER_SHIPPED_SUCCESS","ORDER_SHIPPED_FAILURE","ORDER_SHIPPED_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILURE","ORDER_DELIVER_RESET","ORDER_USER_LIST_REQUEST","ORDER_USER_LIST_SUCCESS","ORDER_USER_LIST_FAILURE","ORDER_USER_LIST_RESET","ORDER_ALL_LIST_REQUEST","ORDER_ALL_LIST_SUCCESS","ORDER_ALL_LIST_FAILURE","refreshLogin","email","dispatch","getState","type","userInfo","userLogin","config","headers","axios","post","token","refreshToken","data","success","payload","updatedUser","accessToken","localStorage","setItem","JSON","stringify","removeItem","response","message","getUserDetails","id","Authorization","get","updateUserProfile","user","put","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","className","InputGroup","Control","style","border","borderRight","name","onChange","target","value","placeholder","Text","background","borderLeft","margin","outline","padding","color","Header","useDispatch","useSelector","state","cart","cartItems","show1","setShow1","show2","setShow2","count","setCount","useEffect","reduce","acc","item","qty","handleLogout","window","location","href","display","innerHeight","minWidth","height","zIndex","position","onClick","Navbar","bg","variant","expand","Container","to","Brand","render","Nav","justifyContent","isAdmin","Link","fontSize","innerWidth","NavDropdown","title","show","Item","src","avatar","alt","Footer","Date","getFullYear","Rating","text","map","ele","idx","defaultProps","Product","product","Card","_id","Img","loading","image","Body","textDecoration","Title","as","rating","numReviews","price","toLocaleString","maximumFractionDigits","currency","Paginate","pages","page","forOrders","forUsers","Pagination","Array","keys","active","Number","Message","duration","children","visible","setVisible","setTimeout","Alert","onClose","dismissible","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILURE","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILURE","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAILURE","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAILURE","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILURE","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAILURE","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_RATED_REQUEST","PRODUCT_TOP_RATED_SUCCESS","PRODUCT_TOP_RATED_FAILURE","listProducts","pageNumber","pageSize","listProductDetails","BasicSkeleton","classes","SkeletonShimmer","CarouselSkeleton","overflow","ProductCarousel","productTopRated","error","products","Carousel","marginTop","pause","indicators","interval","CarouselItem","Image","fluid","Caption","Meta","description","keywords","content","ProductSkeleton","HomePage","match","params","promptVerfication","setPromptVerification","setProducts","productAvailable","setProductAvailable","productList","userInfoError","userDetails","isSocialLogin","parse","getItem","length","alignItems","class","Row","Col","sm","md","lg","xl","ImageMagnifier","width","magnifierHeight","magnifieWidth","zoomLevel","x","y","setXY","imgWidth","imgHeight","setSize","showMagnifier","setShowMagnifier","onMouseEnter","currentTarget","getBoundingClientRect","onMouseMove","top","left","pageX","pageXOffset","pageY","pageYOffset","onMouseLeave","pointerEvents","opacity","backgroundColor","backgroundImage","backgroundRepeat","borderRadius","backgroundSize","backgroundPositionX","backgroundPositionY","Loader","Spinner","animation","role","payOrder","orderID","paymentResult","listMyOrders","getDateString","date","showTime","timeStr","toLocaleTimeString","timeStyle","hour12","timeZone","result","toLocaleDateString","year","month","day","ProductPage","quantity","setQuantity","setRating","comment","setComment","allReviews","setAllReviews","hasOrderedItem","setHasOrderedItem","showReviewForm","setShowReviewForm","productDetails","userLoginError","productCreateReview","loadingCreateReview","successCreateReview","errorCreateReview","orders","orderListUser","alert","reviews","flag","obj","orderItems","toString","sortedArr","sort","a","b","createdAt","ListGroup","countInStock","Button","disabled","review","productID","Group","controlId","default","FloatingLabel","label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_RESET","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addItem","console","savePaymentMethod","log","CartPage","totalItems","setTotalItems","search","split","handleRemoveFromCart","rounded","ButtonGroup","size","FormContainer","xs","LoginPage","setEmail","password","setPassword","redirect","loginUser","Label","RegisterPage","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","registerUser","ProfilePage","inputFile","useRef","showSubmitButton","setShowSubmitButton","typePassword","setTypePassword","typeConfirmPassword","setTypeConfirmPassword","setAvatar","allOrders","setAllOrders","uploading","setUploading","errorImageUpload","setErrorImageUpload","userProfileUpdate","loadingOrdersList","errorOrdersList","userSendEmailVerfication","emailSent","hasError","handleImageUpload","file","files","formData","FormData","append","secure_url","isConfirmed","fontWeight","focus","sendVerficationEmail","flexFlow","alignSelf","marginBottom","cursor","current","click","accept","ref","stopPropagation","marginLeft","Table","striped","bordered","responsive","order","textAlign","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","ConfirmPage","userConfirm","isLoggedIn","setIsLoggedIn","emailToken","alreadyLoggedIn","confirmUser","CheckoutStatus","step1","step2","step3","step4","ShippingPage","shippingAddress","phone","setPhone","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentPage","paymentMethod","setPaymentMethod","handleChange","Check","inline","checked","PlaceOrderPage","orderCreate","itemsPrice","shippingPrice","createOrder","CheckoutForm","setError","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","getClientSecret","makePayment","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","paymentIntent","paymentMode","reload","OrderPage","stripePromise","loadStripe","process","orderDetails","orderPay","loadingPay","successPay","orderShipped","loadingShipped","successShipped","orderDeliver","loadingDeliver","successDeliver","getOrderDetails","setImage","imageUploading","setImageUploading","handleFileUpload","handlePayment","isShipped","shippedAt","shippedOrder","deliverOrder","PasswordResetPage","userResetPassword","resetPassword","nameFromLocalStorage","passwordToken","resetUserPassword","paddingLeft","UserListPage","userList","users","total","successDelete","userDelete","listAllUsers","handleDelete","confirm","delete","deleteUser","UserEditPage","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","newUserInfo","updateUser","ProductListPage","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","successCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditPage","productId","setBrand","setCategory","setDescription","setPrice","setCountInStock","productUpdate","updateProduct","min","max","step","orderListAll","listAllOrders","justifyItems","gap","imageUrl","url","element","document","createElement","Blob","URL","createObjectURL","download","downloadImage","ErrorPage","errorImg","isLocalhost","Boolean","hostname","register","navigator","origin","addEventListener","swUrl","fetch","then","contentType","status","indexOf","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","serviceWorkerRegistration","reloadPage","postMessage","ToastContainer","Toast","App","path","component","exact","OrderListPage","reducer","combineReducers","action","existingItem","find","filter","userLoginRefresh","tokenInfo","isLoading","cartItemsFromLocalStorage","userInfoFromLocalStorage","shippingAddressFromLocalStorage","tokenInfoFromLocalStoage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c2946467.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\nexport const USER_LOGIN_REFRESH_REQUEST = 'USER_LOGIN_REFRESH_REQUEST';\nexport const USER_LOGIN_REFRESH_SUCCESS = 'USER_LOGIN_REFRESH_SUCCESS';\nexport const USER_LOGIN_REFRESH_FAILURE = 'USER_LOGIN_REFRESH_FAILURE';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAILURE = 'USER_REGISTER_FAILURE';\n\nexport const USER_RESET_PASSWORD_REQUEST = 'USER_RESET_PASSWORD_REQUEST';\nexport const USER_RESET_PASSWORD_SUCCESS = 'USER_RESET_PASSWORD_SUCCESS';\nexport const USER_RESET_PASSWORD_FAILURE = 'USER_RESET_PASSWORD_FAILURE';\n\n// To send the email verification link\nexport const USER_EMAIL_VERIFICATION_REQUEST =\n\t'USER_EMAIL_VERIFICATION_REQUEST';\nexport const USER_EMAIL_VERIFICATION_SUCCESS =\n\t'USER_EMAIL_VERIFICATION_SUCCESS';\nexport const USER_EMAIL_VERIFICATION_FAILURE =\n\t'USER_EMAIL_VERIFICATION_FAILURE';\n\n// To actually verify the email token and confirm the user email\nexport const USER_CONFIRM_REQUEST = 'USER_CONFIRM_REQUEST';\nexport const USER_CONFIRM_SUCCESS = 'USER_CONFIRM_SUCCESS';\nexport const USER_CONFIRM_FAILURE = 'USER_CONFIRM_FAILURE';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAILURE = 'USER_DETAILS_FAILURE';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_PROFILE_UPDATE_REQUEST = 'USER_PROFILE_UPDATE_REQUEST';\nexport const USER_PROFILE_UPDATE_SUCCESS = 'USER_PROFILE_UPDATE_SUCCESS';\nexport const USER_PROFILE_UPDATE_FAILURE = 'USER_PROFILE_UPDATE_FAILURE';\nexport const USER_PROFILE_UPDATE_RESET = 'USER_PROFILE_UPDATE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAILURE = 'USER_LIST_FAILURE';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAILURE = 'USER_DELETE_FAILURE';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAILURE = 'USER_UPDATE_FAILURE';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAILURE = 'ORDER_CREATE_FAILURE';\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAILURE = 'ORDER_DETAILS_FAILURE';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAILURE = 'ORDER_PAY_FAILURE';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_SHIPPED_REQUEST = 'ORDER_SHIPPED_REQUEST';\nexport const ORDER_SHIPPED_SUCCESS = 'ORDER_SHIPPED_SUCCESS';\nexport const ORDER_SHIPPED_FAILURE = 'ORDER_SHIPPED_FAILURE';\nexport const ORDER_SHIPPED_RESET = 'ORDER_SHIPPED_RESET';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAILURE = 'ORDER_DELIVER_FAILURE';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n\nexport const ORDER_USER_LIST_REQUEST = 'ORDER_USER_LIST_REQUEST';\nexport const ORDER_USER_LIST_SUCCESS = 'ORDER_USER_LIST_SUCCESS';\nexport const ORDER_USER_LIST_FAILURE = 'ORDER_USER_LIST_FAILURE';\nexport const ORDER_USER_LIST_RESET = 'ORDER_USER_LIST_RESET';\n\nexport const ORDER_ALL_LIST_REQUEST = 'ORDER_ALL_LIST_REQUEST';\nexport const ORDER_ALL_LIST_SUCCESS = 'ORDER_ALL_LIST_SUCCESS';\nexport const ORDER_ALL_LIST_FAILURE = 'ORDER_ALL_LIST_FAILURE';\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAILURE,\n  USER_LOGIN_REFRESH_REQUEST,\n  USER_LOGIN_REFRESH_SUCCESS,\n  USER_LOGIN_REFRESH_FAILURE,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAILURE,\n  USER_RESET_PASSWORD_REQUEST,\n  USER_RESET_PASSWORD_SUCCESS,\n  USER_RESET_PASSWORD_FAILURE,\n  USER_EMAIL_VERIFICATION_REQUEST,\n  USER_EMAIL_VERIFICATION_SUCCESS,\n  USER_EMAIL_VERIFICATION_FAILURE,\n  USER_CONFIRM_REQUEST,\n  USER_CONFIRM_SUCCESS,\n  USER_CONFIRM_FAILURE,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAILURE,\n  USER_DETAILS_RESET,\n  USER_PROFILE_UPDATE_REQUEST,\n  USER_PROFILE_UPDATE_SUCCESS,\n  USER_PROFILE_UPDATE_FAILURE,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAILURE,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAILURE,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAILURE,\n} from \"../constants/userConstants\";\nimport {\n  ORDER_CREATE_RESET,\n  ORDER_USER_LIST_RESET,\n} from \"../constants/orderConstants\";\nimport axios from \"axios\";\n\n// login an user, can be a social login or a normal email verified login\nexport const loginUser = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: { ...data },\n    });\n    dispatch({\n      type: USER_LOGIN_REFRESH_SUCCESS,\n      payload: data.refreshToken,\n    });\n    // store the refresh token and the rest of the user info in the local storage\n    localStorage.setItem(\"refreshToken\", data.refreshToken);\n    localStorage.setItem(\"userInfo\", JSON.stringify({ ...data }));\n    // remove the variable that helps prompt the user that email is not verified, each time they login\n    localStorage.removeItem(\"promptEmailVerfication\");\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// used for refreshing the access tokens when the user logs in using email and password\nexport const refreshLogin = (email) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LOGIN_REFRESH_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/refresh\",\n      {\n        email,\n        token: userInfo.refreshToken,\n      },\n      config\n    );\n\n    if (data.success) {\n      dispatch({ type: USER_LOGIN_REFRESH_SUCCESS, payload: data });\n      const updatedUser = {\n        ...userInfo,\n        accessToken: data.accessToken,\n        refreshToken: userInfo.refreshToken,\n      };\n      // update the local storage\n      localStorage.setItem(\"userInfo\", JSON.stringify(updatedUser));\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: updatedUser });\n    } else if (!data.success) {\n      // set a variable in local storage which redirects to login page, if this refresh thing fails\n      localStorage.removeItem(\"userInfo\");\n      localStorage.setItem(\"redirectLogin\", \"true\"); // after refresh token also expires, redirect to login page after loggin out the user\n      dispatch({ type: USER_LOGOUT });\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_REFRESH_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// logout by removing all local storage info\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"redirectLogin\");\n  localStorage.removeItem(\"cartItems\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_CREATE_RESET });\n  dispatch({ type: ORDER_USER_LIST_RESET });\n};\n\n// register a new user with the form for name, email, password\nexport const registerUser = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// send an email for verification of the newly registered account\nexport const sendVerficationEmail = (email) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_EMAIL_VERIFICATION_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/confirm\", { email }, config);\n    dispatch({ type: USER_EMAIL_VERIFICATION_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_EMAIL_VERIFICATION_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// take the email token sent from the mail, and confirm the account once the link is clicked\nexport const confirmUser =\n  (emailToken, alreadyLoggedIn = false) =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_CONFIRM_REQUEST });\n      const { data } = await axios.get(`/api/users/confirm/${emailToken}`);\n\n      // remove variable meant to prompt the user for email verification\n      localStorage.removeItem(\"promptEmailVerfication\");\n      dispatch({ type: USER_CONFIRM_SUCCESS, payload: true });\n\n      if (alreadyLoggedIn) {\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n        dispatch({\n          type: USER_LOGIN_REFRESH_SUCCESS,\n          payload: data.refreshToken,\n        });\n        localStorage.setItem(\"refreshToken\", data.refreshToken);\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      }\n\n      localStorage.removeItem(\"promptEmailVerfication\");\n    } catch (error) {\n      dispatch({\n        type: USER_CONFIRM_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n// reset the user password and send one more verification email from the server\nexport const resetUserPassword =\n  (passwordToken, password) => async (dispatch) => {\n    try {\n      dispatch({ type: USER_RESET_PASSWORD_REQUEST });\n\n      // make the api call to reset the password\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.put(\n        \"/api/users/reset\",\n        { passwordToken, password },\n        config\n      );\n\n      dispatch({ type: USER_RESET_PASSWORD_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: USER_RESET_PASSWORD_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n// get user details for profile page\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.accessToken}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: { ...data },\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// update details in the user profile page\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_PROFILE_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.accessToken}`,\n      },\n    };\n\n    const { data } = await axios.put(\"/api/users/profile\", user, config);\n\n    dispatch({\n      type: USER_PROFILE_UPDATE_SUCCESS,\n      payload: { ...data },\n    });\n\n    // login the user after updating the information\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: { ...data },\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify({ ...data }));\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_UPDATE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// fetch a list of all users, for the admin panel view\nexport const listAllUsers =\n  (pageNumber = \"\") =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_LIST_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.accessToken}`,\n        },\n      };\n\n      const { data } = await axios.get(\n        `/api/users?pageNumber=${pageNumber}`,\n        config\n      );\n\n      dispatch({ type: USER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: USER_LIST_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n// delete the user from the admin panel view\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.accessToken}`,\n      },\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// update the user details\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.accessToken}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: { ...data },\n    });\n\n    if (data.id === userInfo.id) {\n      // // login the user after updating the information\n      const newUserInfo = {\n        ...userInfo,\n        ...userInfo,\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        isAdmin: data.isAdmin,\n        isConfirmed: data.isConfirmed,\n      };\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: newUserInfo,\n      });\n\n      localStorage.setItem(\"userInfo\", JSON.stringify(newUserInfo));\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useState } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  // search for the keyword by redirecting to homepage with param\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSearch} className=\"d-flex\">\n      {/* display searchbar inside navbar in large screens only */}\n      <InputGroup className=\"mt-2\">\n        <Form.Control\n          type=\"text\"\n          style={{\n            border: \"1px solid #2c3e50\",\n            borderRight: \"none\",\n          }}\n          name=\"keyword\"\n          className=\"mr-sm-2 ml-sm-4\"\n          onChange={(e) => setKeyword(e.target.value)}\n          placeholder=\"Search Products...\"\n          value={keyword}\n        />\n        <InputGroup.Text\n          style={{\n            background: \"white\",\n            border: \"1px solid #2c3e50\",\n            borderLeft: \"none\",\n          }}\n        >\n          <button\n            aria-label=\"search\"\n            style={{\n              margin: \"0\",\n              border: \"0\",\n              outline: \"0\",\n              background: \"transparent\",\n              padding: \"0\",\n            }}\n            type=\"submit\"\n          >\n            <i style={{ color: \"#95a5a6\" }} className=\"fas fa-search\" />\n          </button>\n        </InputGroup.Text>\n      </InputGroup>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { logoutUser } from \"../actions/userActions\";\nimport { Route } from \"react-router-dom\";\nimport SearchBox from \"./SearchBox\";\nimport \"../styles/header.css\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const cart = useSelector((state) => state.cart);\n  const { userInfo } = userLogin;\n  const { cartItems } = cart;\n\n  const [show1, setShow1] = useState(false); // to close dropdown when clicking anywhere outside\n  const [show2, setShow2] = useState(false); // to close dropdown when clicking anywhere outside\n  const [count, setCount] = useState(0);\n\n  // update count when new cart changes\n  useEffect(() => {\n    setCount(cartItems.reduce((acc, item) => acc + item.qty, 0));\n  }, [cartItems]);\n\n  // close the second dropdown when it is open and user clicks anywhere else\n  const handleDropdown2 = (e) => {\n    if (show2) {\n      setShow2(false);\n    } else {\n      setShow2(true);\n      setShow1(false);\n    }\n  };\n\n  // close the first dropdown when it is open and user clicks anywhere else\n  const handleDropdown1 = (e) => {\n    if (show1) {\n      setShow1(false);\n    } else {\n      setShow1(true);\n      setShow2(false);\n    }\n  };\n\n  // dispatch action to logout user\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    window.location.href = \"/\";\n  };\n\n  // render different navbars for large and small screens without navbar toggle\n  return (\n    <header>\n      {/* this section covers entire screen except the dropdown, to handle onclicks */}\n      <section\n        className=\"navbar-dropdown-cover\"\n        style={{\n          display:\n            window.innerHeight > 430 && (show1 || show2) ? \"block\" : \"none\",\n          minWidth: \"100%\",\n          height: \"100%\",\n          zIndex: \"100\",\n          position: \"absolute\",\n        }}\n        onClick={() => {\n          setShow1(false);\n          setShow2(false);\n        }}\n      />\n\n      {/* conditionally render different navbars for the mobile sreens */}\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              {/* <img src=\"/images/kosells.png\" className=\"nav-logo\" alt=\"logo\" /> */}\n              {\"\"} Facon\n            </Navbar.Brand>\n          </LinkContainer>\n\n          {/* history is available only inside Route, so this is used */}\n          {/* display searchbar inside navbar in large screens only */}\n          <Route\n            render={({ history }) => (\n              <div className=\"d-none d-md-block\">\n                <SearchBox history={history} />\n              </div>\n            )}\n          />\n\n          <Nav\n            className=\"ms-auto nav-mobile\"\n            style={\n              userInfo\n                ? {\n                    justifyContent: \"space-between\",\n                  }\n                : {\n                    justifyContent: \"space-evenly\",\n                  }\n            }\n          >\n            {userInfo && userInfo.isAdmin && (\n              <>\n                {/* display this only on mobile screens */}\n                <LinkContainer\n                  className=\"d-block d-md-none\"\n                  to=\"/admin/userlist\"\n                >\n                  <Nav.Link>\n                    <i className=\"fas fa-users\" />\n                  </Nav.Link>\n                </LinkContainer>\n                <LinkContainer\n                  className=\"d-block d-md-none\"\n                  to=\"/admin/orderlist\"\n                >\n                  <Nav.Link>\n                    <i className=\"fas fa-user-shield\" />\n                  </Nav.Link>\n                </LinkContainer>\n                <LinkContainer\n                  className=\"d-block d-md-none\"\n                  to=\"/admin/productlist\"\n                >\n                  <Nav.Link>\n                    <i className=\"fas fa-shopping-bag\" />\n                  </Nav.Link>\n                </LinkContainer>\n              </>\n            )}\n            <LinkContainer to=\"/cart\">\n              <Nav.Link>\n                {/* indicate cart size */}\n                {count ? (\n                  <div className=\"nav-cart-size\">\n                    <span\n                      style={\n                        count > 10\n                          ? { fontSize: \"0.6em\" }\n                          : { fontSize: \"0.7em\" }\n                      }\n                    >\n                      {count}\n                    </span>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <i className=\"fas fa-shopping-cart navbar-icons\" />{\" \"}\n                {!(userInfo && userInfo.isAdmin) || window.innerWidth >= 430\n                  ? \"Cart\"\n                  : \"\"}\n              </Nav.Link>\n            </LinkContainer>\n            {userInfo && userInfo.isAdmin && (\n              // show this only on md screens and above\n              <NavDropdown\n                className=\"d-none d-md-block\"\n                title=\"Admin\"\n                id=\"adminMenu\"\n                show={show2}\n                onClick={handleDropdown2}\n              >\n                <LinkContainer to=\"/admin/userlist\">\n                  <NavDropdown.Item>Users</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to=\"/admin/productlist\">\n                  <NavDropdown.Item>Products</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to=\"/admin/orderlist\">\n                  <NavDropdown.Item>Orders</NavDropdown.Item>\n                </LinkContainer>\n              </NavDropdown>\n            )}\n\n            {userInfo && (\n              // show this only on mobile screens\n              <Nav.Link className=\"d-block d-md-none\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt navbar-icons\" />{\" \"}\n                {!(userInfo && userInfo.isAdmin) && \"Logout\"}\n              </Nav.Link>\n            )}\n\n            {userInfo ? (\n              <div className=\"nav-avatar-container\">\n                {/* show this container only on mobile screens */}\n                <LinkContainer to=\"/profile\" className=\"d-block d-md-none\">\n                  <Nav.Link>\n                    <img\n                      src={userInfo.avatar}\n                      className=\"nav-avatar\"\n                      alt={userInfo.name}\n                    />\n                  </Nav.Link>\n                </LinkContainer>\n                <img\n                  src={userInfo.avatar}\n                  className=\"nav-avatar d-none d-md-block\"\n                  alt={userInfo.name}\n                />\n\n                {/* show this dropdown only on large screens */}\n                <NavDropdown\n                  className=\"d-none d-md-block\"\n                  title={userInfo.name}\n                  id={userInfo.id}\n                  show={show1}\n                  onClick={handleDropdown1}\n                >\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={handleLogout}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </div>\n            ) : (\n              <LinkContainer to=\"/login\" variant=\"primary\">\n                <Nav.Link>\n                  <i className=\"fas fa-user navbar-icons\" /> Sign In\n                </Nav.Link>\n              </LinkContainer>\n            )}\n          </Nav>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../styles/footer.css\";\n\nconst Footer = () => {\n  return (\n      <footer className=\"footer-container\">\n        <div className=\"footer-copyright\">&copy; {new Date().getFullYear()} Facon</div>\n      </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    // show full/half star icon depending on rating value\n    <div className=\"rating\">\n      {[1, 2, 3, 4, 5].map((ele, idx) => (\n        <span key={idx}>\n          <i\n            style={{ color: color, fontSize: \"0.9em\" }}\n            className={\n              value >= ele\n                ? \"fas fa-star\"\n                : value >= ele - 0.5\n                ? \"fas fa-star-half-alt\"\n                : \"far fa-star\"\n            }\n            title={`${value} Stars`}\n          />\n        </span>\n      ))}\n      <span style={{ fontSize: \"0.9em\" }}>{text && text}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Rating;\n","import React from \"react\";\nimport Rating from \"./Rating\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport \"../styles/product.css\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"mt-3 p-0\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img\n          loading=\"lazy\"\n          className=\"product-image\"\n          src={product.image}\n          variant=\"top\"\n          alt={product.name}\n        />\n      </Link>\n\n      <Card.Body>\n        <Link\n          to={`/product/${product._id}`}\n          style={{ color: \"dimgray\", textDecoration: \"none\" }}\n        >\n          <Card.Title className=\"product-title\" as=\"p\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          {product && product.rating && (\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} Review${\n                product.numReviews > 1 ? \"s\" : \"\"\n              }`}\n            />\n          )}\n        </Card.Text>\n\n        <Card.Text as=\"h4\">\n          {product.price &&\n            product.price.toLocaleString(\"en-IN\", {\n              maximumFractionDigits: 2,\n              style: \"currency\",\n              currency: \"INR\",\n            })}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n// different paginate components for products, and for admin panel view\nconst Paginate = ({\n  pages,\n  page,\n  isAdmin = false,\n  keyword = \"\",\n  forOrders = false,\n  forUsers = false,\n}) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((ele) => (\n          <LinkContainer\n            key={ele + 1}\n            to={\n              isAdmin\n                ? forOrders\n                  ? `/admin/orderlist/${ele + 1}`\n                  : forUsers\n                  ? `/admin/userlist/${ele + 1}`\n                  : `/admin/productlist/${ele + 1}`\n                : keyword\n                ? `/search/${keyword}/page/${ele + 1}`\n                : `/page/${ele + 1}`\n            }\n          >\n            <Pagination.Item active={ele + 1 === Number(page)}>\n              {ele + 1}\n            </Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React, { useState, useEffect } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, duration, children }) => {\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    setVisible(true);\n  }, []);\n\n  useEffect(() => {\n    if (duration) {\n      setTimeout(() => setVisible(false), duration * 1000);\n    }\n  }, [duration]);\n\n  return (\n    <Alert\n      onClose={() => setVisible(false)}\n      className=\"alert-custom\"\n      style={visible ? { display: \"block\" } : { display: \"none\" }}\n      variant={variant}\n    >\n      {children}\n    </Alert>\n  );\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n  dismissible: false,\n};\n\nexport default Message;\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAILURE = 'PRODUCT_LIST_FAILURE';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAILURE = 'PRODUCT_DETAILS_FAILURE';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAILURE = 'PRODUCT_DELETE_FAILURE';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAILURE = 'PRODUCT_CREATE_FAILURE';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAILURE = 'PRODUCT_UPDATE_FAILURE';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAILURE = 'PRODUCT_CREATE_REVIEW_FAILURE';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n\nexport const PRODUCT_TOP_RATED_REQUEST = 'PRODUCT_TOP_RATED_REQUEST';\nexport const PRODUCT_TOP_RATED_SUCCESS = 'PRODUCT_TOP_RATED_SUCCESS';\nexport const PRODUCT_TOP_RATED_FAILURE = 'PRODUCT_TOP_RATED_FAILURE';\n","import {\r\n  PRODUCT_DETAILS_FAILURE,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAILURE,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_DELETE_FAILURE,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAILURE,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAILURE,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAILURE,\r\n  PRODUCT_TOP_RATED_REQUEST,\r\n  PRODUCT_TOP_RATED_SUCCESS,\r\n  PRODUCT_TOP_RATED_FAILURE,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\n// list orders based on keyword and page number when paginated\r\nexport const listProducts =\r\n  (keyword = \"\", pageNumber = \"\", pageSize = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`\r\n      );\r\n\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// fetch details of a particular product\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// delete a particular product by taking an id\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/products/${id}`, config);\r\n\r\n    data && dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// create a product, when the user is an admin\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products/`, {}, config);\r\n\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update the product details from the admin panel view\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// create a new product review for particular product\r\nexport const createProductReview =\r\n  (productID, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.accessToken}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productID}/reviews`, review, config);\r\n\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// fetch the top rated products for the carousel\r\nexport const getTopRatedProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_RATED_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products/top\");\r\n\r\n    dispatch({ type: PRODUCT_TOP_RATED_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_RATED_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\nimport \"../styles/skeleton.css\";\n\nconst BasicSkeleton = ({ type }) => {\n  const classes = `skeleton ${type}`;\n\n  return <div className={classes} />;\n};\n\nexport default BasicSkeleton;\n","import React from \"react\";\n\nconst SkeletonShimmer = () => {\n  return (\n    <div className=\"shimmer-wrapper\">\n      <div className=\"shimmer\" />\n    </div>\n  );\n};\n\nexport default SkeletonShimmer;\n","import React from \"react\";\nimport BasicSkeleton from \"./BasicSkeleton\";\nimport SkeletonShimmer from \"./SkeletonShimmer\";\n\nconst CarouselSkeleton = () => {\n  return (\n    <div style={{ position: \"relative\", overflow: \"hidden\" }}>\n      <BasicSkeleton type=\"box\" />\n      <SkeletonShimmer />\n    </div>\n  );\n};\n\nexport default CarouselSkeleton;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Carousel, CarouselItem, Image } from \"react-bootstrap\";\nimport Message from \"./Message\";\nimport { getTopRatedProducts } from \"../actions/productActions\";\nimport \"../styles/product-carousel.css\";\nimport CarouselSkeleton from \"../components/CarouselSkeleton\";\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { error, loading, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(getTopRatedProducts());\n  }, [dispatch]);\n  return (\n    <>\n      {loading && <CarouselSkeleton />}\n      {error && (\n        <Message  variant=\"danger\">\n          {error}\n        </Message>\n      )}\n      {/* render carousel only on large screens */}\n      <Carousel\n        style={{ marginTop: \"0.5em\" }}\n        pause=\"hover\"\n        className=\"bg-primary\"\n        indicators={false}\n        interval={10000}\n      >\n        {products &&\n          products.map((product) => (\n            <CarouselItem key={product._id}>\n              <Link to={`/product/${product._id}`}>\n                <Image src={product.image} alt={product.name} fluid />\n                <Carousel.Caption className=\"carousel-caption\">\n                  {product.name} (\n                  {product.price.toLocaleString(\"en-IN\", {\n                    maximumFractionDigits: 2,\n                    style: \"currency\",\n                    currency: \"INR\",\n                  })}\n                  )\n                </Carousel.Caption>\n              </Link>\n            </CarouselItem>\n          ))}\n      </Carousel>\n    </>\n  );\n};\n\nexport default ProductCarousel;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n    </Helmet>\n  );\n};\n\nMeta.defaultProps = {\n  title: \"Welcome to Facon\",\n  keywords: \"Shoe, Clothing, Electronics, Accessories\",\n  description: \"Buy the best products at the lowest prices\",\n};\nexport default Meta;\n","import React from \"react\";\nimport BasicSkeleton from \"./BasicSkeleton\";\nimport SkeletonShimmer from \"./SkeletonShimmer\";\n\nconst ProductSkeleton = () => {\n  return (\n    <div className=\"skeleton-product-wrapper\">\n      <BasicSkeleton type=\"box\" />\n      <BasicSkeleton type=\"text\" />\n      <BasicSkeleton type=\"text\" />\n      <SkeletonShimmer />\n    </div>\n  );\n};\n\nexport default ProductSkeleton;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Product from \"../components/Product\";\nimport Paginate from \"../components/Paginate\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport Meta from \"../components/Meta\";\nimport { listProducts } from \"../actions/productActions\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\nimport Message from \"../components/Message\";\nimport SearchBox from \"../components/SearchBox\";\nimport ProductSkeleton from \"../components/ProductSkeleton\";\n\nconst HomePage = ({ match, history }) => {\n  const keyword = match.params.keyword; // to search for products\n  const pageNumber = Number(match.params.pageNumber) || 1; // current page number in the paginated display\n  const [promptVerfication, setPromptVerification] = useState(false); // prompt user to verify email if not yet confirmed\n  const [products, setProducts] = useState(null);\n  const [productAvailable, setProductAvailable] = useState(false);\n  const dispatch = useDispatch();\n\n  // get the products list, userinfo and user details form the redix store\n  const productList = useSelector((state) => state.productList);\n  let { loading, error, pages } = productList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: userInfoError } = userDetails;\n\n  // fetch the user details\n  useEffect(() => {\n    userInfo\n      ? userInfo.isSocialLogin\n        ? dispatch(getUserDetails(userInfo.id))\n        : dispatch(getUserDetails(\"profile\"))\n      : dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // refresh token to get new access token if error in user details\n  useEffect(() => {\n    if (userInfoError && userInfo && !userInfo.isSocialLogin) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      dispatch(refreshLogin(user?.email));\n    }\n  }, [userInfoError, dispatch, userInfo]);\n\n  // set a state variable to true or false depending on if products is avialable in the state\n  useEffect(() => {\n    if (products) {\n      products.length ? setProductAvailable(true) : setProductAvailable(false);\n    }\n  }, [products]);\n\n  // fetch products from redux store into local state\n  useEffect(() => {\n    if (productList) {\n      if (productList.products) setProducts([...productList.products]);\n    }\n  }, [productList]);\n\n  // list products based on keyword and pagenumber\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, keyword, pageNumber]);\n\n  // check if user needs to be promted about email verification on page load\n  useEffect(() => {\n    setPromptVerification(\n      localStorage.getItem(\"promptEmailVerfication\") === \"true\" ? true : false\n    );\n  }, []);\n\n  return (\n    <>\n      <Meta />\n      {/* display carousel only on larger screens */}\n      {!keyword ? (\n        window.innerWidth > 430 && <ProductCarousel />\n      ) : (\n        <Link className=\"btn btn-outline btn-outline-primary my-2\" to=\"/\">\n          Go Back\n        </Link>\n      )}\n      {/* display this search bar on home page on mobile screens */}\n      <div className=\"d-block d-md-none\">\n        <SearchBox history={history} />\n      </div>\n\n      {/* if the user needs to be prompted about email verification, show this message */}\n      {promptVerfication ? (\n        <Message  variant=\"info\" duration={10}>\n          Account Created! Please check your email to verify your account and\n          start shopping.\n        </Message>\n      ) : null}\n\n      {error ? (\n        <Message  variant=\"danger\" duration={10}>\n          {error}\n        </Message>\n      ) : !loading && products ? (\n        <>\n          <div className=\"mt-2\" style={{display:\"flex\", justifyContent:\"space-between\",alignItems:\"center\"}}>\n            <h2>All Products</h2>\n            <div class=\"buttons_container\">\n            <div class=\"dropdown\">\n              <button\n                class=\"btn btn-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n              Sort By Category\n              </button>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\">\n                Sort By Price\n                </a>\n              </div>\n              </div>\n            </div>\n          </div>\n          <Row>\n            {products.length\n              ? products.map((product) => {\n                  return (\n                    <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\n                      <Product product={product} />\n                    </Col>\n                  );\n                })\n              : keyword &&\n                !productAvailable && (\n                  //   show this only if user has searched for some item and it is not available\n                  <Col className=\"text-center\">\n                    <div>\n                      <i className=\"far fa-frown\" /> No items found for this\n                      search query\n                    </div>\n                    Go Back to the <Link to=\"/\">Home Page</Link>\n                  </Col>\n                )}\n          </Row>\n          <Paginate\n            className=\"mt-auto text-center\"\n            page={pageNumber}\n            keyword={keyword ? keyword : \"\"}\n            pages={pages}\n          />\n        </>\n      ) : (\n        loading &&\n        products &&\n        products.length === 0 && (\n          <Row>\n            {[1, 2, 3, 4].map((ele) => {\n              return (\n                <Col sm={12} md={6} lg={4} xl={3} key={ele}>\n                  <div>\n                    <ProductSkeleton />\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n        )\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\n\nconst ImageMagnifier = ({\n  src,\n  alt,\n  title,\n  width,\n  height,\n  magnifierHeight = 200,\n  magnifieWidth = 200,\n  zoomLevel = 1.5,\n}) => {\n  const [[x, y], setXY] = useState([0, 0]);\n  const [[imgWidth, imgHeight], setSize] = useState([0, 0]);\n  const [showMagnifier, setShowMagnifier] = useState(false);\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        height: height,\n        width: width,\n      }}\n    >\n      <Image\n        className=\"product-image\"\n        src={src}\n        style={{ height: height, width: width }}\n        fluid\n        title={title}\n        onMouseEnter={(e) => {\n          // update image size and turn-on magnifier\n          const elem = e.currentTarget;\n          const { width, height } = elem.getBoundingClientRect();\n          setSize([width, height]);\n          setShowMagnifier(true);\n        }}\n        onMouseMove={(e) => {\n          // update cursor position\n          const elem = e.currentTarget;\n          const { top, left } = elem.getBoundingClientRect();\n\n          // calculate cursor position on the image\n          const x = e.pageX - left - window.pageXOffset;\n          const y = e.pageY - top - window.pageYOffset;\n          setXY([x, y]);\n        }}\n        onMouseLeave={() => {\n          // close magnifier\n          setShowMagnifier(false);\n        }}\n        alt={alt}\n      />\n\n      <div\n        style={{\n          display: showMagnifier ? \"\" : \"none\",\n          // display: window.innerWidth <= 468 ? 'none' : '',\n          position: \"absolute\",\n          // prevent maginier blocks the mousemove event of img\n          pointerEvents: \"none\",\n          height: `${magnifierHeight}px`,\n          width: `${magnifieWidth}px`,\n          // move element center to cursor pos\n          top: `${y - magnifierHeight / 2.5}px`,\n          left: `${x - magnifieWidth / 2.5}px`,\n          opacity: \"1\", // reduce opacity so you can verify position\n          border: \"1px solid lightgray\",\n          backgroundColor: \"white\",\n          backgroundImage: `url('${src}')`,\n          backgroundRepeat: \"no-repeat\",\n          borderRadius: \"50%\",\n\n          //calculate zoomed image size\n          backgroundSize: `${imgWidth * zoomLevel}px ${\n            imgHeight * zoomLevel\n          }px`,\n\n          //calculete position of zoomed image.\n          backgroundPositionX: `${-x * zoomLevel + magnifieWidth / 2}px`,\n          backgroundPositionY: `${-y * zoomLevel + magnifierHeight / 2}px`,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ImageMagnifier;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"../styles/loader.css\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      variant=\"primary\"\n      className=\"loader\"\n    />\n  );\n};\n\nexport default Loader;\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAILURE,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAILURE,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAILURE,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAILURE,\n  ORDER_USER_LIST_REQUEST,\n  ORDER_USER_LIST_SUCCESS,\n  ORDER_USER_LIST_FAILURE,\n  ORDER_ALL_LIST_REQUEST,\n  ORDER_ALL_LIST_SUCCESS,\n  ORDER_ALL_LIST_FAILURE,\n  ORDER_SHIPPED_REQUEST,\n  ORDER_SHIPPED_SUCCESS,\n  ORDER_SHIPPED_FAILURE,\n} from \"../constants/orderConstants\";\n\nimport axios from \"axios\";\n\n// get all the details about the order and dispatch only of currently logged in\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.accessToken}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/orders/\", order, config);\n\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// get details about a particular order\nexport const getOrderDetails = (orderID) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n\t\theaders: {\n\t\t  \"Content-Type\": \"application/json\",\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\n\t\t},\n\t  };\n\n    const { data } = await axios.get(`/api/orders/${orderID}`, config);\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// update the current order to that of a paid one, and store the correct payment result\nexport const payOrder =\n  (orderID, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_PAY_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n\t\theaders: {\n\t\t  \"Content-Type\": \"application/json\",\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\n\t\t},\n\t  };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderID}/pay`,\n        paymentResult,\n        config\n      );\n      \n\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n  // Set the current order as Shipped, only when logged in user is an admin\nexport const shippedOrder = (orderID) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_SHIPPED_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\tconst config = {\n\t\theaders: {\n\t\t  \"Content-Type\": \"application/json\",\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\n\t\t},\n\t  };\n    const { data } = await axios.put(\n      `/api/orders/${orderID}/ship`,\n      {},\n      config\n    );\n\n    dispatch({ type: ORDER_SHIPPED_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_SHIPPED_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Set the current order as delivered, only when logged in user is an admin\nexport const deliverOrder = (orderID) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DELIVER_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\tconst config = {\n\t\theaders: {\n\t\t  \"Content-Type\": \"application/json\",\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\n\t\t},\n\t  };\n    const { data } = await axios.put(\n      `/api/orders/${orderID}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// list all the orders of a particular user\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_USER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n\t\theaders: {\n\t\t  \"Content-Type\": \"application/json\",\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\n\t\t},\n\t  };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({ type: ORDER_USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_USER_LIST_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// list all orders for the admin panel view, include the pagenumber being fetched\nexport const listAllOrders =\n  (pageNumber = \"\") =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_ALL_LIST_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n\t  const config = {\n\t\theaders: {\n\t\t  \"Content-Type\": \"application/json\",\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\n\t\t},\n\t  };\n      const { data } = await axios.get(\n        `/api/orders?pageNumber=${pageNumber}`,\n        config\n      );\n\n      dispatch({ type: ORDER_ALL_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_ALL_LIST_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n","// there is a need to convert mongodb dates to readable date formats in various pages\n// this util function does that, and has a second argument to decide whether the time has to be included\nconst getDateString = (date, showTime = true) => {\n\tconst options = {\n\t\tyear: 'numeric',\n\t\tmonth: 'short',\n\t\tday: 'numeric',\n\t};\n\tconst timeStr = new Date(date).toLocaleTimeString('en', {\n\t\ttimeStyle: 'short',\n\t\thour12: true,\n\t\ttimeZone: 'IST',\n\t});\n\n\tlet result = '';\n\tif (showTime) result += `${timeStr} `;\n\treturn result + new Date(date).toLocaleDateString('en', options);\n};\n\nexport default getDateString;\n","/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, Button, ListGroup, Form } from \"react-bootstrap\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport ImageMagnifier from \"../components/ImageMagnifier\"; // to magnify image on hover\nimport Rating from \"../components/Rating\";\nimport Meta from \"../components/Meta\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport getDateString from \"../utils/getDateString\";\nimport \"../styles/product-page.css\";\n\nconst ProductPage = ({ history, match }) => {\n  const [quantity, setQuantity] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [allReviews, setAllReviews] = useState([]);\n  const [hasOrderedItem, setHasOrderedItem] = useState(false); // bool to check if the user has ordered this product\n  const [showReviewForm, setShowReviewForm] = useState(false); // bool to decide whether to show the review form or not\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, product, error } = productDetails;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: userLoginError } = userDetails;\n\n  const productCreateReview = useSelector((state) => state.productCreateReview);\n  const {\n    loading: loadingCreateReview,\n    success: successCreateReview,\n    error: errorCreateReview,\n  } = productCreateReview;\n\n  const orderListUser = useSelector((state) => state.orderListUser);\n  const { orders } = orderListUser;\n\n  // fetch user login info\n  useEffect(() => {\n    userInfo && dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // refresh the access tokens for accessing user details\n  useEffect(() => {\n    if (userLoginError && userInfo) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [userLoginError, dispatch, userInfo]);\n\n  useEffect(() => {\n    dispatch(listMyOrders());\n  }, [dispatch]);\n\n  // add a new review, and reset the stored product review in the redux store\n  useEffect(() => {\n    if (successCreateReview) {\n      window.alert(\"Review Submitted!!\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [match, dispatch, successCreateReview]);\n\n  useEffect(() => {\n    if (product && product.reviews && userInfo) {\n      let flag = 0; // to check if this user has already reviewed this product\n      for (let review of product.reviews) {\n        if (review.user === userInfo.id) {\n          flag = 1;\n          break;\n        }\n      }\n      flag ? setShowReviewForm(false) : setShowReviewForm(true);\n    } else {\n      setShowReviewForm(true);\n    }\n  }, [product, userInfo]);\n\n  useEffect(() => {\n    if (orders && orders.length) {\n      let flag = 0; // to check is this user has ordered this item\n      for (let obj of orders) {\n        for (let ele of obj.orderItems) {\n          if (ele.product.toString() === match.params.id) {\n            flag = 1;\n            break;\n          }\n        }\n      }\n      flag ? setHasOrderedItem(true) : setHasOrderedItem(false);\n    } else {\n      setHasOrderedItem(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orders]);\n\n  // arrange all reviews in reverse chronological order\n  useEffect(() => {\n    if (product && product.reviews) {\n      const sortedArr = product.reviews.sort(\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n      );\n      setAllReviews(sortedArr);\n    }\n  }, [product]);\n\n  const handleAddToCart = (e) => {\n    history.push(`/cart/${match.params.id}?qty=${quantity}`);\n  };\n\n  const handleReviewSubmit = (e) => {\n\te.preventDefault();\t\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-outline-primary my-2\" to=\"/\">\n        Go Back\n      </Link>\n      {product && (!product._id || product._id !== match.params.id) ? (\n        <Loader />\n      ) : error ? (\n        <Message  variant=\"danger\" duration={10}>\n          {error}\n        </Message>\n      ) : product ? (\n        <>\n          <Meta title={`${product.name}`} />\n          <Row>\n            <Col md={6}>\n              <ImageMagnifier\n                src={product.image}\n                alt={product.name}\n                title={product.name}\n              />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  {product && product.rating && (\n                    <Rating\n                      value={product.rating}\n                      text={`${product.numReviews} Review${\n                        product.numReviews > 1 ? \"s\" : \"\"\n                      }`}\n                    />\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Price: </strong>\n                  {product.price &&\n                    product.price.toLocaleString(\"en-IN\", {\n                      maximumFractionDigits: 2,\n                      style: \"currency\",\n                      currency: \"INR\",\n                    })}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Description:</strong> {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        <strong>Price: </strong>\n                      </Col>\n                      <Col>\n                        {product.price &&\n                          product.price.toLocaleString(\"en-IN\", {\n                            maximumFractionDigits: 2,\n                            style: \"currency\",\n                            currency: \"INR\",\n                          })}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                </ListGroup>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        <strong>Status: </strong>\n                      </Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>\n                          <strong>Qty:</strong>\n                        </Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={quantity}\n                            onChange={(e) => setQuantity(e.target.value)}\n                          >\n                            {/* create as many options as the countInStock */}\n                            {[...Array(product.countInStock).keys()].map(\n                              (ele) => (\n                                <option key={ele + 1} value={ele + 1}>\n                                  {ele + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Row>\n                      <Button\n                        onClick={handleAddToCart}\n                        type=\"button\"\n                        className=\"btn-block btn-md\"\n                        disabled={product.countInStock <= 0}\n                      >\n                        Add To Cart\n                      </Button>\n                    </Row>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2 className=\"mt-3\">Reviews</h2>\n              {(!product.reviews || !product.reviews.length) && (\n                <Message variant=\"secondary\">No Reviews Yet</Message>\n              )}\n              <ListGroup variant=\"flush\">\n                {allReviews.map((item) => {\n                  return (\n                    <ListGroup.Item key={item._id}>\n                      <div>\n                        <img\n                          src={item.avatar}\n                          alt={item.name}\n                          className=\"review-avatar\"\n                        />\n                        <strong>{item.name}</strong>\n                      </div>\n                      <Rating value={item.rating} />\n                      <p\n                        style={{\n                          margin: \"0\",\n                          fontSize: \"1.1em\",\n                        }}\n                      >\n                        {item.review}\n                      </p>\n                      <small\n                        style={{\n                          fontSize: \"0.9em\",\n                        }}\n                      >\n                        {getDateString(item.createdAt, false)}\n                      </small>\n                    </ListGroup.Item>\n                  );\n                })}\n                {hasOrderedItem && !showReviewForm && (\n                  <Message >\n                    You have already reviewed this product\n                  </Message>\n                )}\n                {hasOrderedItem && showReviewForm && (\n                  <>\n                    <h2>Write a Customer Review</h2>\n                    {errorCreateReview && (\n                      <Message  variant=\"info\" duration={10}>\n                        {errorCreateReview}\n                      </Message>\n                    )}\n                    {loadingCreateReview && <Loader />}\n                    <Form onSubmit={handleReviewSubmit}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option default>Choose Rating</option>\n                          <option value=\"1\">1 - Bad</option>\n                          <option value=\"2\">2 - Poor</option>\n                          <option value=\"3\">3 - Fair</option>\n                          <option value=\"4\">4 - Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <FloatingLabel\n                          controlId=\"commenttext\"\n                          label=\"Comment\"\n                          className=\"my-3\"\n                        >\n                          <Form.Control\n                            as=\"textarea\"\n                            placeholder=\"Leave a comment here\"\n                            row=\"3\"\n                            onChange={(e) => setComment(e.target.value)}\n                            value={comment}\n                          />\n                        </FloatingLabel>\n                      </Form.Group>\n                      <div className=\"d-grid\">\n                        <Button type=\"submit\">Submit Review</Button>\n                      </div>\n                    </Form>\n                  </>\n                )}\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default ProductPage;\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_RESET = 'CART_RESET';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","import axios from 'axios';\nimport {\n\tCART_ADD_ITEM,\n\tCART_REMOVE_ITEM,\n\tCART_SAVE_SHIPPING_ADDRESS,\n\tCART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\n// get the product id and the quantity of the item to add to the cart\nexport const addItem = (id, qty) => async (dispatch, getState) => {\n\ttry {\n\t\tconst { data } = await axios.get(`/api/products/${id}`);\n\t\tdispatch({\n\t\t\ttype: CART_ADD_ITEM,\n\t\t\tpayload: {\n\t\t\t\tproduct: data._id,\n\t\t\t\tname: data.name,\n\t\t\t\timage: data.image,\n\t\t\t\tprice: data.price,\n\t\t\t\tcountInStock: data.countInStock,\n\t\t\t\tqty,\n\t\t\t},\n\t\t});\n\n\t\t// update the local storage with the new cart\n\t\tlocalStorage.setItem(\n\t\t\t'cartItems',\n\t\t\tJSON.stringify(getState().cart.cartItems)\n\t\t);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\n// get the product id to be removed from the cart\nexport const removeItem = (id) => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: CART_REMOVE_ITEM,\n\t\t\tpayload: id,\n\t\t});\n\t\t// update the local storage with the updated cart\n\t\tlocalStorage.setItem(\n\t\t\t'cartItems',\n\t\t\tJSON.stringify(getState().cart.cartItems)\n\t\t);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\n// get the shipping address data and dispatch corresponding action\nexport const saveShippingAddress = (data) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: CART_SAVE_SHIPPING_ADDRESS,\n\t\t\tpayload: data,\n\t\t});\n\t\tlocalStorage.setItem('shippingAddress', JSON.stringify(data));\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\n// get the option for payment and update the local storage as well\nexport const savePaymentMethod = (data) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: CART_SAVE_PAYMENT_METHOD,\n\t\t\tpayload: data,\n\t\t});\n\t\tlocalStorage.setItem('paymentMethod', JSON.stringify(data));\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ButtonGroup,\n  ListGroup,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Meta from \"../components/Meta\";\nimport Message from \"../components/Message\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\nimport { addItem, removeItem } from \"../actions/cartActions\";\n\nconst CartPage = ({ match, location, history }) => {\n  const [totalItems, setTotalItems] = useState(0);\n  const productID = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1; // fetch from the query string\n  const dispatch = useDispatch();\n\n  // get cart, userInfo and userdetails from redux store\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error } = userDetails;\n\n  // get user details depending on what type of login it is, dispatch with correspnding argument\n  useEffect(() => {\n    userInfo && dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // store total items to local state\n  useEffect(() => {\n    if (cartItems) {\n      setTotalItems(cartItems.reduce((acc, item) => acc + item.qty, 0));\n    }\n  }, [cartItems]);\n\n  // if userdetails shows error, then use refresh token to get new access tokens\n  useEffect(() => {\n    if (error && userInfo ) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [error, dispatch, userInfo]);\n\n  // add item to cart\n  useEffect(() => {\n    if (productID) {\n      dispatch(addItem(productID, qty));\n    }\n  }, [dispatch, productID, qty]);\n\n  // remove item from cart\n  const handleRemoveFromCart = (id) => {\n    dispatch(removeItem(id));\n  };\n\n  // proceed to shipping address page, which is the next step in placing an order\n  const handleCheckout = (e) => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Row>\n      <Meta title=\"My Cart | Facon\" />\n      <Col md={8}>\n        <h1>Shopping Cart.</h1>\n        {!cartItems.length ? (\n          <Message>\n            Your Cart is empty. <Link to=\"/\">Go Back.</Link>{\" \"}\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Col md={2}>\n                    <Image\n                      className=\"product-image\"\n                      src={item.image}\n                      alt={item.name}\n                      fluid\n                      rounded\n                    />\n                  </Col>\n                  <Col md={4}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col\n                    md={3}\n                    className=\"d-none d-md-flex\"\n                    style={{\n                      alignItems: \"center\",\n                      justifyContent: \"space-evenly\",\n                    }}\n                  >\n                    {item.price.toLocaleString(\"en-IN\", {\n                      maximumFractionDigits: 2,\n                      style: \"currency\",\n                      currency: \"INR\",\n                    })}\n\n                    <div>\n                      <i\n                        style={{ fontSize: \"0.7em\" }}\n                        className=\"fas fa-times\"\n                      />{\" \"}\n                      {item.qty}\n                    </div>\n                  </Col>\n                  {/* display this col only for larger screens */}\n                  <Col\n                    md={3}\n                    className=\"d-none d-md-flex\"\n                    style={{\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <ButtonGroup aria-label=\"Addtocart\">\n                      <Button\n                        style={{\n                          outline: \"none\",\n                          borderRight: \"1px solid white\",\n                        }}\n                        disabled={item.qty >= item.countInStock}\n                        onClick={() => {\n                          dispatch(addItem(item.product, Number(item.qty + 1)));\n                        }}\n                        variant=\"primary\"\n                      >\n                        <i className=\"fas fa-plus\" />\n                      </Button>\n                      <Button\n                        style={{\n                          outline: \"none\",\n                          borderLeft: \"1px solid white\",\n                        }}\n                        variant=\"primary\"\n                        disabled={item.qty === 1}\n                        onClick={() => {\n                          dispatch(addItem(item.product, Number(item.qty - 1)));\n                        }}\n                      >\n                        <i className=\"fas fa-minus\" />\n                      </Button>\n                    </ButtonGroup>\n                    <Button\n                      type=\"button\"\n                      onClick={() => handleRemoveFromCart(item.product)}\n                    >\n                      <i className=\"fas fa-trash\" />\n                    </Button>\n                  </Col>\n                  {/* display this col only on mobile screens */}\n                  <Col\n                    className=\"d-flex d-md-none mt-2\"\n                    style={{\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <div\n                      className=\"d-flex\"\n                      style={{\n                        fontSize: \"1.2em\",\n                        width: \"50%\",\n                      }}\n                    >\n                      {item.price.toLocaleString(\"en-IN\", {\n                        maximumFractionDigits: 2,\n                        style: \"currency\",\n                        currency: \"INR\",\n                      })}\n\n                      <div className=\"ms-1\">\n                        <i\n                          style={{\n                            fontSize: \"0.7em\",\n                          }}\n                          className=\"fas fa-times\"\n                        />{\" \"}\n                        {item.qty}\n                      </div>\n                    </div>\n\n                    <div\n                      className=\"d-flex\"\n                      style={{\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        width: \"50%\",\n                      }}\n                    >\n                      <Button\n                        type=\"button\"\n                        onClick={() => handleRemoveFromCart(item.product)}\n                      >\n                        <i className=\"fas fa-trash\" />\n                      </Button>\n                      <Button\n                        style={{\n                          outline: \"none\",\n                          borderRight: \"1px solid white\",\n                        }}\n                        disabled={item.qty >= item.countInStock}\n                        onClick={() => {\n                          dispatch(addItem(item.product, Number(item.qty + 1)));\n                        }}\n                        variant=\"primary\"\n                      >\n                        <i className=\"fas fa-plus\" />\n                      </Button>\n                      <Button\n                        style={{\n                          outline: \"none\",\n                          borderLeft: \"1px solid white\",\n                        }}\n                        variant=\"primary\"\n                        disabled={item.qty === 1}\n                        onClick={() => {\n                          dispatch(addItem(item.product, Number(item.qty - 1)));\n                        }}\n                      >\n                        <i className=\"fas fa-minus\" />\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4} className=\"mt-3\">\n        <ListGroup>\n          <Card variant=\"flush\">\n            <ListGroup.Item>\n              <h2 className=\"text-center\">\n                Subtotal ({totalItems}) Item\n                {totalItems > 1 && \"s\"}\n              </h2>\n              <strong>\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toLocaleString(\"en-IN\", {\n                    maximumFractionDigits: 2,\n                    style: \"currency\",\n                    currency: \"INR\",\n                  })}\n              </strong>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <div className=\"d-grid\">\n                <Button\n                  type=\"button\"\n                  size=\"md\"\n                  disabled={!cartItems.length}\n                  onClick={handleCheckout}\n                >\n                  Proceed to checkout\n                </Button>\n              </div>\n            </ListGroup.Item>\n          </Card>\n        </ListGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartPage;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { loginUser } from \"../actions/userActions\";\n\nconst LoginPage = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(loginUser(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { registerUser } from \"../actions/userActions\";\n\nconst RegisterPage = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(registerUser(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  InputGroup,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  sendVerficationEmail,\r\n  getUserDetails,\r\n  updateUserProfile,\r\n  refreshLogin,\r\n} from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\r\nimport Meta from \"../components/Meta\";\r\nimport axios from \"axios\";\r\nimport getDateString from \"../utils/getDateString\";\r\nimport \"../styles/profile-page.css\";\r\n\r\nconst ProfilePage = ({ history }) => {\r\n  const inputFile = useRef(null);\r\n  const [showSubmitButton, setShowSubmitButton] = useState(false); // sisable the submit button unless some user detail is changed by user\r\n  const [typePassword, setTypePassword] = useState(\"password\");\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [allOrders, setAllOrders] = useState([]);\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [errorImageUpload, setErrorImageUpload] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userProfileUpdate = useSelector((state) => state.userProfileUpdate);\r\n  const { success } = userProfileUpdate;\r\n\r\n  const orderListUser = useSelector((state) => state.orderListUser);\r\n  const {\r\n    loading: loadingOrdersList,\r\n    orders,\r\n    error: errorOrdersList,\r\n  } = orderListUser;\r\n\r\n  // check whether verification email has to be sent\r\n  const userSendEmailVerfication = useSelector(\r\n    (state) => state.userSendEmailVerfication\r\n  );\r\n  const { emailSent, hasError } = userSendEmailVerfication;\r\n\r\n  // refresh access token for user details error\r\n  useEffect(() => {\r\n    if (error && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  // set orders to local state\r\n  useEffect(() => {\r\n    if (orders && orders.length) {\r\n      setAllOrders([...orders]);\r\n    }\r\n  }, [orders]);\r\n\r\n  // check if any of the input fields value is changed, only then show the submit button\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (name && userInfo.name !== name) setShowSubmitButton(true);\r\n      else if (email && userInfo.email !== email) setShowSubmitButton(true);\r\n      else if (password || confirmPassword) setShowSubmitButton(true);\r\n      else setShowSubmitButton(false);\r\n    }\r\n  }, [name, email, password, confirmPassword, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      // if user is null, first fetch it and then set its details to the local state\r\n      if (!user || !user.name || success) {\r\n        dispatch(listMyOrders());\r\n        dispatch({ type: USER_PROFILE_UPDATE_RESET });\r\n        userInfo && dispatch(getUserDetails(\"profile\"));\r\n        if (success) {\r\n          dispatch(getUserDetails(\"profile\"));\r\n        }\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setAvatar(user.avatar);\r\n      }\r\n    }\r\n  }, [history, userInfo, user, dispatch, success, loadingOrdersList]);\r\n\r\n  const showHidePassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypePassword(typePassword === \"password\" ? \"text\" : \"password\");\r\n  };\r\n\r\n  const showHideConfirmPassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypeConfirmPassword(\r\n      typeConfirmPassword === \"password\" ? \"text\" : \"password\"\r\n    );\r\n  };\r\n\r\n  // handle file upload to aws bucket\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setAvatar(data.secure_url);\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          avatar: data,\r\n        })\r\n      );\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setErrorImageUpload(\"Please choose a valid image\");\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  // handle image overlay div's click to upload new file\r\n  const handleImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  // update user details\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match. Please retry.\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          name,\r\n          email,\r\n          avatar,\r\n          password,\r\n          confirmPassword,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mt-2\">\r\n      <Meta title=\"My Profile | Facon\" />\r\n      {userInfo && !userInfo.isConfirmed ? (\r\n        <>\r\n          {emailSent && (\r\n            <Message variant=\"success\" dismissible>\r\n              A verification link has been sent your mail!\r\n            </Message>\r\n          )}\r\n          {hasError && (\r\n            <Message  variant=\"danger\">\r\n              {hasError}\r\n            </Message>\r\n          )}\r\n          <Card style={{ margin: \"0\" }} className=\"mb-3\">\r\n            <Card.Body className=\"ps-0 \">\r\n              <Card.Title style={{ fontWeight: \"bold\" }}>\r\n                Account Not Verified\r\n              </Card.Title>\r\n              <Card.Text>\r\n                {`${userInfo.name}, `} your account is not yet verfied. Please{\" \"}\r\n                <Button\r\n                  variant=\"link\"\r\n                  className=\"p-0\"\r\n                  style={{\r\n                    fontSize: \"0.9em\",\r\n                    margin: \"0 0 0.1em 0\",\r\n                    focus: \"none\",\r\n                  }}\r\n                  onClick={() => dispatch(sendVerficationEmail(userInfo.email))}\r\n                >\r\n                  click here\r\n                </Button>{\" \"}\r\n                to send a verfication email.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </>\r\n      ) : null}\r\n      <Col\r\n        md={3}\r\n        style={\r\n          userInfo && !userInfo.isConfirmed\r\n            ? {\r\n                opacity: \"0.5\",\r\n                pointerEvents: \"none\",\r\n              }\r\n            : {\r\n                opacity: \"1\",\r\n                pointerEvents: \"\",\r\n              }\r\n        }\r\n      >\r\n        <h2 className=\"text-center\">My Profile</h2>\r\n        {message && (\r\n          <Message dismissible variant=\"warning\" duration={8}>\r\n            {message}\r\n          </Message>\r\n        )}\r\n        {error && error !== \"Not authorised. Token failed\" && (\r\n          <Message  variant=\"danger\" duration={10}>\r\n            {error}\r\n          </Message>\r\n        )}\r\n        {success && (\r\n          <Message  variant=\"success\" duration={8}>\r\n            Profile Updated!\r\n          </Message>\r\n        )}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div style={{ display: \"flex\", flexFlow: \"column nowrap\" }}>\r\n            {errorImageUpload && (\r\n              <Message dismissible variant=\"danger\" duration={10}>\r\n                {errorImageUpload}\r\n              </Message>\r\n            )}\r\n            {uploading ? (\r\n              <Loader />\r\n            ) : (\r\n              <div\r\n                className=\"profile-page-image\"\r\n                style={{ alignSelf: \"center\" }}\r\n              >\r\n                <Image\r\n                  src={avatar}\r\n                  alt={name}\r\n                  style={{\r\n                    height: \"5em\",\r\n                    width: \"5em\",\r\n                    marginBottom: \"1em\",\r\n                    border: \"1px solid #ced4da\",\r\n                    borderRadius: \"50%\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n                <div className=\"image-overlay\" onClick={handleImageClick}>\r\n                  Click to upload image\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* for image upload */}\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"file\"\r\n              ref={inputFile}\r\n              onChange={handleImageUpload}\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"name\">\r\n                <FloatingLabel\r\n                  controlId=\"nameinput\"\r\n                  label=\"Name\"\r\n                ></FloatingLabel>\r\n                <Form.Control\r\n                  placeholder=\"Enter Name\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group\r\n                controlId=\"email\"\r\n                className=\"my-2\"\r\n                style={\r\n                  userInfo\r\n                    ? {\r\n                        pointerEvents: \"none\",\r\n                        opacity: \"0.8\",\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                <FloatingLabel\r\n                  controlId=\"emailinput\"\r\n                  label=\"Email\"\r\n                ></FloatingLabel>\r\n                <Form.Control\r\n                  placeholder=\"Enter Email Address\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              {userInfo && (\r\n                <>\r\n                  <Form.Group>\r\n                    <FloatingLabel\r\n                      controlId=\"passwordinput\"\r\n                      label=\"Password\"\r\n                    ></FloatingLabel>\r\n                    <InputGroup className=\"\">\r\n                      <FloatingLabel\r\n                        controlId=\"passwordinput\"\r\n                        // label=\"Password\"\r\n                        style={{ display: \"flex\" }}\r\n                        className=\"mb-3\"\r\n                      >\r\n                        <Form.Control\r\n                          type={typePassword}\r\n                          placeholder=\"Enter your password\"\r\n                          value={password}\r\n                          style={{\r\n                            borderRight: \"none\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <InputGroup.Text\r\n                            onClick={showHidePassword}\r\n                            style={{\r\n                              fontSize: \"1rem\",\r\n                              height: \"100%\",\r\n                              marginLeft: \"-0.5em\",\r\n                              background: \"transparent\",\r\n                              borderLeft: \"none\",\r\n                            }}\r\n                          >\r\n                            {typePassword === \"text\" ? (\r\n                              <i className=\"far fa-eye-slash\" />\r\n                            ) : (\r\n                              <i className=\"far fa-eye\" />\r\n                            )}\r\n                          </InputGroup.Text>\r\n                        </div>\r\n                      </FloatingLabel>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <FloatingLabel\r\n                      controlId=\"confirmpasswordinput\"\r\n                      label=\"Confirm Password\"\r\n                    ></FloatingLabel>\r\n                    <InputGroup className=\"d-block\">\r\n                      <FloatingLabel\r\n                        controlId=\"confirmpasswordinput\"\r\n                        // label=\"Confirm Password\"\r\n                        style={{ display: \"flex\" }}\r\n                        className=\"mb-3\"\r\n                      >\r\n                        <Form.Control\r\n                          type={typeConfirmPassword}\r\n                          placeholder=\"Confirm password\"\r\n                          value={confirmPassword}\r\n                          style={{\r\n                            borderRight: \"none\",\r\n                          }}\r\n                          onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <InputGroup.Text\r\n                            onClick={showHideConfirmPassword}\r\n                            style={{\r\n                              fontSize: \"1rem\",\r\n                              height: \"100%\",\r\n                              marginLeft: \"-0.5em\",\r\n                              background: \"transparent\",\r\n                              borderLeft: \"none\",\r\n                            }}\r\n                          >\r\n                            {typeConfirmPassword === \"text\" ? (\r\n                              <i className=\"far fa-eye-slash\" />\r\n                            ) : (\r\n                              <i className=\"far fa-eye\" />\r\n                            )}\r\n                          </InputGroup.Text>\r\n                        </div>\r\n                      </FloatingLabel>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                </>\r\n              )}\r\n              <div className=\"d-grid mb-3\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={!showSubmitButton}\r\n                  style={{\r\n                    padding: \"0.5em 1em\",\r\n                  }}\r\n                >\r\n                  Update Profile\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Col>\r\n      {/* display orders */}\r\n      <Col\r\n        md={9}\r\n        style={\r\n          userInfo && !userInfo.isConfirmed\r\n            ? {\r\n                opacity: \"0.5\",\r\n                pointerEvents: \"none\",\r\n              }\r\n            : {\r\n                opacity: \"1\",\r\n                pointerEvents: \"\",\r\n              }\r\n        }\r\n      >\r\n        {allOrders.length ? (\r\n          <>\r\n            <h2 className=\"text-center\">My Orders</h2>\r\n            {loadingOrdersList ? (\r\n              <Loader />\r\n            ) : errorOrdersList ? (\r\n              <Message  variant=\"danger\" duration={10}>\r\n                {errorOrdersList}\r\n              </Message>\r\n            ) : (\r\n              <Table\r\n                striped\r\n                bordered\r\n                responsive\r\n                className=\"table-sm text-center\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th>ACTION</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map((order, idx) => (\r\n                    <tr\r\n                      key={idx}\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        padding: \"0\",\r\n                      }}\r\n                    >\r\n                      <td>{getDateString(order.createdAt)}</td>\r\n                      <td>\r\n                        {order.totalPrice.toLocaleString(\"en-IN\", {\r\n                          maximumFractionDigits: 0,\r\n                          style: \"currency\",\r\n                          currency: \"INR\",\r\n                        })}\r\n                      </td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          getDateString(order.paidAt)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{\r\n                              color: \"red\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          getDateString(order.deliveredAt)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{\r\n                              color: \"red\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button\r\n                            variant=\"link\"\r\n                            className=\"btn-sm\"\r\n                            style={{ margin: \"0\" }}\r\n                          >\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Card style={{ border: \"none\", margin: \"0 auto\" }}>\r\n            <Card.Body>\r\n              <Card.Title>No Orders Yet!</Card.Title>\r\n              <Card.Text>\r\n                Details about all your orders will show up here.{\" \"}\r\n                <Link to=\"/\">Continue Shopping</Link>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { confirmUser } from \"../actions/userActions\";\nimport Meta from \"../components/Meta\";\n\nconst ConfirmPage = ({ match, history }) => {\n  const dispatch = useDispatch();\n  const userConfirm = useSelector((state) => state.userConfirm); // get the userInfo to check if user is confirmed or not\n  const { loading, error, isConfirmed } = userConfirm;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (userInfo) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    // confirm user once the email token is available\n    dispatch(confirmUser(match.params.token, isLoggedIn));\n  }, [dispatch, match, isLoggedIn]);\n\n  if (loading || (!isConfirmed && !error)) {\n    return <Loader />;\n  } else if (error) {\n    // redirect to login page after a 10 seconds\n    setTimeout(() => {\n      history.push(\"/login\");\n    }, 10000);\n    return (\n      <Message variant=\"danger\" duration={10}>\n        Verfication Failed. Please try to login again.\n      </Message>\n    );\n  } else if (isConfirmed) {\n    // set a variable in local storage to fill email aftrer redirecting to login page after email confirmation\n    localStorage.setItem(\"fillEmailOnLoginPage\", \"true\");\n    return (\n      <Card style={{ border: \"none\", margin: \"0 auto\" }}>\n        <Meta title=\"Confirm Password | Facon\" />\n        <Card.Body>\n          <Card.Title>Account Confirmed</Card.Title>\n          <Card.Text>\n            {setIsLoggedIn\n              ? \"Your account has been successfully verified! Go on and shop for the best deals of the day!\"\n              : `Your account has been successfully verified! Please\n\t\t\t\t\t\tlogin and start exploring the best deals on all your\n\t\t\t\t\t\tfavorite products.`}\n          </Card.Text>\n          {!setIsLoggedIn ? <Link to=\"/login\">Login</Link> : null}\n        </Card.Body>\n      </Card>\n    );\n  }\n};\n\nexport default ConfirmPage;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"../styles/check-status.css\";\n\n// there are 4 steps in the checkout process\n// step 1 is logging in\n// step 2 is shipping address input\n// step 3 is selecting payment option\n// step 4 is placing the order and seeing payment button\nconst CheckoutStatus = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"status-bar\">\n      <div className=\"status-checkpoint\">\n        <div\n          className=\"circle\"\n          style={step1 ? { background: \"#2c3e50\" } : { background: \"\" }}\n        />\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </div>\n      <div className=\"connection\" />\n      <div className=\"status-checkpoint\">\n        <div\n          className=\"circle\"\n          style={\n            step1 && step2 ? { background: \"#2c3e50\" } : { background: \"\" }\n          }\n        />\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </div>\n      <div className=\"connection\" />\n\n      <div className=\"status-checkpoint\">\n        <div\n          className=\"circle\"\n          style={\n            step1 && step2 && step3\n              ? { background: \"#2c3e50\" }\n              : { background: \"\" }\n          }\n        />\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </div>\n      <div className=\"connection\" />\n\n      <div className=\"status-checkpoint\">\n        <div\n          className=\"circle\"\n          style={\n            step1 && step2 && step3 && step4\n              ? { background: \"#2c3e50\" }\n              : { background: \"\" }\n          }\n        />\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </div>\n    </Nav>\n  );\n};\n\nexport default CheckoutStatus;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button } from \"react-bootstrap\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutStatus from \"../components/CheckoutStatus\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\n\nconst ShippingPage = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems, shippingAddress } = cart;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error } = userDetails;\n\n  const [phone, setPhone] = useState(shippingAddress.phone);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  // fetch user details from the redux store\n  useEffect(() => {\n    userInfo && dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // update access token to a new ine using the refresh tokens\n  useEffect(() => {\n    if (error && userInfo) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [error, dispatch, userInfo]);\n\n  useEffect(() => {\n    if (!(cartItems.length && userInfo)) {\n      history.push(\"/\");\n    }\n  }, [cartItems, history, userInfo]);\n\n  // save shipping address and move to payment screen\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      saveShippingAddress({\n        phone,\n        address,\n        city,\n        postalCode,\n        country,\n      })\n    );\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutStatus step1 step2 />\n      <h1>Shipping Address</h1>\n      <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"address\">\n          <FloatingLabel\n            controlId=\"mobileinput\"\n            label=\"Phone\"\n          >\n          </FloatingLabel>\n          <Form.Control\n              placeholder=\"Enter Your Mobile No\"\n              className=\"mb-2\"\n              type=\"text\"\n              value={phone}\n              required\n              onChange={(e) => setPhone(e.target.value)}\n            />\n        </Form.Group>\n        <Form.Group controlId=\"address\">\n          <FloatingLabel\n            controlId=\"addressinput\"\n            label=\"Address\"\n          >\n          </FloatingLabel>\n          <Form.Control\n              placeholder=\"Enter address\"\n              className=\"mb-2\"\n              type=\"text\"\n              value={address}\n              required\n              onChange={(e) => setAddress(e.target.value)}\n            />\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <FloatingLabel controlId=\"cityinput\" label=\"City\">\n          </FloatingLabel>\n          <Form.Control\n              placeholder=\"Enter City\"\n              className=\"mb-2\"\n              type=\"text\"\n              value={city}\n              required\n              onChange={(e) => setCity(e.target.value)}\n            />\n        </Form.Group>\n        <Form.Group controlId=\"postalCode\">\n          <FloatingLabel\n            controlId=\"postalcodeinput\"\n            label=\"Postal Code\"\n          >\n          </FloatingLabel>\n          <Form.Control\n              placeholder=\"Enter Postal Code\"\n              className=\"mb-2\"\n              type=\"text\"\n              value={postalCode}\n              required\n              onChange={(e) => setPostalCode(e.target.value)}\n            />\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <FloatingLabel\n            controlId=\"countryinput\"\n            label=\"Country\"\n          >\n          </FloatingLabel>\n          <Form.Control\n              placeholder=\"Enter Country\"\n              className=\"mb-2\"\n              type=\"text\"\n              value={country}\n              required\n              onChange={(e) => setCountry(e.target.value)}\n            />\n        </Form.Group>\n        <div className=\"d-flex\">\n          <Button\n            type=\"submit\"\n            className=\"ms-auto mt-2\"\n            style={{\n              padding: \"0.5em 1em\",\n              width: \"8rem\",\n            }}\n          >\n            Continue\n          </Button>\n        </div>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutStatus from \"../components/CheckoutStatus\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\n\nconst PaymentPage = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [paymentMethod, setPaymentMethod] = useState(\"Stripe\"); // default option is the stripe one, but users might not understand 'stripe'\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error } = userDetails;\n\n  // fetch user details\n  useEffect(() => {\n    userInfo && dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // refresh the access tokens when user details throws an error\n  useEffect(() => {\n    if (error && userInfo ) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [error, dispatch, userInfo]);\n\n  // if shipping address is empty, redirect\n  useEffect(() => {\n    if (!shippingAddress) {\n      history.push(\"/shipping\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (e) => {\n    setPaymentMethod(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      {/* three steps are done in the checkout process */}\n      <CheckoutStatus step1 step2 step3 />\n      <div\n        style={{\n          display: \"flex\",\n          flexFlow: \"column nowrap\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1>Payment Method</h1>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Col>\n              <Form.Check\n                inline\n                type=\"radio\"\n                label=\"Stripe(Credit/Debit)\"\n                id=\"Stripe\"\n                name=\"paymentMethod\"\n                value=\"Stripe\"\n                checked={paymentMethod === \"Stripe\"}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col>\n              <Form.Check\n                inline\n                type=\"radio\"\n                label=\"Other Payment Methods\"\n                id=\"other\"\n                name=\"paymentMethod\"\n                value=\"Other Payment Methods\"\n                checked={paymentMethod === \"Other Payment Methods\"}\n                onChange={handleChange}\n              />\n            </Col>\n          </Form.Group>\n          <div className=\"d-grid\">\n            <Button type=\"submit\" className=\"my-3\" size=\"md\">\n              Continue\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </FormContainer>\n  );\n};\n\nexport default PaymentPage;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport CheckoutStatus from \"../components/CheckoutStatus\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { CART_RESET } from \"../constants/cartConstants\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\n\nconst PlaceOrderPage = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems, shippingAddress, paymentMethod } = cart;\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, loading, success, error } = orderCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: userLoginError } = userDetails;\n\n  // fetch the userinfo from reducx store\n  useEffect(() => {\n    userInfo && dispatch(getUserDetails(\"profile\"));\n    dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // refresh access token when user detail throws error\n  useEffect(() => {\n    if (userLoginError && userInfo) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [userLoginError, dispatch, userInfo]);\n\n  useEffect(() => {\n    if (success) {\n      localStorage.removeItem(\"cartItems\");\n      dispatch({ type: CART_RESET, payload: shippingAddress }); // remove items from cart once paid, but keep the shipping address in store\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [success, history]);\n\n  // All prices, tax is randomly  assigned\n  cart.itemsPrice = cartItems.reduce(\n    (acc, item) => acc + item.price * item.qty,\n    0\n  );\n\n  cart.shippingPrice = cart.itemsPrice > 8000 ? 500 : 300;\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice;\n\n  const handleOrder = (e) => {\n    e.preventDefault();\n    dispatch(\n      createOrder({\n        orderItems: cartItems,\n        shippingAddress,\n        paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      {/* last step in the ckecout process */}\n      <CheckoutStatus step1 step2 step3 step4 />\n      <Row>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    <strong>Address: </strong> {shippingAddress.address},{\" \"}\n                    {shippingAddress.city}-{shippingAddress.postalCode},{\" \"}\n                    {shippingAddress.country}\n                  </p>\n                  <p>\n                    <strong>Phone-No: </strong> {shippingAddress.phone}\n                  </p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <strong>Method: </strong> {paymentMethod}\n                  </p>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h2>Cart Items</h2>\n                  {cartItems.length !== 0 ? (\n                    <ListGroup variant=\"flush\">\n                      {cartItems.map((item, idx) => (\n                        <ListGroup.Item key={idx}>\n                          <Row>\n                            <Col md={2}>\n                              <Image\n                                className=\"product-image\"\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.qty} x {item.price} ={\" \"}\n                              {(item.qty * item.price).toLocaleString(\"en-IN\", {\n                                maximumFractionDigits: 2,\n                                style: \"currency\",\n                                currency: \"INR\",\n                              })}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  ) : (\n                    <Message>Your cart is empty</Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item className=\"text-center\">\n                    <h2 className=\"text-center\">Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        <strong>Subtotal</strong>\n                      </Col>\n                      <Col>\n                        {Number(cart.itemsPrice).toLocaleString(\"en-IN\", {\n                          maximumFractionDigits: 2,\n                          style: \"currency\",\n                          currency: \"INR\",\n                        })}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        <strong>Shipping</strong>\n                      </Col>\n                      <Col>\n                        {Number(cart.shippingPrice).toLocaleString(\"en-IN\", {\n                          maximumFractionDigits: 2,\n                          style: \"currency\",\n                          currency: \"INR\",\n                        })}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        <strong>Total</strong>\n                      </Col>\n                      <Col>\n                        {Number(cart.totalPrice).toLocaleString(\"en-IN\", {\n                          maximumFractionDigits: 2,\n                          style: \"currency\",\n                          currency: \"INR\",\n                        })}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {error && (\n                    <ListGroup.Item>\n                      <Message  variant=\"danger\" duration={10}>\n                        {error}\n                      </Message>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item className=\"d-grid gap-2\">\n                    <Button\n                      type=\"button\"\n                      size=\"md\"\n                      disabled={!cartItems.length}\n                      onClick={handleOrder}\n                    > \n                      Place Order\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </>\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderPage;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { payOrder } from \"../actions/orderActions\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { PaymentElement,LinkAuthenticationElement, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\"; // for stripe CC component\r\nimport Message from \"../components/Message\";\r\n\r\nconst CheckoutForm = ({ price, orderID }) => {\r\n  const [error, setError] = useState(\"\"); // from the stripe component itself\r\n  const dispatch = useDispatch();\r\n  const [clientSecret, setClientSecret] = useState(\"\"); // from the payment intent sent from server\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // STEP 1: create a payment intent and getting the secret\r\n  useEffect(() => {\r\n    const getClientSecret = async () => {\r\n      const { data } = await axios.post(\r\n        \"/api/orders/stripe-payment\",\r\n        { price, email: userInfo.email },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setClientSecret(data.clientSecret);\r\n    };\r\n\r\n    if (userInfo && price) getClientSecret();\r\n  }, [price, userInfo]);\r\n\r\n  // STEP 2: make the payment after filling the form properly\r\n  const makePayment = async (e) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make  sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    if (clientSecret) {\r\n      const payload = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details: {\r\n            name: userInfo.name,\r\n            email: userInfo.email,\r\n          },\r\n        },\r\n      });\r\n      // console.log(payload.error);\r\n      if (!payload.error) {\r\n        dispatch(savePaymentMethod(\"Stripe\"));\r\n        dispatch(\r\n          payOrder(orderID, {\r\n            ...payload.paymentIntent,\r\n            paymentMode: \"stripe\",\r\n          })\r\n        );\r\n      } else {\r\n        setError(payload.error.message);\r\n      }\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  // render a checkout form for filling details about credit or debit cards\r\n  return (\r\n    <Form id=\"payment-form\" onSubmit={makePayment}>\r\n      {error && (\r\n        <Message  variant=\"danger\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n      <Form.Group\r\n        style={{\r\n          margin: \"1em 0\",\r\n          fontSize: \"1em\",\r\n        }}\r\n      >\r\n        <CardElement id=\"card-element\" />\r\n      </Form.Group>\r\n      <div className=\"d-grid\">\r\n        <Button disabled={!stripe} size=\"md\" type=\"submit\">\r\n          Pay Now\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n  shippedOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_SHIPPED_SUCCESS,\r\n  ORDER_SHIPPED_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { refreshLogin } from \"../actions/userActions\";\r\nimport CheckoutForm from \"../components/CheckoutForm\"; //stripe checkout form\r\nimport getDateString from \"../utils/getDateString\";\r\n\r\nconst OrderPage = ({ match, history }) => {\r\n  // load stripe\r\n  const stripePromise = loadStripe(\r\n    process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const orderID = match.params.id;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderShipped =useSelector((state) => state.orderShipped);\r\n  const { loading: loadingShipped, success: successShipped } = orderShipped;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  // get new access tokens using the refresh token, is user details throws an error\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  // set order to paid, shipped or delivered, and fetch updated orders\r\n  useEffect(() => {\r\n    if (!order || order._id !== orderID || successPay || successDeliver || successShipped) {\r\n      if (successPay) dispatch({ type: ORDER_PAY_RESET });\r\n      if(successShipped) dispatch({ type: ORDER_SHIPPED_RESET });\r\n      if (successDeliver) dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderID));\r\n    }\r\n  }, [order, orderID, dispatch, successPay, successDeliver,successShipped]);\r\n\r\n  //set order as shipped\r\n  const successShippedHandler = () => {\r\n    dispatch(shippedOrder(orderID));\r\n  };\r\n\r\n  // set order as delivered\r\n  const successDeliveryHandler = () => {\r\n    dispatch(deliverOrder(orderID));\r\n  };\r\n\r\n  // for image input, use a ref\r\nconst inputFile = useRef(null);\r\nconst [image, setImage] = useState(null);\r\nconst [imageUploading, setImageUploading] = useState(false);\r\n\r\n// submit file to uploads, get the url\r\nconst handleFileUpload = async (e) => {\r\n  setImageUploading(true);\r\n  const file = e.target.files[0];\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/upload\", formData, config);\r\n    setImageUploading(false);\r\n    setImage(data.secure_url);\r\n} catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// dispatch the payment action with the image url\r\nconst handlePayment = async (e) => {\r\n  e.preventDefault();\r\n  if (image) {\r\n    dispatch(payOrder(orderID, { paymentMode: \"Online\", image }));\r\n  } else {\r\n    alert(\"Please upload a proof of payment\");\r\n  }\r\n};\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\" duration={10}>\r\n      {error}\r\n    </Message>\r\n  ) : (\r\n    <>\r\n      <h2>Order {orderID}</h2>\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: </strong>\r\n                    {order.user.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email: </strong>\r\n                    <a href={`mailto:${order.user.email}`}>\r\n                      {order.user.email}\r\n                    </a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Phone-No: </strong>\r\n                    {order.shippingAddress.phone}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address: </strong> {order.shippingAddress.address},{\" \"}\r\n                    {order.shippingAddress.city}-\r\n                    {order.shippingAddress.postalCode},{\" \"}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  <div>\r\n                    {order.isPaid && order.isShipped ? (\r\n                      <Message variant=\"success\">\r\n                        Shipped at: {getDateString(order.shippedAt)}\r\n                      </Message>\r\n                    ) : (\r\n                      <Message variant=\"danger\">Order Not Shipped Yet</Message>\r\n                    )}\r\n                  </div>\r\n                  {order.isShipped && order.isDelivered && (\r\n                    <div>\r\n                      { order.isDelivered ? (\r\n                        <Message variant=\"success\">\r\n                          Delivered at: {getDateString(order.deliveredAt)}\r\n                        </Message>\r\n                      ) : (\r\n                        <Message variant=\"danger\">\r\n                          Order Not Delivered Yet\r\n                        </Message>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong> {order.paymentMethod}\r\n                  </p>\r\n                  <div>\r\n                    {order.isPaid ? (\r\n                      <>\r\n                        <Message variant=\"success\">\r\n                          Order Confirmed and Paid at: {getDateString(order.paidAt)}\r\n                        </Message>\r\n                      </>\r\n                    ) : (\r\n                      <Message variant=\"danger\">Not Paid</Message>\r\n                    )}\r\n                  </div>\r\n                </ListGroup.Item> \r\n                <ListGroup.Item>\r\n                  <h2>Cart Items</h2>\r\n                  {order.orderItems.length !== 0 ? (\r\n                    <ListGroup variant=\"flush\">\r\n                      <div\r\n                        style={{\r\n                          background: \"red\",\r\n                        }}\r\n                      ></div>\r\n                      {order.orderItems.map((item, idx) => (\r\n                        <ListGroup.Item key={idx}>\r\n                          <Row>\r\n                            <Col md={2}>\r\n                              <Image\r\n                                className=\"product-image\"\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toLocaleString(\"en-IN\", {\r\n                                maximumFractionDigits: 2,\r\n                                style: \"currency\",\r\n                                currency: \"INR\",\r\n                              })}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  ) : (\r\n                    <Message>No order</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h2 className=\"text-center\">Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  {error && (\r\n                    <ListGroup.Item>\r\n                      <Message variant=\"danger\" duration={10}>\r\n                        {error}\r\n                      </Message>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Subtotal</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {order.orderItems.map((item, idx) =>\r\n                          (item.qty * item.price).toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Shipping</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {order.shippingPrice &&\r\n                          order.shippingPrice.toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Total</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {order.totalPrice &&\r\n                          order.totalPrice.toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {!order.isPaid && order.paymentMethod === \"Stripe\" && (\r\n                    <>\r\n                      <ListGroup.Item>\r\n                        {loadingPay && <Loader />}\r\n                        <Elements stripe={stripePromise}>\r\n                          <CheckoutForm\r\n                            price={order.totalPrice * 100}\r\n                            orderID={orderID}\r\n                          />\r\n                        </Elements>\r\n                      </ListGroup.Item>\r\n                    </>\r\n                  )}\r\n                  {!order.isPaid && order.paymentMethod !== \"Stripe\" && (\r\n                    <ListGroup.Item>\r\n                      {imageUploading && <Loader />}\r\n                      {loadingPay && <Loader />}\r\n                      <p>\r\n                        Please Upload Your Payment ScreenShot Here to confirm\r\n                        your order\r\n                      </p>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                        id=\"file\"\r\n                        ref={inputFile}\r\n                        onChange={handleFileUpload}\r\n                      />\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"primary\"\r\n                        className=\"mt-2\"\r\n                        onClick={handlePayment}\r\n                      >\r\n                        Upload & Confirm Payment\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  {/* show this only to admins, after payment is done */}\r\n                  {userInfo &&\r\n                    userInfo.isAdmin &&\r\n                    order.isPaid &&\r\n                    !order.isShipped && (\r\n                      <ListGroup.Item>\r\n                        {loadingShipped && <Loader />}\r\n                        <div className=\"d-grid\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            variant=\"info\"\r\n                            size=\"md\"\r\n                            onClick={successShippedHandler}\r\n                          >\r\n                            Mark as Shipped\r\n                          </Button>\r\n                        </div>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                  {/* show this only to admins, after payment is done */}\r\n                  {userInfo &&\r\n                    userInfo.isAdmin &&\r\n                    order.isPaid &&\r\n                    order.isShipped &&\r\n                    !order.isDelivered && (\r\n                      <ListGroup.Item>\r\n                        {loadingDeliver && <Loader />}\r\n                        <div className=\"d-grid\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            variant=\"info\"\r\n                            size=\"md\"\r\n                            onClick={successDeliveryHandler}\r\n                          >\r\n                            Mark as Delivered\r\n                          </Button>\r\n                        </div>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { resetUserPassword } from \"../actions/userActions\";\n\nconst PasswordResetPage = ({ match, history }) => {\n  const [name, setName] = useState(\"\");\n  const [typePassword, setTypePassword] = useState(\"password\");\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\");\n  const [message, setMessage] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const userResetPassword = useSelector((state) => state.userResetPassword);\n  const { loading, resetPassword, error } = userResetPassword;\n\n  // get the name stored in the local storage and ask that user to reset password\n  useEffect(() => {\n    const nameFromLocalStorage = localStorage.getItem(\"EcommerceUserName\");\n    if (nameFromLocalStorage) {\n      setName(nameFromLocalStorage);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (resetPassword) {\n      setTimeout(() => {\n        history.push(\"/login\");\n      }, 10000);\n    }\n  }, [history, resetPassword]);\n\n  const showHidePassword = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setTypePassword(typePassword === \"password\" ? \"text\" : \"password\");\n  };\n  const showHideConfirmPassword = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setTypeConfirmPassword(\n      typeConfirmPassword === \"password\" ? \"text\" : \"password\"\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match. Please retry.\");\n    } else {\n      dispatch(resetUserPassword(match.params.token, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>{name ? `${name}, reset password` : \"Reset Password\"}</h1>\n      {message && (\n        <Message  duration={8} variant=\"warning\">\n          {message}\n        </Message>\n      )}\n      {resetPassword && (\n        <Message  variant=\"success\" duration={8}>\n          Password Changed Successfully.\n        </Message>\n      )}\n      {error && (\n        <Message  variant=\"danger\">\n          {error}\n        </Message>\n      )}\n      {loading ? (\n        <Loader />\n      ) : (\n        <Form onSubmit={handleSubmit} style={{ width: \"33em\" }}>\n          <Form.Group className=\"mb-2\">\n            <InputGroup style={{ width: \"100%\" }}>\n              <FloatingLabel\n                controlId=\"passwordinput\"\n                label=\"Password\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  size=\"lg\"\n                  type={typePassword}\n                  placeholder=\"Enter your password\"\n                  value={password}\n                  style={{\n                    borderRight: \"none\",\n                    width: \"205%\",\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FloatingLabel>\n              <div className=\"input-group-append\">\n                <InputGroup.Text\n                  onClick={showHidePassword}\n                  style={{\n                    paddingLeft: \"1em\",\n                    fontSize: \"1rem\",\n                    width: \"17.5%\",\n                    height: \"78%\",\n                    marginLeft: \"15rem\",\n                    background: \"transparent\",\n                  }}\n                >\n                  {typePassword === \"text\" ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </InputGroup.Text>\n              </div>\n            </InputGroup>\n          </Form.Group>\n          <Form.Group className=\"my-2\">\n            <InputGroup style={{ width: \"100%\" }}>\n              <FloatingLabel\n                controlId=\"confirmpasswordinput\"\n                label=\"Confirm password\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  size=\"lg\"\n                  type={typeConfirmPassword}\n                  placeholder=\"Confirm your password\"\n                  value={confirmPassword}\n                  style={{\n                    borderRight: \"none\",\n                    width: \"205%\",\n                  }}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n              </FloatingLabel>\n              <div className=\"input-group-append\">\n                <InputGroup.Text\n                  onClick={showHideConfirmPassword}\n                  style={{\n                    paddingLeft: \"1em\",\n                    fontSize: \"1rem\",\n                    width: \"17.5%\",\n                    height: \"78%\",\n                    marginLeft: \"15rem\",\n                    background: \"transparent\",\n                  }}\n                >\n                  {typeConfirmPassword === \"text\" ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </InputGroup.Text>\n              </div>\n            </InputGroup>\n          </Form.Group>\n          <Button\n            type=\"submit\"\n            style={{\n              padding: \"0.5em 1em\",\n              width: \"8rem\",\n            }}\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default PasswordResetPage;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, Button } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listAllUsers, deleteUser, refreshLogin } from \"../actions/userActions\";\nimport Paginate from \"../components/Paginate\";\n\nconst UserListPage = ({ match, history }) => {\n  const pageNumber = match.params.pageNumber || 1; // to fetch various pages of orders\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userList);\n  const { loading, users, error, page, pages, total } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: userLoginError } = userDetails;\n\n  useEffect(() => {\n    if (userLoginError && userInfo) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [userLoginError, dispatch, userInfo]);\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) dispatch(listAllUsers(pageNumber));\n    else history.push(\"/login\");\n  }, [dispatch, history, userInfo, successDelete, pageNumber]);\n\n  const handleDelete = (id) => {\n    if (window.confirm(\"Are you sure you wanna delete user?\"))\n      dispatch(deleteUser(id));\n  };\n  return (\n    <>\n      <h1>Users ({`${total || 0}`})</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message  variant=\"danger\" duration={10}>\n          {error}\n        </Message>\n      ) : (\n        <Table striped bordered responsive className=\"table-sm text-center\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>CONFIRMED</th>\n              <th>ADMIN</th>\n              <th>ACTION</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users &&\n              users.map((user) => {\n                return (\n                  <tr key={user._id}>\n                    <td>{user._id}</td>\n                    <td>{user.name}</td>\n                    <td>\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\n                    </td>\n                    <td>\n                      {user.isConfirmed ? (\n                        <i\n                          className=\"fas fa-check\"\n                          style={{ color: \"green\" }}\n                        />\n                      ) : (\n                        <i className=\"fas fa-times\" style={{ color: \"red\" }} />\n                      )}\n                    </td>\n                    <td>\n                      {user.isAdmin ? (\n                        <i\n                          className=\"fas fa-check\"\n                          style={{ color: \"green\" }}\n                        />\n                      ) : (\n                        <i className=\"fas fa-times\" style={{ color: \"red\" }} />\n                      )}\n                    </td>\n\n                    <td\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-around\",\n                      }}\n                    >\n                      <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                        <Button variant=\"link\" className=\"btn-sm\">\n                          <i className=\"fas fa-edit\" />\n                        </Button>\n                      </LinkContainer>\n                      <Button\n                        className=\"btn-sm\"\n                        variant=\"danger\"\n                        onClick={() => handleDelete(user._id)}\n                      >\n                        <i className=\"fas fa-trash\" />\n                      </Button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      )}\n      <Paginate pages={pages} page={page} isAdmin={true} forUsers={true} />\n    </>\n  );\n};\n\nexport default UserListPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Meta from \"../components/Meta\";\nimport FormContainer from \"../components/FormContainer\";\nimport {\n  getUserDetails,\n  updateUser,\n  refreshLogin,\n} from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditPage = ({ match, history }) => {\n  const userId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, user, error } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // get new access tokens\n  useEffect(() => {\n    if (error && userInfo) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [error, dispatch, userInfo]);\n\n  // update user details from the admin panel view\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user || !user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, dispatch, userId, successUpdate, history]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\">\n        <Button variant=\"outline-primary\" className=\"my-3\">\n          Go Back\n        </Button>\n      </Link>\n      <FormContainer>\n        {user && <Meta title={`Edit ${user.name} | Facon`} />}\n        <h1>Edit User</h1>\n        {loadingUpdate ? (\n          <Loader />\n        ) : errorUpdate ? (\n          <Message  variant=\"danger\" duration={10}>\n            {errorUpdate}\n          </Message>\n        ) : (\n          <>\n            {loading ? (\n              <Loader />\n            ) : (\n              <Form onSubmit={handleSubmit}>\n                {error && (\n                  <Message  variant=\"danger\" duration={10}>\n                    {error}\n                  </Message>\n                )}\n\n                <Form.Group controlId=\"name\" className=\"mb-2\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    placeholder=\"Enter Name\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"email\" className=\"my-2\">\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    placeholder=\"Enter Email Address\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"isAdmin\" className=\"my-2\">\n                  <InputGroup>\n                    <Form.Check\n                      type=\"checkbox\"\n                      label=\"Is Admin\"\n                      style={{ borderRight: \"none\" }}\n                      checked={isAdmin}\n                      onChange={(e) => setIsAdmin(e.target.checked)}\n                    ></Form.Check>\n                  </InputGroup>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"dark\" className=\"my-1\">\n                  Edit\n                </Button>\n              </Form>\n            )}\n          </>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditPage;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\nimport Paginate from \"../components/Paginate\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\n\nconst ProductListPage = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, products, error, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    success: successCreate,\n    error: errorCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: userLoginError } = userDetails;\n\n  // fetch user login info\n  useEffect(() => {\n    userInfo && dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // refresh token for expired access tokens\n  useEffect(() => {\n    if (userLoginError && userInfo) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [userLoginError, dispatch, userInfo]);\n\n  useEffect(() => {\n    if (!userInfo.isAdmin) history.push(\"/login\");\n    dispatch({ type: PRODUCT_CREATE_RESET }); //reset the new product detail\n    if (successCreate)\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    else dispatch(listProducts(\"\", pageNumber, 10)); // 3rd parameter is the no of products to be listed per page\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ]);\n\n  // delete product after confirming\n  const handleDelete = (id) => {\n    if (window.confirm(\"Are you sure you wanna delete this product?\"))\n      dispatch(deleteProduct(id));\n  };\n  // create a new dummy product\n  const handleCreateProduct = () => {\n    dispatch(createProduct());\n  };\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button\n            className=\"my-3\"\n            style={{\n              padding: \"0.5em 1em\",\n            }}\n            onClick={handleCreateProduct}\n          >\n            <i className=\"fas fa-plus\" /> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {errorDelete && (\n        <Message  variant=\"danger\" duration={10}>\n          {errorDelete}\n        </Message>\n      )}\n      {errorCreate && (\n        <Message  variant=\"danger\" duration={10}>\n          {errorCreate}\n        </Message>\n      )}\n      {loading || loadingCreate || loadingDelete ? (\n        <Loader />\n      ) : error ? (\n        <Message  variant=\"danger\" duration={10}>\n          {error}\n        </Message>\n      ) : (\n        <>\n          <Table striped bordered responsive className=\"table-sm text-center\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th>ACTION</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products &&\n                products.map((product) => {\n                  return (\n                    <tr key={product._id}>\n                      <td>{product._id}</td>\n                      <td>{product.name}</td>\n                      <td>\n                        {product.price &&\n                          product.price.toLocaleString(\"en-IN\", {\n                            maximumFractionDigits: 2,\n                            style: \"currency\",\n                            currency: \"INR\",\n                          })}\n                      </td>\n                      <td>{product.category}</td>\n                      <td>{product.brand}</td>\n\n                      <td\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-around\",\n                        }}\n                      >\n                        <LinkContainer\n                          to={`/admin/product/${product._id}/edit`}\n                        >\n                          <Button variant=\"link\" className=\"btn-sm\">\n                            <i className=\"fas fa-edit\" />\n                          </Button>\n                        </LinkContainer>\n                        <Button\n                          className=\"btn-sm\"\n                          onClick={() => handleDelete(product._id)}\n                          variant=\"danger\"\n                        >\n                          <i\n                            style={{\n                              fontSize: \"0.9em\",\n                              padding: \"0\",\n                            }}\n                            className=\"fas fa-trash\"\n                          />\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductListPage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Button, Image, Row, Col } from \"react-bootstrap\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { Link } from \"react-router-dom\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport axios from \"axios\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\n\nimport FormContainer from \"../components/FormContainer\";\n\nconst ProductEditPage = ({ match, history }) => {\n  // all variable for stroing product details\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [price, setPrice] = useState(0.0);\n  const [countInStock, setCountInStock] = useState(0);\n\n  // to upload product image\n  const [uploading, setUploading] = useState(false);\n  const [errorImageUpload, setErrorImageUpload] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, product, error } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = productUpdate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: userLoginError } = userDetails;\n\n  // fetch user login details\n  useEffect(() => {\n    userInfo && dispatch(getUserDetails(\"profile\"));\n  }, [userInfo, dispatch]);\n\n  // fetch new access tokens if user details fail, using the refresh token\n  useEffect(() => {\n    if (userLoginError && userInfo ) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [userLoginError, dispatch, userInfo]);\n\n  useEffect(() => {\n    dispatch(listProductDetails(productId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // update the product details in state\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setDescription(product.description);\n        setCountInStock(product.countInStock);\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate]);\n\n  // submit the product details\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        brand,\n        price,\n        category,\n        description,\n        countInStock,\n        image,\n      })\n    );\n  };\n\n  // for image input, use a ref\n  const inputFile = useRef(null);\n\n  // click the above ref, to handle the overlay div above the product image\n  const handleImageClick = () => {\n    inputFile.current.click();\n  };\n\n  // submit file to aws bucket, get the url\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    setUploading(true);\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data.secure_url);\n      setUploading(false);\n    } catch (error) {\n      setErrorImageUpload(\"Please choose a valid image\");\n      setUploading(false);\n    }\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\">\n        <Button variant=\"outline-primary\" className=\"mt-3\">\n          Go Back\n        </Button>\n      </Link>\n      <FormContainer style={{ marginTop: \"-2em\" }}>\n        <h1>Edit Product</h1>\n        {loadingUpdate ? (\n          <Loader />\n        ) : errorUpdate ? (\n          <Message  variant=\"danger\" duration={10}>\n            {errorUpdate}\n          </Message>\n        ) : (\n          <>\n            {loading ? (\n              <Loader />\n            ) : (\n              <Form onSubmit={handleSubmit}>\n                {error && (\n                  <Message  variant=\"danger\" duration={10}>\n                    {error}\n                  </Message>\n                )}\n                <Form.Group controlId=\"name\">\n                  <FloatingLabel\n                    controlId=\"nameinput\"\n                    label=\"Name\"\n                    className=\"mb-3\"\n                  >\n                    <Form.Control\n                      placeholder=\"Enter Name\"\n                      type=\"text\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FloatingLabel>\n                </Form.Group>\n                <Form.Group controlId=\"price\">\n                  <FloatingLabel\n                    controlId=\"priceinput\"\n                    label=\"Price\"\n                    className=\"mb-3\"\n                  >\n                    <Form.Control\n                      placeholder=\"Enter price\"\n                      type=\"number\"\n                      value={price}\n                      min=\"0\"\n                      max=\"1000\"\n                      step=\"0.1\"\n                      onChange={(e) => setPrice(e.target.value)}\n                    />\n                  </FloatingLabel>\n                </Form.Group>\n                {errorImageUpload && (\n                  <Message  variant=\"danger\" duration={10}>\n                    {errorImageUpload}\n                  </Message>\n                )}\n                {uploading ? (\n                  <div>Uploading...</div>\n                ) : (\n                  <Form.Group controlId=\"image\">\n                    <Row>\n                      <Col md={9}>\n                        <FloatingLabel\n                          controlId=\"imageinput\"\n                          label=\"Image URL\"\n                          className=\"mb-3\"\n                        >\n                          <Form.Control\n                            placeholder=\"Enter image URL\"\n                            type=\"text\"\n                            value={image}\n                            onChange={(e) => setImage(e.target.value)}\n                          />\n                        </FloatingLabel>\n                      </Col>\n                      <Col md={3}>\n                        <input\n                          accept=\"image/*\"\n                          type=\"file\"\n                          id=\"file\"\n                          ref={inputFile}\n                          onChange={handleFileUpload}\n                          style={{ display: \"none\" }}\n                        />\n                        <div\n                          className=\"profile-page-image\"\n                          style={{\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          <Image\n                            src={image}\n                            alt={name}\n                            title=\"Click to input file\"\n                            style={{\n                              width: \"100%\",\n                              border: \"1px solid #ced4da\",\n                              marginBottom: \"1em\",\n                              cursor: \"pointer\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                          />\n                          <div\n                            className=\"image-overlay-product\"\n                            onClick={handleImageClick}\n                          >\n                            Click to upload image\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Form.Group>\n                )}\n                <Form.Group controlId=\"brand\">\n                  <FloatingLabel\n                    controlId=\"brandinput\"\n                    label=\"Brand\"\n                    className=\"mb-3\"\n                  >\n                    <Form.Control\n                      placeholder=\"Enter brand\"\n                      type=\"text\"\n                      value={brand}\n                      onChange={(e) => setBrand(e.target.value)}\n                    />\n                  </FloatingLabel>\n                </Form.Group>\n                <Form.Group controlId=\"category\">\n                  <FloatingLabel\n                    controlId=\"categoryinput\"\n                    label=\"Category\"\n                    className=\"mb-3\"\n                  >\n                    <Form.Control\n                      placeholder=\"Enter category\"\n                      type=\"text\"\n                      value={category}\n                      onChange={(e) => setCategory(e.target.value)}\n                    />\n                  </FloatingLabel>\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                  <FloatingLabel\n                    controlId=\"descinput\"\n                    label=\"Description\"\n                    className=\"mb-3\"\n                  >\n                    <Form.Control\n                      placeholder=\"Enter description URL\"\n                      type=\"text\"\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                    />\n                  </FloatingLabel>\n                </Form.Group>\n                <Form.Group controlId=\"countInStock\">\n                  <FloatingLabel\n                    controlId=\"countinstockinput\"\n                    label=\"CountInStock\"\n                    className=\"mb-3\"\n                  >\n                    <Form.Control\n                      placeholder=\"Enter Count In Stock\"\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"1000\"\n                      value={countInStock}\n                      onChange={(e) => setCountInStock(e.target.value)}\n                    />\n                  </FloatingLabel>\n                </Form.Group>\n                <div className=\"d-flex\">\n                  <Button type=\"submit\" className=\"my-1 ms-auto\">\n                    Update Product\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditPage;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport { refreshLogin } from \"../actions/userActions\";\nimport { listAllOrders } from \"../actions/orderActions\";\nimport getDateString from \"../utils/getDateString\";\n\n\nconst ProductListPage = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1; // to fetch various pages of orders\n  const dispatch = useDispatch();\n  const orderListAll = useSelector((state) => state.orderListAll); // to avoid blank screen display\n  const { loading, orders, error, page, pages, total } = orderListAll;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: userLoginError } = userDetails;\n\n  // refresh access tokens aif user details are failed\n  useEffect(() => {\n    if (userLoginError && userInfo ) {\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n      user && dispatch(refreshLogin(user.email));\n    }\n  }, [userLoginError, dispatch, userInfo]);\n\n  // get all orders by pagenumber\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) dispatch(listAllOrders(pageNumber));\n    else history.push(\"/login\");\n  }, [dispatch, history, userInfo, pageNumber]);\n\n  const downloadImage = (url) => {\n    var element = document.createElement(\"a\");\n    var file = new Blob(\n      [\n      url\n      ],\n      { type: \"image/*\" }\n    );\n    element.href = URL.createObjectURL(file);\n    element.download = \"payment-proof.png\";\n    element.click();\n  };\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>All Orders ({`${total || 0}`})</h1>\n        </Col>\n      </Row>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message  variant=\"danger\" duration={10}>\n          {error}\n        </Message>\n      ) : (\n        <Table striped bordered responsive className=\"table-sm text-center\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>TOTAL</th>\n              <th>DATE</th>\n              <th>PAID</th>\n              <th>Payment Verification</th>\n              <th>SHIPPED</th>\n              <th>DELIVERED</th>\n              <th>ACTION</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders &&\n              orders.map((order) => {\n                return (\n                  <tr key={order._id}>\n                    <td>{order._id}</td>\n                    <td>{order.user && order.user.name}</td>\n                    <td>\n                      {order.totalPrice.toLocaleString(\"en-IN\", {\n                        maximumFractionDigits: 2,\n                        style: \"currency\",\n                        currency: \"INR\",\n                      })}\n                    </td>\n                    <td>{getDateString(order.createdAt)}</td>\n                    <td>\n                      {order.isPaid ? (\n                        getDateString(order.paidAt)\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{\n                            color: \"red\",\n                          }}\n                        />\n                      )}\n                    </td>\n                    <td>\n                      {order.paymentResult && (\n                        <span\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyItems: \"center\",\n                            gap: \"10px\",\n                            cursor:\"pointer\" \n                          }}\n                        >\n                          <img\n                            src={order.paymentResult.imageUrl}\n                            alt=\"payment-verified\"\n                            style={{ width: \"50px\" }}\n                          />\n                            <i className=\"fa fa-download\" onClick={()=> downloadImage(order.paymentResult.imageUrl)} />\n                        </span>\n                      )}\n                    </td>\n                    <td>\n                      {order.isShipped ? (\n                        getDateString(order.shippedAt)\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{\n                            color: \"red\",\n                          }}\n                        />\n                      )}\n                    </td>\n                    <td>\n                      {order.isDelivered ? (\n                        getDateString(order.deliveredAt)\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{\n                            color: \"red\",\n                          }}\n                        />\n                      )}\n                    </td>\n                    <td\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-around\",\n                      }}\n                    >\n                      <LinkContainer to={`/order/${order._id}`}>\n                        <Button variant=\"link\" className=\"btn-sm\">\n                          View Details\n                        </Button>\n                      </LinkContainer>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      )}\n      <Paginate pages={pages} page={page} isAdmin={true} forOrders={true} />\n    </>\n  );\n};\n\nexport default ProductListPage;\n","export default __webpack_public_path__ + \"static/media/404Error.0ed04e00.png\";","import React from \"react\";\nimport errorImg from \"../assets/404Error.png\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/error-page.css\";\n\n// 404 page\nconst ErrorPage = () => {\n  return (\n    <div className=\"text-center\">\n      <img className=\"error-img\" alt=\"error\" src={errorImg} />\n      <p className=\"mb-0 mt-3 text-error\">\n        <i className=\"far fa-frown\" /> Looks like this page does not exist.\n      </p>\n      <p className=\"mt-0 text-error\">\n        Go Back to the <Link to=\"/\">Home Page</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { Toast } from 'react-bootstrap';\nimport ToastContainer from 'react-bootstrap/ToastContainer';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './styles/update-toast.css';\n\nconst ServiceWorkerWrapper = () => {\n\tconst [showReload, setShowReload] = useState(false);\n\tconst [waitingWorker, setWaitingWorker] = useState(null);\n\n\tconst onSWUpdate = (registration) => {\n\t\tsetShowReload(true);\n\t\tsetWaitingWorker(registration.waiting);\n\t};\n\n\t// register the service worker on page load\n\tuseEffect(() => {\n\t\tserviceWorkerRegistration.register({ onUpdate: onSWUpdate });\n\t}, []);\n\n\t// skip waiting and install new updates on page reload\n\tconst reloadPage = () => {\n\t\twaitingWorker?.postMessage({ type: 'SKIP_WAITING' });\n\t\tsetShowReload(false);\n\t\twindow.location.reload(true);\n\t};\n\n\treturn (\n\t\t<ToastContainer className='update-toast' onClick={reloadPage}>\n\t\t\t<Toast show={showReload} onClose={reloadPage} bg='dark'>\n\t\t\t\t<Toast.Header>\n\t\t\t\t\t<strong className='me-auto text-black'>\n\t\t\t\t\t\tNew Version Available\n\t\t\t\t\t</strong>\n\t\t\t\t</Toast.Header>\n\t\t\t\t<Toast.Body className='text-white'>\n\t\t\t\t\tReload to see whats new!\n\t\t\t\t</Toast.Body>\n\t\t\t</Toast>\n\t\t</ToastContainer>\n\t);\n};\n\nexport default ServiceWorkerWrapper;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport HomePage from \"./pages/HomePage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport CartPage from \"./pages/CartPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport ConfirmPage from \"./pages/ConfirmPage\";\nimport ShippingPage from \"./pages/ShippingPage\";\nimport PaymentPage from \"./pages/PaymentPage\";\nimport PlaceOrderPage from \"./pages/PlaceOrderPage\";\nimport OrderPage from \"./pages/OrderPage\";\nimport PasswordResetPage from \"./pages/PasswordResetPage\";\nimport UserListPage from \"./pages/UserListPage\";\nimport UserEditPage from \"./pages/UserEditPage\";\nimport ProductListPage from \"./pages/ProductListPage\";\nimport ProductEditPage from \"./pages/ProductEditPage\";\nimport OrderListPage from \"./pages/OrderListPage\";\nimport ErrorPage from \"./pages/ErrorPage\";\n\n// for showing the 'new update available' banner and to register the service worker\nimport ServiceWorkerWrapper from \"./ServiceWorkerWrapper\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <ServiceWorkerWrapper />\n\n      <main className=\"py-2\">\n        <Container>\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/search/:keyword\" component={HomePage} exact />\n            <Route path=\"/page/:pageNumber\" component={HomePage} exact />\n            <Route\n              path=\"/search/:keyword/page/:pageNumber\"\n              exact\n              component={HomePage}\n            />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/register\" component={RegisterPage} />\n            <Route\n              path=\"/user/password/reset/:token\"\n              component={PasswordResetPage}\n            />\n            <Route path=\"/profile\" component={ProfilePage} />\n            <Route path=\"/product/:id\" component={ProductPage} />\n            <Route path=\"/cart/:id?\" component={CartPage} />\n            <Route path=\"/user/confirm/:token\" component={ConfirmPage} exact />\n            <Route path=\"/shipping\" component={ShippingPage} />\n            <Route path=\"/payment\" component={PaymentPage} />\n            <Route path=\"/placeorder\" component={PlaceOrderPage} />\n            <Route path=\"/order/:id\" component={OrderPage} />\n            <Route path=\"/admin/userlist\" component={UserListPage} exact />\n            <Route\n              path=\"/admin/userlist/:pageNumber\"\n              component={UserListPage}\n              exact\n            />\n            <Route path=\"/admin/user/:id/edit\" component={UserEditPage} />\n            <Route\n              path=\"/admin/productlist\"\n              exact\n              component={ProductListPage}\n            />\n            <Route\n              path=\"/admin/productlist/:pageNumber\"\n              component={ProductListPage}\n              exact\n            />\n            <Route path=\"/admin/product/:id/edit\" component={ProductEditPage} />\n            <Route path=\"/admin/orderlist\" component={OrderListPage} exact />\n            <Route\n              path=\"/admin/orderlist/:pageNumber\"\n              component={OrderListPage}\n              exact\n            />\n            <Route component={ErrorPage} />\n          </Switch>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport {\n\tproductListReducer,\n\tproductDetailsReducer,\n\tproductDeleteReducer,\n\tproductCreateReducer,\n\tproductCreateReviewReducer,\n\tproductUpdateReducer,\n\tproductTopRatedReducer,\n} from './reducers/productReducers';\n\nimport { cartReducer } from './reducers/cartReducers';\n\nimport {\n\tuserLoginReducer,\n\tuserLoginRefreshReducer,\n\tuserRegisterReducer,\n\tuserSendEmailVerficationReducer,\n\tuserConfirmReducer,\n\tuserResetPasswordReducer,\n\tuserDetailsReducer,\n\tuserProfileUpdateReducer,\n\tuserListReducer,\n\tuserDeleteReducer,\n\tuserUpdateReducer,\n} from './reducers/userReducers';\n\nimport {\n\torderCreateReducer,\n\torderDetailsReducer,\n\torderPayReducer,\n\torderDeliverReducer,\n\torderListUserReducer,\n\torderListAllReducer,\n\torderShippedReducer,\n} from './reducers/orderReducers';\n\n// combine all the above reducers to the store\nconst reducer = combineReducers({\n\tproductList: productListReducer,\n\tproductDetails: productDetailsReducer,\n\tproductDelete: productDeleteReducer,\n\tproductCreate: productCreateReducer,\n\tproductCreateReview: productCreateReviewReducer,\n\tproductUpdate: productUpdateReducer,\n\tproductTopRated: productTopRatedReducer,\n\tcart: cartReducer,\n\tuserLogin: userLoginReducer,\n\tuserLoginRefresh: userLoginRefreshReducer,\n\tuserRegister: userRegisterReducer,\n\tuserSendEmailVerfication: userSendEmailVerficationReducer,\n\tuserConfirm: userConfirmReducer,\n\tuserResetPassword: userResetPasswordReducer,\n\tuserDetails: userDetailsReducer,\n\tuserProfileUpdate: userProfileUpdateReducer,\n\tuserList: userListReducer,\n\tuserDelete: userDeleteReducer,\n\tuserUpdate: userUpdateReducer,\n\torderCreate: orderCreateReducer,\n\torderDetails: orderDetailsReducer,\n\torderPay: orderPayReducer,\n\torderShipped:orderShippedReducer,\n\torderDeliver: orderDeliverReducer,\n\torderListUser: orderListUserReducer,\n\torderListAll: orderListAllReducer,\n});\n\n// get a few cart items from the local storage\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems')\n\t? JSON.parse(localStorage.getItem('cartItems'))\n\t: [];\n\n// get the user info from local storage\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null;\n\n// get the shipping address from local storage\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress')\n\t? JSON.parse(localStorage.getItem('shippingAddress'))\n\t: {};\n\n// get refresh token from the local storage\nconst tokenInfoFromLocalStoage = localStorage.getItem('refreshToken')\n\t? localStorage.getItem('refreshToken')\n\t: null;\n\n// set the initial state based on above local storage values\nconst initialState = {\n\tcart: {\n\t\tcartItems: [...cartItemsFromLocalStorage],\n\t\tshippingAddress: shippingAddressFromLocalStorage,\n\t},\n\tuserLogin: {\n\t\tuserInfo: userInfoFromLocalStorage,\n\t},\n\tuserLoginRefresh: {\n\t\ttokenInfo: tokenInfoFromLocalStoage,\n\t},\n};\n\n// user redux thunk for making async calls\nconst middleware = [thunk];\n\n// create the redux store\nconst store = createStore(\n\treducer,\n\tinitialState,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n\tPRODUCT_LIST_REQUEST,\n\tPRODUCT_LIST_SUCCESS,\n\tPRODUCT_LIST_FAILURE,\n\tPRODUCT_DETAILS_FAILURE,\n\tPRODUCT_DETAILS_REQUEST,\n\tPRODUCT_DETAILS_SUCCESS,\n\tPRODUCT_DELETE_FAILURE,\n\tPRODUCT_DELETE_REQUEST,\n\tPRODUCT_DELETE_SUCCESS,\n\tPRODUCT_CREATE_SUCCESS,\n\tPRODUCT_CREATE_FAILURE,\n\tPRODUCT_CREATE_REQUEST,\n\tPRODUCT_CREATE_RESET,\n\tPRODUCT_UPDATE_SUCCESS,\n\tPRODUCT_UPDATE_FAILURE,\n\tPRODUCT_UPDATE_REQUEST,\n\tPRODUCT_UPDATE_RESET,\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\n\tPRODUCT_CREATE_REVIEW_FAILURE,\n\tPRODUCT_CREATE_REVIEW_REQUEST,\n\tPRODUCT_CREATE_REVIEW_RESET,\n\tPRODUCT_TOP_RATED_SUCCESS,\n\tPRODUCT_TOP_RATED_FAILURE,\n\tPRODUCT_TOP_RATED_REQUEST,\n} from '../constants/productConstants';\n\n// list products based on keyword and paginated page number\nexport const productListReducer = (state = { products: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase PRODUCT_LIST_REQUEST:\n\t\t\treturn { loading: true, products: [] };\n\n\t\tcase PRODUCT_LIST_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tproducts: action.payload.products,\n\t\t\t\tpage: action.payload.page,\n\t\t\t\tpages: action.payload.pages,\n\t\t\t};\n\n\t\tcase PRODUCT_LIST_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\n\t\tdefault:\n\t\t\treturn { state };\n\t}\n};\n\n// details about a particular product\nexport const productDetailsReducer = (\n\tstate = { product: { reviews: [] } },\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase PRODUCT_DETAILS_REQUEST:\n\t\t\treturn { loading: true, ...state };\n\t\tcase PRODUCT_DETAILS_SUCCESS:\n\t\t\treturn { loading: false, product: action.payload };\n\t\tcase PRODUCT_DETAILS_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase PRODUCT_DELETE_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase PRODUCT_DELETE_SUCCESS:\n\t\t\treturn { loading: false, success: true };\n\t\tcase PRODUCT_DELETE_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase PRODUCT_CREATE_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase PRODUCT_CREATE_SUCCESS:\n\t\t\treturn { loading: false, success: true, product: action.payload };\n\t\tcase PRODUCT_CREATE_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase PRODUCT_CREATE_RESET:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\nexport const productCreateReviewReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase PRODUCT_CREATE_REVIEW_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase PRODUCT_CREATE_REVIEW_SUCCESS:\n\t\t\treturn { loading: false, success: true };\n\t\tcase PRODUCT_CREATE_REVIEW_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase PRODUCT_CREATE_REVIEW_RESET:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n\tswitch (action.type) {\n\t\tcase PRODUCT_UPDATE_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase PRODUCT_UPDATE_SUCCESS:\n\t\t\treturn { loading: false, success: true, product: action.payload };\n\t\tcase PRODUCT_UPDATE_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase PRODUCT_UPDATE_RESET:\n\t\t\treturn { product: {} };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// fetching top rated products\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase PRODUCT_TOP_RATED_REQUEST:\n\t\t\treturn { loading: true, products: [] };\n\t\tcase PRODUCT_TOP_RATED_SUCCESS:\n\t\t\treturn { loading: false, products: action.payload };\n\t\tcase PRODUCT_TOP_RATED_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n","import {\n\tCART_ADD_ITEM,\n\tCART_REMOVE_ITEM,\n\tCART_SAVE_SHIPPING_ADDRESS,\n\tCART_SAVE_PAYMENT_METHOD,\n\tCART_RESET,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n\tstate = { cartItems: [], shippingAddress: {} },\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase CART_ADD_ITEM:\n\t\t\tconst item = action.payload;\n\n\t\t\t// check if the item exists in the cart\n\t\t\tconst existingItem = state.cartItems.find(\n\t\t\t\t(ele) => ele.product === item.product\n\t\t\t);\n\t\t\tif (existingItem) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcartItems: state.cartItems.map((ele) =>\n\t\t\t\t\t\tele.product === existingItem.product ? item : ele\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcartItems: [...state.cartItems, item],\n\t\t\t\t};\n\t\t\t}\n\t\tcase CART_REMOVE_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: state.cartItems.filter(\n\t\t\t\t\t(ele) => ele.product !== action.payload\n\t\t\t\t),\n\t\t\t};\n\t\tcase CART_SAVE_SHIPPING_ADDRESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshippingAddress: action.payload,\n\t\t\t};\n\t\tcase CART_SAVE_PAYMENT_METHOD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpaymentMethod: action.payload,\n\t\t\t};\n\t\tcase CART_RESET: {\n\t\t\treturn {\n\t\t\t\tcartItems: [],\n\t\t\t\tshippingAddress: action.payload,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n","import {\n\tUSER_LOGIN_FAILURE,\n\tUSER_LOGIN_REQUEST,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGOUT,\n\tUSER_REGISTER_FAILURE,\n\tUSER_REGISTER_SUCCESS,\n\tUSER_REGISTER_REQUEST,\n\tUSER_RESET_PASSWORD_FAILURE,\n\tUSER_RESET_PASSWORD_SUCCESS,\n\tUSER_RESET_PASSWORD_REQUEST,\n\tUSER_EMAIL_VERIFICATION_REQUEST,\n\tUSER_EMAIL_VERIFICATION_SUCCESS,\n\tUSER_EMAIL_VERIFICATION_FAILURE,\n\tUSER_CONFIRM_REQUEST,\n\tUSER_CONFIRM_SUCCESS,\n\tUSER_CONFIRM_FAILURE,\n\tUSER_DETAILS_FAILURE,\n\tUSER_DETAILS_SUCCESS,\n\tUSER_DETAILS_REQUEST,\n\tUSER_DETAILS_RESET,\n\tUSER_PROFILE_UPDATE_REQUEST,\n\tUSER_PROFILE_UPDATE_SUCCESS,\n\tUSER_PROFILE_UPDATE_FAILURE,\n\tUSER_PROFILE_UPDATE_RESET,\n\tUSER_LOGIN_REFRESH_REQUEST,\n\tUSER_LOGIN_REFRESH_SUCCESS,\n\tUSER_LOGIN_REFRESH_FAILURE,\n\tUSER_LIST_REQUEST,\n\tUSER_LIST_SUCCESS,\n\tUSER_LIST_FAILURE,\n\tUSER_LIST_RESET,\n\tUSER_DELETE_REQUEST,\n\tUSER_DELETE_SUCCESS,\n\tUSER_DELETE_FAILURE,\n\tUSER_UPDATE_REQUEST,\n\tUSER_UPDATE_SUCCESS,\n\tUSER_UPDATE_FAILURE,\n\tUSER_UPDATE_RESET,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_LOGIN_REQUEST:\n\t\t\treturn { ...state, loading: true };\n\t\tcase USER_LOGIN_SUCCESS:\n\t\t\treturn { loading: false, userInfo: action.payload };\n\t\tcase USER_LOGIN_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase USER_LOGOUT:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// use refresh token to obtain new access token for the logged in user\nexport const userLoginRefreshReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_LOGIN_REFRESH_REQUEST:\n\t\t\treturn { ...state, loading: true };\n\t\tcase USER_LOGIN_REFRESH_SUCCESS:\n\t\t\treturn { loading: false, tokenInfo: action.payload };\n\t\tcase USER_LOGIN_REFRESH_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// sending an email for account verification\nexport const userSendEmailVerficationReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_EMAIL_VERIFICATION_REQUEST:\n\t\t\treturn { isLoading: true };\n\t\tcase USER_EMAIL_VERIFICATION_SUCCESS:\n\t\t\treturn { isLoading: true, emailSent: action.payload };\n\t\tcase USER_EMAIL_VERIFICATION_FAILURE:\n\t\t\treturn { isLoading: true, hasError: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// update user account to confirmed\nexport const userConfirmReducer = (state = { isConfirmed: false }, action) => {\n\tswitch (action.type) {\n\t\tcase USER_CONFIRM_REQUEST:\n\t\t\treturn { ...state, loading: true };\n\t\tcase USER_CONFIRM_SUCCESS:\n\t\t\treturn { loading: false, isConfirmed: action.payload };\n\t\tcase USER_CONFIRM_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// reset the user password\nexport const userResetPasswordReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_RESET_PASSWORD_REQUEST:\n\t\t\treturn { ...state, loading: true };\n\t\tcase USER_RESET_PASSWORD_SUCCESS:\n\t\t\treturn { loading: false, resetPassword: action.payload };\n\t\tcase USER_RESET_PASSWORD_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault: {\n\t\t\treturn { ...state };\n\t\t}\n\t}\n};\n\n// register user using email and password\nexport const userRegisterReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_REGISTER_REQUEST:\n\t\t\treturn { ...state, loading: true };\n\t\tcase USER_REGISTER_SUCCESS:\n\t\t\treturn { loading: false, userInfo: action.payload };\n\t\tcase USER_REGISTER_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// fetch user details\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n\tswitch (action.type) {\n\t\tcase USER_DETAILS_REQUEST:\n\t\t\treturn { ...state, loading: true };\n\t\tcase USER_DETAILS_SUCCESS:\n\t\t\treturn { loading: false, user: action.payload };\n\t\tcase USER_DETAILS_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase USER_DETAILS_RESET:\n\t\t\treturn { user: {} };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// update user profile, not in admin view\nexport const userProfileUpdateReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_PROFILE_UPDATE_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase USER_PROFILE_UPDATE_SUCCESS:\n\t\t\treturn { loading: false, success: true, userInfo: action.payload };\n\t\tcase USER_PROFILE_UPDATE_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase USER_PROFILE_UPDATE_RESET:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// list all users for the admin view\nexport const userListReducer = (state = { users: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase USER_LIST_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase USER_LIST_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tusers: action.payload.users,\n\t\t\t\tpage: action.payload.page,\n\t\t\t\tpages: action.payload.pages,\n\t\t\t\ttotal: action.payload.total,\n\t\t\t};\n\t\tcase USER_LIST_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase USER_LIST_RESET:\n\t\t\treturn { users: [] };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase USER_DELETE_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase USER_DELETE_SUCCESS:\n\t\t\treturn { loading: false, success: true };\n\t\tcase USER_DELETE_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// update user from the admin panel view\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n\tswitch (action.type) {\n\t\tcase USER_UPDATE_REQUEST:\n\t\t\treturn { loading: true };\n\t\tcase USER_UPDATE_SUCCESS:\n\t\t\treturn { loading: false, success: true };\n\t\tcase USER_UPDATE_FAILURE:\n\t\t\treturn { loading: false, error: action.payload };\n\t\tcase USER_UPDATE_RESET:\n\t\t\treturn { user: {} };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n","import {\n\tORDER_CREATE_REQUEST,\n\tORDER_CREATE_SUCCESS,\n\tORDER_CREATE_FAILURE,\n\tORDER_CREATE_RESET,\n\tORDER_DETAILS_REQUEST,\n\tORDER_DETAILS_SUCCESS,\n\tORDER_DETAILS_FAILURE,\n\tORDER_PAY_REQUEST,\n\tORDER_PAY_SUCCESS,\n\tORDER_PAY_FAILURE,\n\tORDER_PAY_RESET,\n\tORDER_DELIVER_REQUEST,\n\tORDER_DELIVER_SUCCESS,\n\tORDER_DELIVER_FAILURE,\n\tORDER_DELIVER_RESET,\n\tORDER_USER_LIST_REQUEST,\n\tORDER_USER_LIST_SUCCESS,\n\tORDER_USER_LIST_FAILURE,\n\tORDER_USER_LIST_RESET,\n\tORDER_ALL_LIST_REQUEST,\n\tORDER_ALL_LIST_SUCCESS,\n\tORDER_ALL_LIST_FAILURE,\n\tORDER_SHIPPED_REQUEST,\n\tORDER_SHIPPED_SUCCESS,\n\tORDER_SHIPPED_FAILURE,\n\tORDER_SHIPPED_RESET,\n} from '../constants/orderConstants';\n\n// create an order\nexport const orderCreateReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ORDER_CREATE_REQUEST:\n\t\t\treturn {\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase ORDER_CREATE_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tsuccess: true,\n\t\t\t\torder: action.payload,\n\t\t\t};\n\t\tcase ORDER_CREATE_FAILURE:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tcase ORDER_CREATE_RESET:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// get order details\nexport const orderDetailsReducer = (\n\tstate = { loading: true, orderItems: [], shippingAddress: {} },\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase ORDER_DETAILS_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase ORDER_DETAILS_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\torder: action.payload,\n\t\t\t};\n\t\tcase ORDER_DETAILS_FAILURE:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// update order payment options\nexport const orderPayReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ORDER_PAY_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase ORDER_PAY_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tsuccess: true,\n\t\t\t};\n\t\tcase ORDER_PAY_FAILURE:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tcase ORDER_PAY_RESET:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n// update order to be Shipped or not\nexport const orderShippedReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ORDER_SHIPPED_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase ORDER_SHIPPED_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tsuccess: true,\n\t\t\t};\n\t\tcase ORDER_SHIPPED_FAILURE:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tcase ORDER_SHIPPED_RESET:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// update order to be delivered or not\nexport const orderDeliverReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ORDER_DELIVER_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase ORDER_DELIVER_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tsuccess: true,\n\t\t\t};\n\t\tcase ORDER_DELIVER_FAILURE:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tcase ORDER_DELIVER_RESET:\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// reducer to list orders of the particular user\nexport const orderListUserReducer = (state = { orders: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase ORDER_USER_LIST_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase ORDER_USER_LIST_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\torders: action.payload,\n\t\t\t};\n\t\tcase ORDER_USER_LIST_FAILURE:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tcase ORDER_USER_LIST_RESET:\n\t\t\treturn { orders: [] };\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n\n// reducer to list all orders for the admin panel view\nexport const orderListAllReducer = (state = { orders: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase ORDER_ALL_LIST_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase ORDER_ALL_LIST_SUCCESS:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\torders: action.payload.orders,\n\t\t\t\tpage: action.payload.page,\n\t\t\t\tpages: action.payload.pages,\n\t\t\t\ttotal: action.payload.total,\n\t\t\t};\n\t\tcase ORDER_ALL_LIST_FAILURE:\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HelmetProvider>\n      <App />\n    </HelmetProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}