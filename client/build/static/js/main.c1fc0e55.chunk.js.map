{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Paginate.js","components/Message.js","constants/productConstants.js","actions/productActions.js","components/BasicSkeleton.js","components/SkeletonShimmer.js","components/CarouselSkeleton.js","components/ProductCarousel.js","components/Meta.js","components/ProductSkeleton.js","pages/HomePage.js","components/ImageMagnifier.js","components/Loader.js","actions/orderActions.js","utils/getDateString.js","pages/ProductPage.js","constants/cartConstants.js","actions/cartActions.js","pages/CartPage.js","components/FormContainer.js","pages/LoginPage.js","pages/RegisterPage.js","pages/ProfilePage.js","pages/ConfirmPage.js","components/CheckoutStatus.js","pages/ShippingPage.js","pages/PaymentPage.js","pages/PlaceOrderPage.js","components/CheckoutForm.js","pages/OrderPage.js","pages/PasswordResetPage.js","pages/UserListPage.js","pages/UserEditPage.js","pages/ProductListPage.js","pages/ProductEditPage.js","pages/OrderListPage.js","assets/404Error.png","pages/ErrorPage.js","serviceWorkerRegistration.js","ServiceWorkerWrapper.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGIN_REFRESH_REQUEST","USER_LOGIN_REFRESH_SUCCESS","USER_LOGIN_REFRESH_FAILURE","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_RESET_PASSWORD_REQUEST","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_FAILURE","USER_EMAIL_VERIFICATION_REQUEST","USER_EMAIL_VERIFICATION_SUCCESS","USER_EMAIL_VERIFICATION_FAILURE","USER_CONFIRM_REQUEST","USER_CONFIRM_SUCCESS","USER_CONFIRM_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","USER_DETAILS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAILURE","USER_PROFILE_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILURE","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILURE","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAILURE","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILURE","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILURE","ORDER_PAY_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILURE","ORDER_DELIVER_RESET","ORDER_USER_LIST_REQUEST","ORDER_USER_LIST_SUCCESS","ORDER_USER_LIST_FAILURE","ORDER_USER_LIST_RESET","ORDER_ALL_LIST_REQUEST","ORDER_ALL_LIST_SUCCESS","ORDER_ALL_LIST_FAILURE","refreshLogin","email","dispatch","getState","type","userInfo","userLogin","config","headers","axios","post","token","refreshToken","data","success","payload","updatedUser","accessToken","localStorage","setItem","JSON","stringify","removeItem","response","message","getUserDetails","id","Authorization","get","updateUserProfile","user","put","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","className","InputGroup","Control","style","border","borderRight","name","onChange","target","value","placeholder","Text","background","borderLeft","margin","outline","padding","color","Header","useDispatch","useSelector","state","cart","cartItems","show1","setShow1","show2","setShow2","count","setCount","useEffect","reduce","acc","item","qty","handleLogout","window","location","href","display","innerHeight","minWidth","height","zIndex","position","onClick","Navbar","bg","variant","expand","Container","to","Brand","render","Nav","justifyContent","isAdmin","Link","fontSize","innerWidth","NavDropdown","title","show","Item","src","avatar","alt","Footer","Date","getFullYear","Rating","text","map","ele","idx","defaultProps","Product","product","Card","_id","Img","loading","image","Body","textDecoration","Title","as","rating","numReviews","price","toLocaleString","maximumFractionDigits","currency","Paginate","pages","page","forOrders","forUsers","Pagination","Array","keys","active","Number","Message","duration","children","visible","setVisible","setTimeout","Alert","onClose","dismissible","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILURE","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILURE","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAILURE","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAILURE","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILURE","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAILURE","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_RATED_REQUEST","PRODUCT_TOP_RATED_SUCCESS","PRODUCT_TOP_RATED_FAILURE","listProducts","pageNumber","pageSize","listProductDetails","BasicSkeleton","classes","SkeletonShimmer","CarouselSkeleton","overflow","ProductCarousel","productTopRated","error","products","Carousel","marginTop","pause","indicators","interval","CarouselItem","Image","fluid","Caption","Meta","description","keywords","content","ProductSkeleton","HomePage","match","params","promptVerfication","setPromptVerification","setProducts","productAvailable","setProductAvailable","productList","userInfoError","userDetails","isSocialLogin","parse","getItem","length","alignItems","class","Row","Col","sm","md","lg","xl","ImageMagnifier","width","magnifierHeight","magnifieWidth","zoomLevel","x","y","setXY","imgWidth","imgHeight","setSize","showMagnifier","setShowMagnifier","onMouseEnter","currentTarget","getBoundingClientRect","onMouseMove","top","left","pageX","pageXOffset","pageY","pageYOffset","onMouseLeave","pointerEvents","opacity","backgroundColor","backgroundImage","backgroundRepeat","borderRadius","backgroundSize","backgroundPositionX","backgroundPositionY","Loader","Spinner","animation","role","payOrder","orderID","paymentResult","listMyOrders","getDateString","date","showTime","options","year","month","day","timeStr","toLocaleTimeString","timeStyle","hour12","timeZone","result","toLocaleDateString","ProductPage","quantity","setQuantity","setRating","comment","setComment","allReviews","setAllReviews","hasOrderedItem","setHasOrderedItem","showReviewForm","setShowReviewForm","productDetails","userLoginError","productCreateReview","loadingCreateReview","successCreateReview","errorCreateReview","orders","orderListUser","alert","reviews","flag","obj","orderItems","toString","sortedArr","sort","a","b","createdAt","ListGroup","countInStock","Button","disabled","review","productID","Group","controlId","default","FloatingLabel","label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_RESET","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addItem","console","savePaymentMethod","log","CartPage","totalItems","setTotalItems","search","split","handleRemoveFromCart","rounded","ButtonGroup","size","FormContainer","xs","LoginPage","setEmail","password","setPassword","redirect","loginUser","Label","RegisterPage","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","registerUser","ProfilePage","inputFile","useRef","showSubmitButton","setShowSubmitButton","typePassword","setTypePassword","typeConfirmPassword","setTypeConfirmPassword","setAvatar","allOrders","setAllOrders","uploading","setUploading","errorImageUpload","setErrorImageUpload","userProfileUpdate","loadingOrdersList","errorOrdersList","userSendEmailVerfication","emailSent","hasError","handleImageUpload","file","files","formData","FormData","append","secure_url","isConfirmed","fontWeight","focus","sendVerficationEmail","flexFlow","alignSelf","marginBottom","cursor","current","click","accept","ref","stopPropagation","marginLeft","Table","striped","bordered","responsive","order","textAlign","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","ConfirmPage","userConfirm","isLoggedIn","setIsLoggedIn","emailToken","alreadyLoggedIn","confirmUser","CheckoutStatus","step1","step2","step3","step4","ShippingPage","shippingAddress","phone","setPhone","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentPage","paymentMethod","setPaymentMethod","handleChange","Check","inline","checked","PlaceOrderPage","orderCreate","itemsPrice","shippingPrice","taxPrice","createOrder","CheckoutForm","setError","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","getClientSecret","makePayment","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","paymentIntent","paymentMode","reload","OrderPage","stripePromise","loadStripe","process","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","getOrderDetails","setImage","handleFileUpload","handlePayment","deliverOrder","PasswordResetPage","userResetPassword","resetPassword","nameFromLocalStorage","passwordToken","resetUserPassword","paddingLeft","UserListPage","userList","users","total","successDelete","userDelete","listAllUsers","handleDelete","confirm","delete","deleteUser","UserEditPage","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","newUserInfo","updateUser","ProductListPage","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","successCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditPage","productId","setBrand","setCategory","setDescription","setPrice","setCountInStock","productUpdate","updateProduct","min","max","step","orderListAll","listAllOrders","justifyItems","gap","imageUrl","url","element","document","createElement","Blob","URL","createObjectURL","download","downloadImage","ErrorPage","errorImg","isLocalhost","Boolean","hostname","register","navigator","origin","addEventListener","swUrl","fetch","then","contentType","status","indexOf","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","serviceWorkerRegistration","reloadPage","postMessage","ToastContainer","Toast","App","path","component","exact","OrderListPage","reducer","combineReducers","action","existingItem","find","filter","userLoginRefresh","tokenInfo","isLoading","cartItemsFromLocalStorage","userInfoFromLocalStorage","shippingAddressFromLocalStorage","tokenInfoFromLocalStoage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c1fc0e55.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\r\nexport const USER_LOGIN_REFRESH_REQUEST = 'USER_LOGIN_REFRESH_REQUEST';\r\nexport const USER_LOGIN_REFRESH_SUCCESS = 'USER_LOGIN_REFRESH_SUCCESS';\r\nexport const USER_LOGIN_REFRESH_FAILURE = 'USER_LOGIN_REFRESH_FAILURE';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAILURE = 'USER_REGISTER_FAILURE';\r\n\r\nexport const USER_RESET_PASSWORD_REQUEST = 'USER_RESET_PASSWORD_REQUEST';\r\nexport const USER_RESET_PASSWORD_SUCCESS = 'USER_RESET_PASSWORD_SUCCESS';\r\nexport const USER_RESET_PASSWORD_FAILURE = 'USER_RESET_PASSWORD_FAILURE';\r\n\r\n// To send the email verification link\r\nexport const USER_EMAIL_VERIFICATION_REQUEST =\r\n\t'USER_EMAIL_VERIFICATION_REQUEST';\r\nexport const USER_EMAIL_VERIFICATION_SUCCESS =\r\n\t'USER_EMAIL_VERIFICATION_SUCCESS';\r\nexport const USER_EMAIL_VERIFICATION_FAILURE =\r\n\t'USER_EMAIL_VERIFICATION_FAILURE';\r\n\r\n// To actually verify the email token and confirm the user email\r\nexport const USER_CONFIRM_REQUEST = 'USER_CONFIRM_REQUEST';\r\nexport const USER_CONFIRM_SUCCESS = 'USER_CONFIRM_SUCCESS';\r\nexport const USER_CONFIRM_FAILURE = 'USER_CONFIRM_FAILURE';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAILURE = 'USER_DETAILS_FAILURE';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_PROFILE_UPDATE_REQUEST = 'USER_PROFILE_UPDATE_REQUEST';\r\nexport const USER_PROFILE_UPDATE_SUCCESS = 'USER_PROFILE_UPDATE_SUCCESS';\r\nexport const USER_PROFILE_UPDATE_FAILURE = 'USER_PROFILE_UPDATE_FAILURE';\r\nexport const USER_PROFILE_UPDATE_RESET = 'USER_PROFILE_UPDATE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAILURE = 'USER_LIST_FAILURE';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAILURE = 'USER_DELETE_FAILURE';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAILURE = 'USER_UPDATE_FAILURE';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAILURE = 'ORDER_CREATE_FAILURE';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAILURE = 'ORDER_DETAILS_FAILURE';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAILURE = 'ORDER_PAY_FAILURE';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAILURE = 'ORDER_DELIVER_FAILURE';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n\r\nexport const ORDER_USER_LIST_REQUEST = 'ORDER_USER_LIST_REQUEST';\r\nexport const ORDER_USER_LIST_SUCCESS = 'ORDER_USER_LIST_SUCCESS';\r\nexport const ORDER_USER_LIST_FAILURE = 'ORDER_USER_LIST_FAILURE';\r\nexport const ORDER_USER_LIST_RESET = 'ORDER_USER_LIST_RESET';\r\n\r\nexport const ORDER_ALL_LIST_REQUEST = 'ORDER_ALL_LIST_REQUEST';\r\nexport const ORDER_ALL_LIST_SUCCESS = 'ORDER_ALL_LIST_SUCCESS';\r\nexport const ORDER_ALL_LIST_FAILURE = 'ORDER_ALL_LIST_FAILURE';\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_LOGIN_REFRESH_REQUEST,\r\n  USER_LOGIN_REFRESH_SUCCESS,\r\n  USER_LOGIN_REFRESH_FAILURE,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAILURE,\r\n  USER_RESET_PASSWORD_REQUEST,\r\n  USER_RESET_PASSWORD_SUCCESS,\r\n  USER_RESET_PASSWORD_FAILURE,\r\n  USER_EMAIL_VERIFICATION_REQUEST,\r\n  USER_EMAIL_VERIFICATION_SUCCESS,\r\n  USER_EMAIL_VERIFICATION_FAILURE,\r\n  USER_CONFIRM_REQUEST,\r\n  USER_CONFIRM_SUCCESS,\r\n  USER_CONFIRM_FAILURE,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAILURE,\r\n  USER_DETAILS_RESET,\r\n  USER_PROFILE_UPDATE_REQUEST,\r\n  USER_PROFILE_UPDATE_SUCCESS,\r\n  USER_PROFILE_UPDATE_FAILURE,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAILURE,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAILURE,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILURE,\r\n} from \"../constants/userConstants\";\r\nimport {\r\n  ORDER_CREATE_RESET,\r\n  ORDER_USER_LIST_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\n// login an user, can be a social login or a normal email verified login\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: { ...data },\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_REFRESH_SUCCESS,\r\n      payload: data.refreshToken,\r\n    });\r\n    // store the refresh token and the rest of the user info in the local storage\r\n    localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n    localStorage.setItem(\"userInfo\", JSON.stringify({ ...data }));\r\n    // remove the variable that helps prompt the user that email is not verified, each time they login\r\n    localStorage.removeItem(\"promptEmailVerfication\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// used for refreshing the access tokens when the user logs in using email and password\r\nexport const refreshLogin = (email) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REFRESH_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/refresh\",\r\n      {\r\n        email,\r\n        token: userInfo.refreshToken,\r\n      },\r\n      config\r\n    );\r\n\r\n    if (data.success) {\r\n      dispatch({ type: USER_LOGIN_REFRESH_SUCCESS, payload: data });\r\n      const updatedUser = {\r\n        ...userInfo,\r\n        accessToken: data.accessToken,\r\n        refreshToken: userInfo.refreshToken,\r\n      };\r\n      // update the local storage\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(updatedUser));\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: updatedUser });\r\n    } else if (!data.success) {\r\n      // set a variable in local storage which redirects to login page, if this refresh thing fails\r\n      localStorage.removeItem(\"userInfo\");\r\n      localStorage.setItem(\"redirectLogin\", \"true\"); // after refresh token also expires, redirect to login page after loggin out the user\r\n      dispatch({ type: USER_LOGOUT });\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_REFRESH_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// logout by removing all local storage info\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"redirectLogin\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_CREATE_RESET });\r\n  dispatch({ type: ORDER_USER_LIST_RESET });\r\n};\r\n\r\n// register a new user with the form for name, email, password\r\nexport const registerUser = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// send an email for verification of the newly registered account\r\nexport const sendVerficationEmail = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_EMAIL_VERIFICATION_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/users/confirm\", { email }, config);\r\n    dispatch({ type: USER_EMAIL_VERIFICATION_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_EMAIL_VERIFICATION_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// take the email token sent from the mail, and confirm the account once the link is clicked\r\nexport const confirmUser =\r\n  (emailToken, alreadyLoggedIn = false) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: USER_CONFIRM_REQUEST });\r\n      const { data } = await axios.get(`/api/users/confirm/${emailToken}`);\r\n\r\n      // remove variable meant to prompt the user for email verification\r\n      localStorage.removeItem(\"promptEmailVerfication\");\r\n      dispatch({ type: USER_CONFIRM_SUCCESS, payload: true });\r\n\r\n      if (alreadyLoggedIn) {\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n        dispatch({\r\n          type: USER_LOGIN_REFRESH_SUCCESS,\r\n          payload: data.refreshToken,\r\n        });\r\n        localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      }\r\n\r\n      localStorage.removeItem(\"promptEmailVerfication\");\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_CONFIRM_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// reset the user password and send one more verification email from the server\r\nexport const resetUserPassword =\r\n  (passwordToken, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_RESET_PASSWORD_REQUEST });\r\n\r\n      // make the api call to reset the password\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/users/reset\",\r\n        { passwordToken, password },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_RESET_PASSWORD_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_RESET_PASSWORD_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// get user details for profile page\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: { ...data },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update details in the user profile page\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_PROFILE_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"/api/users/profile\", user, config);\r\n\r\n    dispatch({\r\n      type: USER_PROFILE_UPDATE_SUCCESS,\r\n      payload: { ...data },\r\n    });\r\n\r\n    // login the user after updating the information\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: { ...data },\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify({ ...data }));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PROFILE_UPDATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// fetch a list of all users, for the admin panel view\r\nexport const listAllUsers =\r\n  (pageNumber = \"\") =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: USER_LIST_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.accessToken}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/users?pageNumber=${pageNumber}`,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LIST_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// delete the user from the admin panel view\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update the user details\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: { ...data },\r\n    });\r\n\r\n    if (data.id === userInfo.id) {\r\n      // // login the user after updating the information\r\n      const newUserInfo = {\r\n        ...userInfo,\r\n        ...userInfo,\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        isAdmin: data.isAdmin,\r\n        isConfirmed: data.isConfirmed,\r\n      };\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: newUserInfo,\r\n      });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(newUserInfo));\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  // search for the keyword by redirecting to homepage with param\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSearch} className=\"d-flex\">\r\n      {/* display searchbar inside navbar in large screens only */}\r\n      <InputGroup className=\"mt-2\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          style={{\r\n            border: \"1px solid #2c3e50\",\r\n            borderRight: \"none\",\r\n          }}\r\n          name=\"keyword\"\r\n          className=\"mr-sm-2 ml-sm-4\"\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n          placeholder=\"Search Products...\"\r\n          value={keyword}\r\n        />\r\n        <InputGroup.Text\r\n          style={{\r\n            background: \"white\",\r\n            border: \"1px solid #2c3e50\",\r\n            borderLeft: \"none\",\r\n          }}\r\n        >\r\n          <button\r\n            aria-label=\"search\"\r\n            style={{\r\n              margin: \"0\",\r\n              border: \"0\",\r\n              outline: \"0\",\r\n              background: \"transparent\",\r\n              padding: \"0\",\r\n            }}\r\n            type=\"submit\"\r\n          >\r\n            <i style={{ color: \"#95a5a6\" }} className=\"fas fa-search\" />\r\n          </button>\r\n        </InputGroup.Text>\r\n      </InputGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { logoutUser } from \"../actions/userActions\";\r\nimport { Route } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport \"../styles/header.css\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const cart = useSelector((state) => state.cart);\r\n  const { userInfo } = userLogin;\r\n  const { cartItems } = cart;\r\n\r\n  const [show1, setShow1] = useState(false); // to close dropdown when clicking anywhere outside\r\n  const [show2, setShow2] = useState(false); // to close dropdown when clicking anywhere outside\r\n  const [count, setCount] = useState(0);\r\n\r\n  // update count when new cart changes\r\n  useEffect(() => {\r\n    setCount(cartItems.reduce((acc, item) => acc + item.qty, 0));\r\n  }, [cartItems]);\r\n\r\n  // close the second dropdown when it is open and user clicks anywhere else\r\n  const handleDropdown2 = (e) => {\r\n    if (show2) {\r\n      setShow2(false);\r\n    } else {\r\n      setShow2(true);\r\n      setShow1(false);\r\n    }\r\n  };\r\n\r\n  // close the first dropdown when it is open and user clicks anywhere else\r\n  const handleDropdown1 = (e) => {\r\n    if (show1) {\r\n      setShow1(false);\r\n    } else {\r\n      setShow1(true);\r\n      setShow2(false);\r\n    }\r\n  };\r\n\r\n  // dispatch action to logout user\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  // render different navbars for large and small screens without navbar toggle\r\n  return (\r\n    <header>\r\n      {/* this section covers entire screen except the dropdown, to handle onclicks */}\r\n      <section\r\n        className=\"navbar-dropdown-cover\"\r\n        style={{\r\n          display:\r\n            window.innerHeight > 430 && (show1 || show2) ? \"block\" : \"none\",\r\n          minWidth: \"100%\",\r\n          height: \"100%\",\r\n          zIndex: \"100\",\r\n          position: \"absolute\",\r\n        }}\r\n        onClick={() => {\r\n          setShow1(false);\r\n          setShow2(false);\r\n        }}\r\n      />\r\n\r\n      {/* conditionally render different navbars for the mobile sreens */}\r\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              {/* <img src=\"/images/kosells.png\" className=\"nav-logo\" alt=\"logo\" /> */}\r\n              {\"\"} Facon\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          {/* history is available only inside Route, so this is used */}\r\n          {/* display searchbar inside navbar in large screens only */}\r\n          <Route\r\n            render={({ history }) => (\r\n              <div className=\"d-none d-md-block\">\r\n                <SearchBox history={history} />\r\n              </div>\r\n            )}\r\n          />\r\n\r\n          <Nav\r\n            className=\"ms-auto nav-mobile\"\r\n            style={\r\n              userInfo\r\n                ? {\r\n                    justifyContent: \"space-between\",\r\n                  }\r\n                : {\r\n                    justifyContent: \"space-evenly\",\r\n                  }\r\n            }\r\n          >\r\n            {userInfo && userInfo.isAdmin && (\r\n              <>\r\n                {/* display this only on mobile screens */}\r\n                <LinkContainer\r\n                  className=\"d-block d-md-none\"\r\n                  to=\"/admin/userlist\"\r\n                >\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-users\" />\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer\r\n                  className=\"d-block d-md-none\"\r\n                  to=\"/admin/orderlist\"\r\n                >\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user-shield\" />\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer\r\n                  className=\"d-block d-md-none\"\r\n                  to=\"/admin/productlist\"\r\n                >\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-shopping-bag\" />\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              </>\r\n            )}\r\n            <LinkContainer to=\"/cart\">\r\n              <Nav.Link>\r\n                {/* indicate cart size */}\r\n                {count ? (\r\n                  <div className=\"nav-cart-size\">\r\n                    <span\r\n                      style={\r\n                        count > 10\r\n                          ? { fontSize: \"0.6em\" }\r\n                          : { fontSize: \"0.7em\" }\r\n                      }\r\n                    >\r\n                      {count}\r\n                    </span>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <i className=\"fas fa-shopping-cart navbar-icons\" />{\" \"}\r\n                {!(userInfo && userInfo.isAdmin) || window.innerWidth >= 430\r\n                  ? \"Cart\"\r\n                  : \"\"}\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            {userInfo && userInfo.isAdmin && (\r\n              // show this only on md screens and above\r\n              <NavDropdown\r\n                className=\"d-none d-md-block\"\r\n                title=\"Admin\"\r\n                id=\"adminMenu\"\r\n                show={show2}\r\n                onClick={handleDropdown2}\r\n              >\r\n                <LinkContainer to=\"/admin/userlist\">\r\n                  <NavDropdown.Item>Users</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/admin/productlist\">\r\n                  <NavDropdown.Item>Products</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/admin/orderlist\">\r\n                  <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                </LinkContainer>\r\n              </NavDropdown>\r\n            )}\r\n\r\n            {userInfo && (\r\n              // show this only on mobile screens\r\n              <Nav.Link className=\"d-block d-md-none\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt navbar-icons\" />{\" \"}\r\n                {!(userInfo && userInfo.isAdmin) && \"Logout\"}\r\n              </Nav.Link>\r\n            )}\r\n\r\n            {userInfo ? (\r\n              <div className=\"nav-avatar-container\">\r\n                {/* show this container only on mobile screens */}\r\n                <LinkContainer to=\"/profile\" className=\"d-block d-md-none\">\r\n                  <Nav.Link>\r\n                    <img\r\n                      src={userInfo.avatar}\r\n                      className=\"nav-avatar\"\r\n                      alt={userInfo.name}\r\n                    />\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n                <img\r\n                  src={userInfo.avatar}\r\n                  className=\"nav-avatar d-none d-md-block\"\r\n                  alt={userInfo.name}\r\n                />\r\n\r\n                {/* show this dropdown only on large screens */}\r\n                <NavDropdown\r\n                  className=\"d-none d-md-block\"\r\n                  title={userInfo.name}\r\n                  id={userInfo.id}\r\n                  show={show1}\r\n                  onClick={handleDropdown1}\r\n                >\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={handleLogout}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </div>\r\n            ) : (\r\n              <LinkContainer to=\"/login\" variant=\"primary\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-user navbar-icons\" /> Sign In\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n      <footer className=\"footer-container\">\r\n        <div className=\"footer-copyright\">&copy; {new Date().getFullYear()} Facon</div>\r\n      </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    // show full/half star icon depending on rating value\r\n    <div className=\"rating\">\r\n      {[1, 2, 3, 4, 5].map((ele, idx) => (\r\n        <span key={idx}>\r\n          <i\r\n            style={{ color: color, fontSize: \"0.9em\" }}\r\n            className={\r\n              value >= ele\r\n                ? \"fas fa-star\"\r\n                : value >= ele - 0.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            title={`${value} Stars`}\r\n          />\r\n        </span>\r\n      ))}\r\n      <span style={{ fontSize: \"0.9em\" }}>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n};\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"../styles/product.css\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className=\"mt-3 p-0\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img\r\n          loading=\"lazy\"\r\n          className=\"product-image\"\r\n          src={product.image}\r\n          variant=\"top\"\r\n          alt={product.name}\r\n        />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link\r\n          to={`/product/${product._id}`}\r\n          style={{ color: \"dimgray\", textDecoration: \"none\" }}\r\n        >\r\n          <Card.Title className=\"product-title\" as=\"p\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          {product && product.rating && (\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} Review${\r\n                product.numReviews > 1 ? \"s\" : \"\"\r\n              }`}\r\n            />\r\n          )}\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h4\">\r\n          {product.price &&\r\n            product.price.toLocaleString(\"en-IN\", {\r\n              maximumFractionDigits: 2,\r\n              style: \"currency\",\r\n              currency: \"INR\",\r\n            })}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n// different paginate components for products, and for admin panel view\r\nconst Paginate = ({\r\n  pages,\r\n  page,\r\n  isAdmin = false,\r\n  keyword = \"\",\r\n  forOrders = false,\r\n  forUsers = false,\r\n}) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((ele) => (\r\n          <LinkContainer\r\n            key={ele + 1}\r\n            to={\r\n              isAdmin\r\n                ? forOrders\r\n                  ? `/admin/orderlist/${ele + 1}`\r\n                  : forUsers\r\n                  ? `/admin/userlist/${ele + 1}`\r\n                  : `/admin/productlist/${ele + 1}`\r\n                : keyword\r\n                ? `/search/${keyword}/page/${ele + 1}`\r\n                : `/page/${ele + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={ele + 1 === Number(page)}>\r\n              {ele + 1}\r\n            </Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, duration, children }) => {\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setVisible(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (duration) {\r\n      setTimeout(() => setVisible(false), duration * 1000);\r\n    }\r\n  }, [duration]);\r\n\r\n  return (\r\n    <Alert\r\n      onClose={() => setVisible(false)}\r\n      className=\"alert-custom\"\r\n      style={visible ? { display: \"block\" } : { display: \"none\" }}\r\n      variant={variant}\r\n    >\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n  dismissible: false,\r\n};\r\n\r\nexport default Message;\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAILURE = 'PRODUCT_LIST_FAILURE';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAILURE = 'PRODUCT_DETAILS_FAILURE';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAILURE = 'PRODUCT_DELETE_FAILURE';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAILURE = 'PRODUCT_CREATE_FAILURE';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAILURE = 'PRODUCT_UPDATE_FAILURE';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAILURE = 'PRODUCT_CREATE_REVIEW_FAILURE';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_RATED_REQUEST = 'PRODUCT_TOP_RATED_REQUEST';\r\nexport const PRODUCT_TOP_RATED_SUCCESS = 'PRODUCT_TOP_RATED_SUCCESS';\r\nexport const PRODUCT_TOP_RATED_FAILURE = 'PRODUCT_TOP_RATED_FAILURE';\r\n","import {\r\n  PRODUCT_DETAILS_FAILURE,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAILURE,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_DELETE_FAILURE,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAILURE,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAILURE,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAILURE,\r\n  PRODUCT_TOP_RATED_REQUEST,\r\n  PRODUCT_TOP_RATED_SUCCESS,\r\n  PRODUCT_TOP_RATED_FAILURE,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\n// list orders based on keyword and page number when paginated\r\nexport const listProducts =\r\n  (keyword = \"\", pageNumber = \"\", pageSize = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}&pageSize=${pageSize}`\r\n      );\r\n\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// fetch details of a particular product\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// delete a particular product by taking an id\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/products/${id}`, config);\r\n\r\n    data && dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// create a product, when the user is an admin\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products/`, {}, config);\r\n\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update the product details from the admin panel view\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// create a new product review for particular product\r\nexport const createProductReview =\r\n  (productID, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.accessToken}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productID}/reviews`, review, config);\r\n\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// fetch the top rated products for the carousel\r\nexport const getTopRatedProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_RATED_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products/top\");\r\n\r\n    dispatch({ type: PRODUCT_TOP_RATED_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_RATED_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/skeleton.css\";\r\n\r\nconst BasicSkeleton = ({ type }) => {\r\n  const classes = `skeleton ${type}`;\r\n\r\n  return <div className={classes} />;\r\n};\r\n\r\nexport default BasicSkeleton;\r\n","import React from \"react\";\r\n\r\nconst SkeletonShimmer = () => {\r\n  return (\r\n    <div className=\"shimmer-wrapper\">\r\n      <div className=\"shimmer\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkeletonShimmer;\r\n","import React from \"react\";\r\nimport BasicSkeleton from \"./BasicSkeleton\";\r\nimport SkeletonShimmer from \"./SkeletonShimmer\";\r\n\r\nconst CarouselSkeleton = () => {\r\n  return (\r\n    <div style={{ position: \"relative\", overflow: \"hidden\" }}>\r\n      <BasicSkeleton type=\"box\" />\r\n      <SkeletonShimmer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselSkeleton;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Carousel, CarouselItem, Image } from \"react-bootstrap\";\r\nimport Message from \"./Message\";\r\nimport { getTopRatedProducts } from \"../actions/productActions\";\r\nimport \"../styles/product-carousel.css\";\r\nimport CarouselSkeleton from \"../components/CarouselSkeleton\";\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { error, loading, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopRatedProducts());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loading && <CarouselSkeleton />}\r\n      {error && (\r\n        <Message  variant=\"danger\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n      {/* render carousel only on large screens */}\r\n      <Carousel\r\n        style={{ marginTop: \"0.5em\" }}\r\n        pause=\"hover\"\r\n        className=\"bg-primary\"\r\n        indicators={false}\r\n        interval={10000}\r\n      >\r\n        {products &&\r\n          products.map((product) => (\r\n            <CarouselItem key={product._id}>\r\n              <Link to={`/product/${product._id}`}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n                <Carousel.Caption className=\"carousel-caption\">\r\n                  {product.name} (\r\n                  {product.price.toLocaleString(\"en-IN\", {\r\n                    maximumFractionDigits: 2,\r\n                    style: \"currency\",\r\n                    currency: \"INR\",\r\n                  })}\r\n                  )\r\n                </Carousel.Caption>\r\n              </Link>\r\n            </CarouselItem>\r\n          ))}\r\n      </Carousel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keywords\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Welcome to Facon\",\r\n  keywords: \"Shoe, Clothing, Electronics, Accessories\",\r\n  description: \"Buy the best products at the lowest prices\",\r\n};\r\nexport default Meta;\r\n","import React from \"react\";\r\nimport BasicSkeleton from \"./BasicSkeleton\";\r\nimport SkeletonShimmer from \"./SkeletonShimmer\";\r\n\r\nconst ProductSkeleton = () => {\r\n  return (\r\n    <div className=\"skeleton-product-wrapper\">\r\n      <BasicSkeleton type=\"box\" />\r\n      <BasicSkeleton type=\"text\" />\r\n      <BasicSkeleton type=\"text\" />\r\n      <SkeletonShimmer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSkeleton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/Product\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport Meta from \"../components/Meta\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport ProductSkeleton from \"../components/ProductSkeleton\";\r\n\r\nconst HomePage = ({ match, history }) => {\r\n  const keyword = match.params.keyword; // to search for products\r\n  const pageNumber = Number(match.params.pageNumber) || 1; // current page number in the paginated display\r\n  const [promptVerfication, setPromptVerification] = useState(false); // prompt user to verify email if not yet confirmed\r\n  const [products, setProducts] = useState(null);\r\n  const [productAvailable, setProductAvailable] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  // get the products list, userinfo and user details form the redix store\r\n  const productList = useSelector((state) => state.productList);\r\n  let { loading, error, pages } = productList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userInfoError } = userDetails;\r\n\r\n  // fetch the user details\r\n  useEffect(() => {\r\n    userInfo\r\n      ? userInfo.isSocialLogin\r\n        ? dispatch(getUserDetails(userInfo.id))\r\n        : dispatch(getUserDetails(\"profile\"))\r\n      : dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // refresh token to get new access token if error in user details\r\n  useEffect(() => {\r\n    if (userInfoError && userInfo && !userInfo.isSocialLogin) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      dispatch(refreshLogin(user?.email));\r\n    }\r\n  }, [userInfoError, dispatch, userInfo]);\r\n\r\n  // set a state variable to true or false depending on if products is avialable in the state\r\n  useEffect(() => {\r\n    if (products) {\r\n      products.length ? setProductAvailable(true) : setProductAvailable(false);\r\n    }\r\n  }, [products]);\r\n\r\n  // fetch products from redux store into local state\r\n  useEffect(() => {\r\n    if (productList) {\r\n      if (productList.products) setProducts([...productList.products]);\r\n    }\r\n  }, [productList]);\r\n\r\n  // list products based on keyword and pagenumber\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  // check if user needs to be promted about email verification on page load\r\n  useEffect(() => {\r\n    setPromptVerification(\r\n      localStorage.getItem(\"promptEmailVerfication\") === \"true\" ? true : false\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {/* display carousel only on larger screens */}\r\n      {!keyword ? (\r\n        window.innerWidth > 430 && <ProductCarousel />\r\n      ) : (\r\n        <Link className=\"btn btn-outline btn-outline-primary my-2\" to=\"/\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      {/* display this search bar on home page on mobile screens */}\r\n      <div className=\"d-block d-md-none\">\r\n        <SearchBox history={history} />\r\n      </div>\r\n\r\n      {/* if the user needs to be prompted about email verification, show this message */}\r\n      {promptVerfication ? (\r\n        <Message  variant=\"info\" duration={10}>\r\n          Account Created! Please check your email to verify your account and\r\n          start shopping.\r\n        </Message>\r\n      ) : null}\r\n\r\n      {error ? (\r\n        <Message  variant=\"danger\" duration={10}>\r\n          {error}\r\n        </Message>\r\n      ) : !loading && products ? (\r\n        <>\r\n          <div className=\"mt-2\" style={{display:\"flex\", justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n            <h2>All Products</h2>\r\n            <div class=\"buttons_container\">\r\n            <div class=\"dropdown\">\r\n              <button\r\n                class=\"btn btn-secondary dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n              Sort By Category\r\n              </button>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a class=\"dropdown-item\" href=\"#\">\r\n                Sort By Price\r\n                </a>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Row>\r\n            {products.length\r\n              ? products.map((product) => {\r\n                  return (\r\n                    <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\r\n                      <Product product={product} />\r\n                    </Col>\r\n                  );\r\n                })\r\n              : keyword &&\r\n                !productAvailable && (\r\n                  //   show this only if user has searched for some item and it is not available\r\n                  <Col className=\"text-center\">\r\n                    <div>\r\n                      <i className=\"far fa-frown\" /> No items found for this\r\n                      search query\r\n                    </div>\r\n                    Go Back to the <Link to=\"/\">Home Page</Link>\r\n                  </Col>\r\n                )}\r\n          </Row>\r\n          <Paginate\r\n            className=\"mt-auto text-center\"\r\n            page={pageNumber}\r\n            keyword={keyword ? keyword : \"\"}\r\n            pages={pages}\r\n          />\r\n        </>\r\n      ) : (\r\n        loading &&\r\n        products &&\r\n        products.length === 0 && (\r\n          <Row>\r\n            {[1, 2, 3, 4].map((ele) => {\r\n              return (\r\n                <Col sm={12} md={6} lg={4} xl={3} key={ele}>\r\n                  <div>\r\n                    <ProductSkeleton />\r\n                  </div>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nconst ImageMagnifier = ({\r\n  src,\r\n  alt,\r\n  title,\r\n  width,\r\n  height,\r\n  magnifierHeight = 200,\r\n  magnifieWidth = 200,\r\n  zoomLevel = 1.5,\r\n}) => {\r\n  const [[x, y], setXY] = useState([0, 0]);\r\n  const [[imgWidth, imgHeight], setSize] = useState([0, 0]);\r\n  const [showMagnifier, setShowMagnifier] = useState(false);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        height: height,\r\n        width: width,\r\n      }}\r\n    >\r\n      <Image\r\n        className=\"product-image\"\r\n        src={src}\r\n        style={{ height: height, width: width }}\r\n        fluid\r\n        title={title}\r\n        onMouseEnter={(e) => {\r\n          // update image size and turn-on magnifier\r\n          const elem = e.currentTarget;\r\n          const { width, height } = elem.getBoundingClientRect();\r\n          setSize([width, height]);\r\n          setShowMagnifier(true);\r\n        }}\r\n        onMouseMove={(e) => {\r\n          // update cursor position\r\n          const elem = e.currentTarget;\r\n          const { top, left } = elem.getBoundingClientRect();\r\n\r\n          // calculate cursor position on the image\r\n          const x = e.pageX - left - window.pageXOffset;\r\n          const y = e.pageY - top - window.pageYOffset;\r\n          setXY([x, y]);\r\n        }}\r\n        onMouseLeave={() => {\r\n          // close magnifier\r\n          setShowMagnifier(false);\r\n        }}\r\n        alt={alt}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          display: showMagnifier ? \"\" : \"none\",\r\n          // display: window.innerWidth <= 468 ? 'none' : '',\r\n          position: \"absolute\",\r\n          // prevent maginier blocks the mousemove event of img\r\n          pointerEvents: \"none\",\r\n          height: `${magnifierHeight}px`,\r\n          width: `${magnifieWidth}px`,\r\n          // move element center to cursor pos\r\n          top: `${y - magnifierHeight / 2.5}px`,\r\n          left: `${x - magnifieWidth / 2.5}px`,\r\n          opacity: \"1\", // reduce opacity so you can verify position\r\n          border: \"1px solid lightgray\",\r\n          backgroundColor: \"white\",\r\n          backgroundImage: `url('${src}')`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          borderRadius: \"50%\",\r\n\r\n          //calculate zoomed image size\r\n          backgroundSize: `${imgWidth * zoomLevel}px ${\r\n            imgHeight * zoomLevel\r\n          }px`,\r\n\r\n          //calculete position of zoomed image.\r\n          backgroundPositionX: `${-x * zoomLevel + magnifieWidth / 2}px`,\r\n          backgroundPositionY: `${-y * zoomLevel + magnifierHeight / 2}px`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageMagnifier;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"../styles/loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      variant=\"primary\"\r\n      className=\"loader\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAILURE,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAILURE,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAILURE,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAILURE,\r\n  ORDER_USER_LIST_REQUEST,\r\n  ORDER_USER_LIST_SUCCESS,\r\n  ORDER_USER_LIST_FAILURE,\r\n  ORDER_ALL_LIST_REQUEST,\r\n  ORDER_ALL_LIST_SUCCESS,\r\n  ORDER_ALL_LIST_FAILURE,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// get all the details about the order and dispatch only of currently logged in\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.accessToken}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/orders/\", order, config);\r\n\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// get details about a particular order\r\nexport const getOrderDetails = (orderID) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n\t\theaders: {\r\n\t\t  \"Content-Type\": \"application/json\",\r\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t},\r\n\t  };\r\n\r\n    const { data } = await axios.get(`/api/orders/${orderID}`, config);\r\n\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update the current order to that of a paid one, and store the correct payment result\r\nexport const payOrder =\r\n  (orderID, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_PAY_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n\t\theaders: {\r\n\t\t  \"Content-Type\": \"application/json\",\r\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t},\r\n\t  };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderID}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n      \r\n\r\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// Set the current order as delivered, only when logged in user is an admin\r\nexport const deliverOrder = (orderID) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVER_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t  \"Content-Type\": \"application/json\",\r\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t},\r\n\t  };\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderID}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// list all the orders of a particular user\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_USER_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n\t\theaders: {\r\n\t\t  \"Content-Type\": \"application/json\",\r\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t},\r\n\t  };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({ type: ORDER_USER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_USER_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// list all orders for the admin panel view, include the pagenumber being fetched\r\nexport const listAllOrders =\r\n  (pageNumber = \"\") =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_ALL_LIST_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n\t  const config = {\r\n\t\theaders: {\r\n\t\t  \"Content-Type\": \"application/json\",\r\n\t\t  Authorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t},\r\n\t  };\r\n      const { data } = await axios.get(\r\n        `/api/orders?pageNumber=${pageNumber}`,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ORDER_ALL_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_ALL_LIST_FAILURE,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n","// there is a need to convert mongodb dates to readable date formats in various pages\r\n// this util function does that, and has a second argument to decide whether the time has to be included\r\nconst getDateString = (date, showTime = true) => {\r\n\tconst options = {\r\n\t\tyear: 'numeric',\r\n\t\tmonth: 'short',\r\n\t\tday: 'numeric',\r\n\t};\r\n\tconst timeStr = new Date(date).toLocaleTimeString('en', {\r\n\t\ttimeStyle: 'short',\r\n\t\thour12: true,\r\n\t\ttimeZone: 'IST',\r\n\t});\r\n\r\n\tlet result = '';\r\n\tif (showTime) result += `${timeStr} `;\r\n\treturn result + new Date(date).toLocaleDateString('en', options);\r\n};\r\n\r\nexport default getDateString;\r\n","/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Card, Button, ListGroup, Form } from \"react-bootstrap\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport ImageMagnifier from \"../components/ImageMagnifier\"; // to magnify image on hover\r\nimport Rating from \"../components/Rating\";\r\nimport Meta from \"../components/Meta\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\nimport getDateString from \"../utils/getDateString\";\r\nimport \"../styles/product-page.css\";\r\n\r\nconst ProductPage = ({ history, match }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [allReviews, setAllReviews] = useState([]);\r\n  const [hasOrderedItem, setHasOrderedItem] = useState(false); // bool to check if the user has ordered this product\r\n  const [showReviewForm, setShowReviewForm] = useState(false); // bool to decide whether to show the review form or not\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  const productCreateReview = useSelector((state) => state.productCreateReview);\r\n  const {\r\n    loading: loadingCreateReview,\r\n    success: successCreateReview,\r\n    error: errorCreateReview,\r\n  } = productCreateReview;\r\n\r\n  const orderListUser = useSelector((state) => state.orderListUser);\r\n  const { orders } = orderListUser;\r\n\r\n  // fetch user login info\r\n  useEffect(() => {\r\n    userInfo && dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // refresh the access tokens for accessing user details\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders());\r\n  }, [dispatch]);\r\n\r\n  // add a new review, and reset the stored product review in the redux store\r\n  useEffect(() => {\r\n    if (successCreateReview) {\r\n      window.alert(\"Review Submitted!!\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [match, dispatch, successCreateReview]);\r\n\r\n  useEffect(() => {\r\n    if (product && product.reviews && userInfo) {\r\n      let flag = 0; // to check if this user has already reviewed this product\r\n      for (let review of product.reviews) {\r\n        if (review.user === userInfo.id) {\r\n          flag = 1;\r\n          break;\r\n        }\r\n      }\r\n      flag ? setShowReviewForm(false) : setShowReviewForm(true);\r\n    } else {\r\n      setShowReviewForm(true);\r\n    }\r\n  }, [product, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (orders && orders.length) {\r\n      let flag = 0; // to check is this user has ordered this item\r\n      for (let obj of orders) {\r\n        for (let ele of obj.orderItems) {\r\n          if (ele.product.toString() === match.params.id) {\r\n            flag = 1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      flag ? setHasOrderedItem(true) : setHasOrderedItem(false);\r\n    } else {\r\n      setHasOrderedItem(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [orders]);\r\n\r\n  // arrange all reviews in reverse chronological order\r\n  useEffect(() => {\r\n    if (product && product.reviews) {\r\n      const sortedArr = product.reviews.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n      setAllReviews(sortedArr);\r\n    }\r\n  }, [product]);\r\n\r\n  const handleAddToCart = (e) => {\r\n    history.push(`/cart/${match.params.id}?qty=${quantity}`);\r\n  };\r\n\r\n  const handleReviewSubmit = (e) => {\r\n\te.preventDefault();\t\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-outline-primary my-2\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {product && (!product._id || product._id !== match.params.id) ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message  variant=\"danger\" duration={10}>\r\n          {error}\r\n        </Message>\r\n      ) : product ? (\r\n        <>\r\n          <Meta title={`${product.name}`} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <ImageMagnifier\r\n                src={product.image}\r\n                alt={product.name}\r\n                title={product.name}\r\n              />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  {product && product.rating && (\r\n                    <Rating\r\n                      value={product.rating}\r\n                      text={`${product.numReviews} Review${\r\n                        product.numReviews > 1 ? \"s\" : \"\"\r\n                      }`}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>Price: </strong>\r\n                  {product.price &&\r\n                    product.price.toLocaleString(\"en-IN\", {\r\n                      maximumFractionDigits: 2,\r\n                      style: \"currency\",\r\n                      currency: \"INR\",\r\n                    })}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>Description:</strong> {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Price: </strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {product.price &&\r\n                          product.price.toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Status: </strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>\r\n                          <strong>Qty:</strong>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={quantity}\r\n                            onChange={(e) => setQuantity(e.target.value)}\r\n                          >\r\n                            {/* create as many options as the countInStock */}\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (ele) => (\r\n                                <option key={ele + 1} value={ele + 1}>\r\n                                  {ele + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Button\r\n                        onClick={handleAddToCart}\r\n                        type=\"button\"\r\n                        className=\"btn-block btn-md\"\r\n                        disabled={product.countInStock <= 0}\r\n                      >\r\n                        Add To Cart\r\n                      </Button>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2 className=\"mt-3\">Reviews</h2>\r\n              {(!product.reviews || !product.reviews.length) && (\r\n                <Message variant=\"secondary\">No Reviews Yet</Message>\r\n              )}\r\n              <ListGroup variant=\"flush\">\r\n                {allReviews.map((item) => {\r\n                  return (\r\n                    <ListGroup.Item key={item._id}>\r\n                      <div>\r\n                        <img\r\n                          src={item.avatar}\r\n                          alt={item.name}\r\n                          className=\"review-avatar\"\r\n                        />\r\n                        <strong>{item.name}</strong>\r\n                      </div>\r\n                      <Rating value={item.rating} />\r\n                      <p\r\n                        style={{\r\n                          margin: \"0\",\r\n                          fontSize: \"1.1em\",\r\n                        }}\r\n                      >\r\n                        {item.review}\r\n                      </p>\r\n                      <small\r\n                        style={{\r\n                          fontSize: \"0.9em\",\r\n                        }}\r\n                      >\r\n                        {getDateString(item.createdAt, false)}\r\n                      </small>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n                {hasOrderedItem && !showReviewForm && (\r\n                  <Message >\r\n                    You have already reviewed this product\r\n                  </Message>\r\n                )}\r\n                {hasOrderedItem && showReviewForm && (\r\n                  <>\r\n                    <h2>Write a Customer Review</h2>\r\n                    {errorCreateReview && (\r\n                      <Message  variant=\"info\" duration={10}>\r\n                        {errorCreateReview}\r\n                      </Message>\r\n                    )}\r\n                    {loadingCreateReview && <Loader />}\r\n                    <Form onSubmit={handleReviewSubmit}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option default>Choose Rating</option>\r\n                          <option value=\"1\">1 - Bad</option>\r\n                          <option value=\"2\">2 - Poor</option>\r\n                          <option value=\"3\">3 - Fair</option>\r\n                          <option value=\"4\">4 - Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <FloatingLabel\r\n                          controlId=\"commenttext\"\r\n                          label=\"Comment\"\r\n                          className=\"my-3\"\r\n                        >\r\n                          <Form.Control\r\n                            as=\"textarea\"\r\n                            placeholder=\"Leave a comment here\"\r\n                            row=\"3\"\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                            value={comment}\r\n                          />\r\n                        </FloatingLabel>\r\n                      </Form.Group>\r\n                      <div className=\"d-grid\">\r\n                        <Button type=\"submit\">Submit Review</Button>\r\n                      </div>\r\n                    </Form>\r\n                  </>\r\n                )}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_RESET = 'CART_RESET';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","import axios from 'axios';\r\nimport {\r\n\tCART_ADD_ITEM,\r\n\tCART_REMOVE_ITEM,\r\n\tCART_SAVE_SHIPPING_ADDRESS,\r\n\tCART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\n// get the product id and the quantity of the item to add to the cart\r\nexport const addItem = (id, qty) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`/api/products/${id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: CART_ADD_ITEM,\r\n\t\t\tpayload: {\r\n\t\t\t\tproduct: data._id,\r\n\t\t\t\tname: data.name,\r\n\t\t\t\timage: data.image,\r\n\t\t\t\tprice: data.price,\r\n\t\t\t\tcountInStock: data.countInStock,\r\n\t\t\t\tqty,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// update the local storage with the new cart\r\n\t\tlocalStorage.setItem(\r\n\t\t\t'cartItems',\r\n\t\t\tJSON.stringify(getState().cart.cartItems)\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n};\r\n\r\n// get the product id to be removed from the cart\r\nexport const removeItem = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: CART_REMOVE_ITEM,\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t\t// update the local storage with the updated cart\r\n\t\tlocalStorage.setItem(\r\n\t\t\t'cartItems',\r\n\t\t\tJSON.stringify(getState().cart.cartItems)\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\n// get the shipping address data and dispatch corresponding action\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: CART_SAVE_SHIPPING_ADDRESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tlocalStorage.setItem('shippingAddress', JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\n// get the option for payment and update the local storage as well\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: CART_SAVE_PAYMENT_METHOD,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tlocalStorage.setItem('paymentMethod', JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ButtonGroup,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Meta from \"../components/Meta\";\r\nimport Message from \"../components/Message\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\nimport { addItem, removeItem } from \"../actions/cartActions\";\r\n\r\nconst CartPage = ({ match, location, history }) => {\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const productID = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1; // fetch from the query string\r\n  const dispatch = useDispatch();\r\n\r\n  // get cart, userInfo and userdetails from redux store\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error } = userDetails;\r\n\r\n  // get user details depending on what type of login it is, dispatch with correspnding argument\r\n  useEffect(() => {\r\n    userInfo && dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // store total items to local state\r\n  useEffect(() => {\r\n    if (cartItems) {\r\n      setTotalItems(cartItems.reduce((acc, item) => acc + item.qty, 0));\r\n    }\r\n  }, [cartItems]);\r\n\r\n  // if userdetails shows error, then use refresh token to get new access tokens\r\n  useEffect(() => {\r\n    if (error && userInfo ) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  // add item to cart\r\n  useEffect(() => {\r\n    if (productID) {\r\n      dispatch(addItem(productID, qty));\r\n    }\r\n  }, [dispatch, productID, qty]);\r\n\r\n  // remove item from cart\r\n  const handleRemoveFromCart = (id) => {\r\n    dispatch(removeItem(id));\r\n  };\r\n\r\n  // proceed to shipping address page, which is the next step in placing an order\r\n  const handleCheckout = (e) => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Meta title=\"My Cart | Facon\" />\r\n      <Col md={8}>\r\n        <h1>Shopping Cart.</h1>\r\n        {!cartItems.length ? (\r\n          <Message>\r\n            Your Cart is empty. <Link to=\"/\">Go Back.</Link>{\" \"}\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Col md={2}>\r\n                    <Image\r\n                      className=\"product-image\"\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    />\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col\r\n                    md={3}\r\n                    className=\"d-none d-md-flex\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-evenly\",\r\n                    }}\r\n                  >\r\n                    {item.price.toLocaleString(\"en-IN\", {\r\n                      maximumFractionDigits: 2,\r\n                      style: \"currency\",\r\n                      currency: \"INR\",\r\n                    })}\r\n\r\n                    <div>\r\n                      <i\r\n                        style={{ fontSize: \"0.7em\" }}\r\n                        className=\"fas fa-times\"\r\n                      />{\" \"}\r\n                      {item.qty}\r\n                    </div>\r\n                  </Col>\r\n                  {/* display this col only for larger screens */}\r\n                  <Col\r\n                    md={3}\r\n                    className=\"d-none d-md-flex\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <ButtonGroup aria-label=\"Addtocart\">\r\n                      <Button\r\n                        style={{\r\n                          outline: \"none\",\r\n                          borderRight: \"1px solid white\",\r\n                        }}\r\n                        disabled={item.qty >= item.countInStock}\r\n                        onClick={() => {\r\n                          dispatch(addItem(item.product, Number(item.qty + 1)));\r\n                        }}\r\n                        variant=\"primary\"\r\n                      >\r\n                        <i className=\"fas fa-plus\" />\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          outline: \"none\",\r\n                          borderLeft: \"1px solid white\",\r\n                        }}\r\n                        variant=\"primary\"\r\n                        disabled={item.qty === 1}\r\n                        onClick={() => {\r\n                          dispatch(addItem(item.product, Number(item.qty - 1)));\r\n                        }}\r\n                      >\r\n                        <i className=\"fas fa-minus\" />\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                    <Button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemoveFromCart(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\" />\r\n                    </Button>\r\n                  </Col>\r\n                  {/* display this col only on mobile screens */}\r\n                  <Col\r\n                    className=\"d-flex d-md-none mt-2\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      className=\"d-flex\"\r\n                      style={{\r\n                        fontSize: \"1.2em\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      {item.price.toLocaleString(\"en-IN\", {\r\n                        maximumFractionDigits: 2,\r\n                        style: \"currency\",\r\n                        currency: \"INR\",\r\n                      })}\r\n\r\n                      <div className=\"ms-1\">\r\n                        <i\r\n                          style={{\r\n                            fontSize: \"0.7em\",\r\n                          }}\r\n                          className=\"fas fa-times\"\r\n                        />{\" \"}\r\n                        {item.qty}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      className=\"d-flex\"\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        type=\"button\"\r\n                        onClick={() => handleRemoveFromCart(item.product)}\r\n                      >\r\n                        <i className=\"fas fa-trash\" />\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          outline: \"none\",\r\n                          borderRight: \"1px solid white\",\r\n                        }}\r\n                        disabled={item.qty >= item.countInStock}\r\n                        onClick={() => {\r\n                          dispatch(addItem(item.product, Number(item.qty + 1)));\r\n                        }}\r\n                        variant=\"primary\"\r\n                      >\r\n                        <i className=\"fas fa-plus\" />\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          outline: \"none\",\r\n                          borderLeft: \"1px solid white\",\r\n                        }}\r\n                        variant=\"primary\"\r\n                        disabled={item.qty === 1}\r\n                        onClick={() => {\r\n                          dispatch(addItem(item.product, Number(item.qty - 1)));\r\n                        }}\r\n                      >\r\n                        <i className=\"fas fa-minus\" />\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4} className=\"mt-3\">\r\n        <ListGroup>\r\n          <Card variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2 className=\"text-center\">\r\n                Subtotal ({totalItems}) Item\r\n                {totalItems > 1 && \"s\"}\r\n              </h2>\r\n              <strong>\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toLocaleString(\"en-IN\", {\r\n                    maximumFractionDigits: 2,\r\n                    style: \"currency\",\r\n                    currency: \"INR\",\r\n                  })}\r\n              </strong>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <div className=\"d-grid\">\r\n                <Button\r\n                  type=\"button\"\r\n                  size=\"md\"\r\n                  disabled={!cartItems.length}\r\n                  onClick={handleCheckout}\r\n                >\r\n                  Proceed to checkout\r\n                </Button>\r\n              </div>\r\n            </ListGroup.Item>\r\n          </Card>\r\n        </ListGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { loginUser } from \"../actions/userActions\";\r\n\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { registerUser } from \"../actions/userActions\";\r\n\r\nconst RegisterPage = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(registerUser(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  InputGroup,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  sendVerficationEmail,\r\n  getUserDetails,\r\n  updateUserProfile,\r\n  refreshLogin,\r\n} from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\r\nimport Meta from \"../components/Meta\";\r\nimport axios from \"axios\";\r\nimport getDateString from \"../utils/getDateString\";\r\nimport \"../styles/profile-page.css\";\r\n\r\nconst ProfilePage = ({ history }) => {\r\n  const inputFile = useRef(null);\r\n  const [showSubmitButton, setShowSubmitButton] = useState(false); // sisable the submit button unless some user detail is changed by user\r\n  const [typePassword, setTypePassword] = useState(\"password\");\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [allOrders, setAllOrders] = useState([]);\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [errorImageUpload, setErrorImageUpload] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userProfileUpdate = useSelector((state) => state.userProfileUpdate);\r\n  const { success } = userProfileUpdate;\r\n\r\n  const orderListUser = useSelector((state) => state.orderListUser);\r\n  const {\r\n    loading: loadingOrdersList,\r\n    orders,\r\n    error: errorOrdersList,\r\n  } = orderListUser;\r\n\r\n  // check whether verification email has to be sent\r\n  const userSendEmailVerfication = useSelector(\r\n    (state) => state.userSendEmailVerfication\r\n  );\r\n  const { emailSent, hasError } = userSendEmailVerfication;\r\n\r\n  // refresh access token for user details error\r\n  useEffect(() => {\r\n    if (error && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  // set orders to local state\r\n  useEffect(() => {\r\n    if (orders && orders.length) {\r\n      setAllOrders([...orders]);\r\n    }\r\n  }, [orders]);\r\n\r\n  // check if any of the input fields value is changed, only then show the submit button\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (name && userInfo.name !== name) setShowSubmitButton(true);\r\n      else if (email && userInfo.email !== email) setShowSubmitButton(true);\r\n      else if (password || confirmPassword) setShowSubmitButton(true);\r\n      else setShowSubmitButton(false);\r\n    }\r\n  }, [name, email, password, confirmPassword, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      // if user is null, first fetch it and then set its details to the local state\r\n      if (!user || !user.name || success) {\r\n        dispatch(listMyOrders());\r\n        dispatch({ type: USER_PROFILE_UPDATE_RESET });\r\n        userInfo && dispatch(getUserDetails(\"profile\"));\r\n        if (success) {\r\n          dispatch(getUserDetails(\"profile\"));\r\n        }\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setAvatar(user.avatar);\r\n      }\r\n    }\r\n  }, [history, userInfo, user, dispatch, success, loadingOrdersList]);\r\n\r\n  const showHidePassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypePassword(typePassword === \"password\" ? \"text\" : \"password\");\r\n  };\r\n\r\n  const showHideConfirmPassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypeConfirmPassword(\r\n      typeConfirmPassword === \"password\" ? \"text\" : \"password\"\r\n    );\r\n  };\r\n\r\n  // handle file upload to aws bucket\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setAvatar(data.secure_url);\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          avatar: data,\r\n        })\r\n      );\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setErrorImageUpload(\"Please choose a valid image\");\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  // handle image overlay div's click to upload new file\r\n  const handleImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  // update user details\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match. Please retry.\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user.id,\r\n          name,\r\n          email,\r\n          avatar,\r\n          password,\r\n          confirmPassword,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mt-2\">\r\n      <Meta title=\"My Profile | Facon\" />\r\n      {userInfo && !userInfo.isConfirmed ? (\r\n        <>\r\n          {emailSent && (\r\n            <Message variant=\"success\" dismissible>\r\n              A verification link has been sent your mail!\r\n            </Message>\r\n          )}\r\n          {hasError && (\r\n            <Message  variant=\"danger\">\r\n              {hasError}\r\n            </Message>\r\n          )}\r\n          <Card style={{ margin: \"0\" }} className=\"mb-3\">\r\n            <Card.Body className=\"ps-0 \">\r\n              <Card.Title style={{ fontWeight: \"bold\" }}>\r\n                Account Not Verified\r\n              </Card.Title>\r\n              <Card.Text>\r\n                {`${userInfo.name}, `} your account is not yet verfied. Please{\" \"}\r\n                <Button\r\n                  variant=\"link\"\r\n                  className=\"p-0\"\r\n                  style={{\r\n                    fontSize: \"0.9em\",\r\n                    margin: \"0 0 0.1em 0\",\r\n                    focus: \"none\",\r\n                  }}\r\n                  onClick={() => dispatch(sendVerficationEmail(userInfo.email))}\r\n                >\r\n                  click here\r\n                </Button>{\" \"}\r\n                to send a verfication email.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </>\r\n      ) : null}\r\n      <Col\r\n        md={3}\r\n        style={\r\n          userInfo && !userInfo.isConfirmed\r\n            ? {\r\n                opacity: \"0.5\",\r\n                pointerEvents: \"none\",\r\n              }\r\n            : {\r\n                opacity: \"1\",\r\n                pointerEvents: \"\",\r\n              }\r\n        }\r\n      >\r\n        <h2 className=\"text-center\">My Profile</h2>\r\n        {message && (\r\n          <Message dismissible variant=\"warning\" duration={8}>\r\n            {message}\r\n          </Message>\r\n        )}\r\n        {error && error !== \"Not authorised. Token failed\" && (\r\n          <Message  variant=\"danger\" duration={10}>\r\n            {error}\r\n          </Message>\r\n        )}\r\n        {success && (\r\n          <Message  variant=\"success\" duration={8}>\r\n            Profile Updated!\r\n          </Message>\r\n        )}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div style={{ display: \"flex\", flexFlow: \"column nowrap\" }}>\r\n            {errorImageUpload && (\r\n              <Message dismissible variant=\"danger\" duration={10}>\r\n                {errorImageUpload}\r\n              </Message>\r\n            )}\r\n            {uploading ? (\r\n              <Loader />\r\n            ) : (\r\n              <div\r\n                className=\"profile-page-image\"\r\n                style={{ alignSelf: \"center\" }}\r\n              >\r\n                <Image\r\n                  src={avatar}\r\n                  alt={name}\r\n                  style={{\r\n                    height: \"5em\",\r\n                    width: \"5em\",\r\n                    marginBottom: \"1em\",\r\n                    border: \"1px solid #ced4da\",\r\n                    borderRadius: \"50%\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n                <div className=\"image-overlay\" onClick={handleImageClick}>\r\n                  Click to upload image\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* for image upload */}\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"file\"\r\n              ref={inputFile}\r\n              onChange={handleImageUpload}\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"name\">\r\n                <FloatingLabel\r\n                  controlId=\"nameinput\"\r\n                  label=\"Name\"\r\n                ></FloatingLabel>\r\n                <Form.Control\r\n                  placeholder=\"Enter Name\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group\r\n                controlId=\"email\"\r\n                className=\"my-2\"\r\n                style={\r\n                  userInfo\r\n                    ? {\r\n                        pointerEvents: \"none\",\r\n                        opacity: \"0.8\",\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                <FloatingLabel\r\n                  controlId=\"emailinput\"\r\n                  label=\"Email\"\r\n                ></FloatingLabel>\r\n                <Form.Control\r\n                  placeholder=\"Enter Email Address\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              {userInfo && (\r\n                <>\r\n                  <Form.Group>\r\n                    <FloatingLabel\r\n                      controlId=\"passwordinput\"\r\n                      label=\"Password\"\r\n                    ></FloatingLabel>\r\n                    <InputGroup className=\"\">\r\n                      <FloatingLabel\r\n                        controlId=\"passwordinput\"\r\n                        // label=\"Password\"\r\n                        style={{ display: \"flex\" }}\r\n                        className=\"mb-3\"\r\n                      >\r\n                        <Form.Control\r\n                          type={typePassword}\r\n                          placeholder=\"Enter your password\"\r\n                          value={password}\r\n                          style={{\r\n                            borderRight: \"none\",\r\n                            width: \"100%\",\r\n                          }}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <InputGroup.Text\r\n                            onClick={showHidePassword}\r\n                            style={{\r\n                              fontSize: \"1rem\",\r\n                              height: \"100%\",\r\n                              marginLeft: \"-0.5em\",\r\n                              background: \"transparent\",\r\n                              borderLeft: \"none\",\r\n                            }}\r\n                          >\r\n                            {typePassword === \"text\" ? (\r\n                              <i className=\"far fa-eye-slash\" />\r\n                            ) : (\r\n                              <i className=\"far fa-eye\" />\r\n                            )}\r\n                          </InputGroup.Text>\r\n                        </div>\r\n                      </FloatingLabel>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <FloatingLabel\r\n                      controlId=\"confirmpasswordinput\"\r\n                      label=\"Confirm Password\"\r\n                    ></FloatingLabel>\r\n                    <InputGroup className=\"d-block\">\r\n                      <FloatingLabel\r\n                        controlId=\"confirmpasswordinput\"\r\n                        // label=\"Confirm Password\"\r\n                        style={{ display: \"flex\" }}\r\n                        className=\"mb-3\"\r\n                      >\r\n                        <Form.Control\r\n                          type={typeConfirmPassword}\r\n                          placeholder=\"Confirm password\"\r\n                          value={confirmPassword}\r\n                          style={{\r\n                            borderRight: \"none\",\r\n                          }}\r\n                          onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <InputGroup.Text\r\n                            onClick={showHideConfirmPassword}\r\n                            style={{\r\n                              fontSize: \"1rem\",\r\n                              height: \"100%\",\r\n                              marginLeft: \"-0.5em\",\r\n                              background: \"transparent\",\r\n                              borderLeft: \"none\",\r\n                            }}\r\n                          >\r\n                            {typeConfirmPassword === \"text\" ? (\r\n                              <i className=\"far fa-eye-slash\" />\r\n                            ) : (\r\n                              <i className=\"far fa-eye\" />\r\n                            )}\r\n                          </InputGroup.Text>\r\n                        </div>\r\n                      </FloatingLabel>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                </>\r\n              )}\r\n              <div className=\"d-grid mb-3\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={!showSubmitButton}\r\n                  style={{\r\n                    padding: \"0.5em 1em\",\r\n                  }}\r\n                >\r\n                  Update Profile\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Col>\r\n      {/* display orders */}\r\n      <Col\r\n        md={9}\r\n        style={\r\n          userInfo && !userInfo.isConfirmed\r\n            ? {\r\n                opacity: \"0.5\",\r\n                pointerEvents: \"none\",\r\n              }\r\n            : {\r\n                opacity: \"1\",\r\n                pointerEvents: \"\",\r\n              }\r\n        }\r\n      >\r\n        {allOrders.length ? (\r\n          <>\r\n            <h2 className=\"text-center\">My Orders</h2>\r\n            {loadingOrdersList ? (\r\n              <Loader />\r\n            ) : errorOrdersList ? (\r\n              <Message  variant=\"danger\" duration={10}>\r\n                {errorOrdersList}\r\n              </Message>\r\n            ) : (\r\n              <Table\r\n                striped\r\n                bordered\r\n                responsive\r\n                className=\"table-sm text-center\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th>ACTION</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map((order, idx) => (\r\n                    <tr\r\n                      key={idx}\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        padding: \"0\",\r\n                      }}\r\n                    >\r\n                      <td>{getDateString(order.createdAt)}</td>\r\n                      <td>\r\n                        {order.totalPrice.toLocaleString(\"en-IN\", {\r\n                          maximumFractionDigits: 0,\r\n                          style: \"currency\",\r\n                          currency: \"INR\",\r\n                        })}\r\n                      </td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          getDateString(order.paidAt)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{\r\n                              color: \"red\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          getDateString(order.deliveredAt)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{\r\n                              color: \"red\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button\r\n                            variant=\"link\"\r\n                            className=\"btn-sm\"\r\n                            style={{ margin: \"0\" }}\r\n                          >\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Card style={{ border: \"none\", margin: \"0 auto\" }}>\r\n            <Card.Body>\r\n              <Card.Title>No Orders Yet!</Card.Title>\r\n              <Card.Text>\r\n                Details about all your orders will show up here.{\" \"}\r\n                <Link to=\"/\">Continue Shopping</Link>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { confirmUser } from \"../actions/userActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ConfirmPage = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const userConfirm = useSelector((state) => state.userConfirm); // get the userInfo to check if user is confirmed or not\r\n  const { loading, error, isConfirmed } = userConfirm;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // confirm user once the email token is available\r\n    dispatch(confirmUser(match.params.token, isLoggedIn));\r\n  }, [dispatch, match, isLoggedIn]);\r\n\r\n  if (loading || (!isConfirmed && !error)) {\r\n    return <Loader />;\r\n  } else if (error) {\r\n    // redirect to login page after a 10 seconds\r\n    setTimeout(() => {\r\n      history.push(\"/login\");\r\n    }, 10000);\r\n    return (\r\n      <Message variant=\"danger\" duration={10}>\r\n        Verfication Failed. Please try to login again.\r\n      </Message>\r\n    );\r\n  } else if (isConfirmed) {\r\n    // set a variable in local storage to fill email aftrer redirecting to login page after email confirmation\r\n    localStorage.setItem(\"fillEmailOnLoginPage\", \"true\");\r\n    return (\r\n      <Card style={{ border: \"none\", margin: \"0 auto\" }}>\r\n        <Meta title=\"Confirm Password | Facon\" />\r\n        <Card.Body>\r\n          <Card.Title>Account Confirmed</Card.Title>\r\n          <Card.Text>\r\n            {setIsLoggedIn\r\n              ? \"Your account has been successfully verified! Go on and shop for the best deals of the day!\"\r\n              : `Your account has been successfully verified! Please\r\n\t\t\t\t\t\tlogin and start exploring the best deals on all your\r\n\t\t\t\t\t\tfavorite products.`}\r\n          </Card.Text>\r\n          {!setIsLoggedIn ? <Link to=\"/login\">Login</Link> : null}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ConfirmPage;\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport \"../styles/check-status.css\";\r\n\r\n// there are 4 steps in the checkout process\r\n// step 1 is logging in\r\n// step 2 is shipping address input\r\n// step 3 is selecting payment option\r\n// step 4 is placing the order and seeing payment button\r\nconst CheckoutStatus = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"status-bar\">\r\n      <div className=\"status-checkpoint\">\r\n        <div\r\n          className=\"circle\"\r\n          style={step1 ? { background: \"#2c3e50\" } : { background: \"\" }}\r\n        />\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </div>\r\n      <div className=\"connection\" />\r\n      <div className=\"status-checkpoint\">\r\n        <div\r\n          className=\"circle\"\r\n          style={\r\n            step1 && step2 ? { background: \"#2c3e50\" } : { background: \"\" }\r\n          }\r\n        />\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </div>\r\n      <div className=\"connection\" />\r\n\r\n      <div className=\"status-checkpoint\">\r\n        <div\r\n          className=\"circle\"\r\n          style={\r\n            step1 && step2 && step3\r\n              ? { background: \"#2c3e50\" }\r\n              : { background: \"\" }\r\n          }\r\n        />\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </div>\r\n      <div className=\"connection\" />\r\n\r\n      <div className=\"status-checkpoint\">\r\n        <div\r\n          className=\"circle\"\r\n          style={\r\n            step1 && step2 && step3 && step4\r\n              ? { background: \"#2c3e50\" }\r\n              : { background: \"\" }\r\n          }\r\n        />\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </div>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutStatus;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutStatus from \"../components/CheckoutStatus\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\n\r\nconst ShippingPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems, shippingAddress } = cart;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error } = userDetails;\r\n\r\n  const [phone, setPhone] = useState(shippingAddress.phone);\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  // fetch user details from the redux store\r\n  useEffect(() => {\r\n    userInfo && dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // update access token to a new ine using the refresh tokens\r\n  useEffect(() => {\r\n    if (error && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (!(cartItems.length && userInfo)) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [cartItems, history, userInfo]);\r\n\r\n  // save shipping address and move to payment screen\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveShippingAddress({\r\n        phone,\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      })\r\n    );\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutStatus step1 step2 />\r\n      <h1>Shipping Address</h1>\r\n      <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"address\">\r\n          <FloatingLabel\r\n            controlId=\"mobileinput\"\r\n            label=\"Phone\"\r\n          >\r\n          </FloatingLabel>\r\n          <Form.Control\r\n              placeholder=\"Enter Your Mobile No\"\r\n              className=\"mb-2\"\r\n              type=\"text\"\r\n              value={phone}\r\n              required\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"address\">\r\n          <FloatingLabel\r\n            controlId=\"addressinput\"\r\n            label=\"Address\"\r\n          >\r\n          </FloatingLabel>\r\n          <Form.Control\r\n              placeholder=\"Enter address\"\r\n              className=\"mb-2\"\r\n              type=\"text\"\r\n              value={address}\r\n              required\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <FloatingLabel controlId=\"cityinput\" label=\"City\">\r\n          </FloatingLabel>\r\n          <Form.Control\r\n              placeholder=\"Enter City\"\r\n              className=\"mb-2\"\r\n              type=\"text\"\r\n              value={city}\r\n              required\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postalCode\">\r\n          <FloatingLabel\r\n            controlId=\"postalcodeinput\"\r\n            label=\"Postal Code\"\r\n          >\r\n          </FloatingLabel>\r\n          <Form.Control\r\n              placeholder=\"Enter Postal Code\"\r\n              className=\"mb-2\"\r\n              type=\"text\"\r\n              value={postalCode}\r\n              required\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n            />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"country\">\r\n          <FloatingLabel\r\n            controlId=\"countryinput\"\r\n            label=\"Country\"\r\n          >\r\n          </FloatingLabel>\r\n          <Form.Control\r\n              placeholder=\"Enter Country\"\r\n              className=\"mb-2\"\r\n              type=\"text\"\r\n              value={country}\r\n              required\r\n              onChange={(e) => setCountry(e.target.value)}\r\n            />\r\n        </Form.Group>\r\n        <div className=\"d-flex\">\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"ms-auto mt-2\"\r\n            style={{\r\n              padding: \"0.5em 1em\",\r\n              width: \"8rem\",\r\n            }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutStatus from \"../components/CheckoutStatus\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\n\r\nconst PaymentPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"Stripe\"); // default option is the stripe one, but users might not understand 'stripe'\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error } = userDetails;\r\n\r\n  // fetch user details\r\n  useEffect(() => {\r\n    userInfo && dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // refresh the access tokens when user details throws an error\r\n  useEffect(() => {\r\n    if (error && userInfo ) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  // if shipping address is empty, redirect\r\n  useEffect(() => {\r\n    if (!shippingAddress) {\r\n      history.push(\"/shipping\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setPaymentMethod(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      {/* three steps are done in the checkout process */}\r\n      <CheckoutStatus step1 step2 step3 />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexFlow: \"column nowrap\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Col>\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"Stripe(Credit/Debit)\"\r\n                id=\"Stripe\"\r\n                name=\"paymentMethod\"\r\n                value=\"Stripe\"\r\n                checked={paymentMethod === \"Stripe\"}\r\n                onChange={handleChange}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"Other Payment Methods\"\r\n                id=\"other\"\r\n                name=\"paymentMethod\"\r\n                value=\"Other Payment Methods\"\r\n                checked={paymentMethod === \"Other Payment Methods\"}\r\n                onChange={handleChange}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <div className=\"d-grid\">\r\n            <Button type=\"submit\" className=\"my-3\" size=\"md\">\r\n              Continue\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckoutStatus from \"../components/CheckoutStatus\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { CART_RESET } from \"../constants/cartConstants\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\n\r\nconst PlaceOrderPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems, shippingAddress, paymentMethod } = cart;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, loading, success, error } = orderCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  // fetch the userinfo from reducx store\r\n  useEffect(() => {\r\n    userInfo && dispatch(getUserDetails(\"profile\"));\r\n    dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // refresh access token when user detail throws error\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      localStorage.removeItem(\"cartItems\");\r\n      dispatch({ type: CART_RESET, payload: shippingAddress }); // remove items from cart once paid, but keep the shipping address in store\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [success, history]);\r\n\r\n  // All prices, tax is randomly  assigned\r\n  cart.itemsPrice = cartItems.reduce(\r\n    (acc, item) => acc + item.price * item.qty,\r\n    0\r\n  );\r\n\r\n  cart.shippingPrice = cart.itemsPrice > 8000 ? 500 : 300;\r\n  cart.taxPrice = 0.18 * cart.itemsPrice;\r\n  cart.totalPrice = cart.itemsPrice + cart.taxPrice + cart.shippingPrice;\r\n\r\n  const handleOrder = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartItems,\r\n        shippingAddress,\r\n        paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* last step in the ckecout process */}\r\n      <CheckoutStatus step1 step2 step3 step4 />\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Address: </strong> {shippingAddress.address},{\" \"}\r\n                    {shippingAddress.city}-{shippingAddress.postalCode},{\" \"}\r\n                    {shippingAddress.country}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Phone-No: </strong> {shippingAddress.phone}\r\n                  </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong> {paymentMethod}\r\n                  </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h2>Cart Items</h2>\r\n                  {cartItems.length !== 0 ? (\r\n                    <ListGroup variant=\"flush\">\r\n                      {cartItems.map((item, idx) => (\r\n                        <ListGroup.Item key={idx}>\r\n                          <Row>\r\n                            <Col md={2}>\r\n                              <Image\r\n                                className=\"product-image\"\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toLocaleString(\"en-IN\", {\r\n                                maximumFractionDigits: 2,\r\n                                style: \"currency\",\r\n                                currency: \"INR\",\r\n                              })}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  ) : (\r\n                    <Message>Your cart is empty</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item className=\"text-center\">\r\n                    <h2 className=\"text-center\">Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Subtotal</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {Number(cart.itemsPrice).toLocaleString(\"en-IN\", {\r\n                          maximumFractionDigits: 2,\r\n                          style: \"currency\",\r\n                          currency: \"INR\",\r\n                        })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Shipping</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {Number(cart.shippingPrice).toLocaleString(\"en-IN\", {\r\n                          maximumFractionDigits: 2,\r\n                          style: \"currency\",\r\n                          currency: \"INR\",\r\n                        })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Total</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {Number(cart.totalPrice).toLocaleString(\"en-IN\", {\r\n                          maximumFractionDigits: 2,\r\n                          style: \"currency\",\r\n                          currency: \"INR\",\r\n                        })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {error && (\r\n                    <ListGroup.Item>\r\n                      <Message  variant=\"danger\" duration={10}>\r\n                        {error}\r\n                      </Message>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item className=\"d-grid gap-2\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      size=\"md\"\r\n                      disabled={!cartItems.length}\r\n                      onClick={handleOrder}\r\n                    > \r\n                      Place Order\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { payOrder } from \"../actions/orderActions\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { PaymentElement,LinkAuthenticationElement, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\"; // for stripe CC component\r\nimport Message from \"../components/Message\";\r\n\r\nconst CheckoutForm = ({ price, orderID }) => {\r\n  const [error, setError] = useState(\"\"); // from the stripe component itself\r\n  const dispatch = useDispatch();\r\n  const [clientSecret, setClientSecret] = useState(\"\"); // from the payment intent sent from server\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // STEP 1: create a payment intent and getting the secret\r\n  useEffect(() => {\r\n    const getClientSecret = async () => {\r\n      const { data } = await axios.post(\r\n        \"/api/orders/stripe-payment\",\r\n        { price, email: userInfo.email },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setClientSecret(data.clientSecret);\r\n    };\r\n\r\n    if (userInfo && price) getClientSecret();\r\n  }, [price, userInfo]);\r\n\r\n  // STEP 2: make the payment after filling the form properly\r\n  const makePayment = async (e) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make  sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    if (clientSecret) {\r\n      const payload = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details: {\r\n            name: userInfo.name,\r\n            email: userInfo.email,\r\n          },\r\n        },\r\n      });\r\n      // console.log(payload.error);\r\n      if (!payload.error) {\r\n        dispatch(savePaymentMethod(\"Stripe\"));\r\n        dispatch(\r\n          payOrder(orderID, {\r\n            ...payload.paymentIntent,\r\n            paymentMode: \"stripe\",\r\n          })\r\n        );\r\n      } else {\r\n        setError(payload.error.message);\r\n      }\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  // render a checkout form for filling details about credit or debit cards\r\n  return (\r\n    <Form id=\"payment-form\" onSubmit={makePayment}>\r\n      {error && (\r\n        <Message  variant=\"danger\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n      <Form.Group\r\n        style={{\r\n          margin: \"1em 0\",\r\n          fontSize: \"1em\",\r\n        }}\r\n      >\r\n        <CardElement id=\"card-element\" />\r\n      </Form.Group>\r\n      <div className=\"d-grid\">\r\n        <Button disabled={!stripe} size=\"md\" type=\"submit\">\r\n          Pay Now\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { refreshLogin } from \"../actions/userActions\";\r\nimport CheckoutForm from \"../components/CheckoutForm\"; //stripe checkout form\r\nimport getDateString from \"../utils/getDateString\";\r\n\r\nconst OrderPage = ({ match, history }) => {\r\n  // load stripe\r\n  const stripePromise = loadStripe(\r\n    process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const orderID = match.params.id;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  // get new access tokens using the refresh token, is user details throws an error\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  // set order to paid or delivered, and fetch updated orders\r\n  useEffect(() => {\r\n    if (!order || order._id !== orderID || successPay || successDeliver) {\r\n      if (successPay) dispatch({ type: ORDER_PAY_RESET });\r\n      if (successDeliver) dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderID));\r\n    }\r\n  }, [order, orderID, dispatch, successPay, successDeliver]);\r\n\r\n\r\n  // set order as delivered\r\n  const successDeliveryHandler = () => {\r\n    dispatch(deliverOrder(orderID));\r\n  };\r\n\r\n  // for image input, use a ref\r\nconst inputFile = useRef(null);\r\nconst [image, setImage] = useState(null);\r\n\r\n// submit file to uploads, get the url\r\nconst handleFileUpload = async (e) => {\r\n  const file = e.target.files[0];\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/upload\", formData, config);\r\n    setImage(data.secure_url);\r\n} catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// dispatch the payment action with the image url\r\nconst handlePayment = async (e) => {\r\n  e.preventDefault();\r\n  if (image) {\r\n    dispatch(payOrder(orderID, { paymentMode: \"Online\", image }));\r\n  } else {\r\n    alert(\"Please upload a proof of payment\");\r\n  }\r\n};\r\n\r\n\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message  variant=\"danger\" duration={10}>\r\n      {error}\r\n    </Message>\r\n  ) : (\r\n    <>\r\n      <h2>Order {orderID}</h2>\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: </strong>\r\n                    {order.user.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email: </strong>\r\n                    <a href={`mailto:${order.user.email}`}>\r\n                      {order.user.email}\r\n                    </a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Phone-No: </strong>\r\n                    {order.shippingAddress.phone}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address: </strong> {order.shippingAddress.address},{\" \"}\r\n                    {order.shippingAddress.city}-\r\n                    {order.shippingAddress.postalCode},{\" \"}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  <div>\r\n                    {order.isDelivered ? (\r\n                      <Message variant=\"success\">\r\n                        Delivered at: {getDateString(order.deliveredAt)}\r\n                      </Message>\r\n                    ) : (\r\n                      <Message variant=\"danger\">Not Delivered</Message>\r\n                    )}\r\n                  </div>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong> {order.paymentMethod}\r\n                  </p>\r\n                  <div>\r\n                    {order.isPaid ? (\r\n                      <Message variant=\"success\">\r\n                        Paid at: {getDateString(order.paidAt)}\r\n                      </Message>\r\n                    ) : (\r\n                      <Message variant=\"danger\">Not Paid</Message>\r\n                    )}\r\n                  </div>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h2>Cart Items</h2>\r\n                  {order.orderItems.length !== 0 ? (\r\n                    <ListGroup variant=\"flush\">\r\n                      <div\r\n                        style={{\r\n                          background: \"red\",\r\n                        }}\r\n                      ></div>\r\n                      {order.orderItems.map((item, idx) => (\r\n                        <ListGroup.Item key={idx}>\r\n                          <Row>\r\n                            <Col md={2}>\r\n                              <Image\r\n                                className=\"product-image\"\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                            {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toLocaleString(\"en-IN\", {\r\n                                maximumFractionDigits: 2,\r\n                                style: \"currency\",\r\n                                currency: \"INR\",\r\n                              })}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  ) : (\r\n                    <Message>No order</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h2 className=\"text-center\">Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  {error && (\r\n                    <ListGroup.Item>\r\n                      <Message  variant=\"danger\" duration={10}>\r\n                        {error}\r\n                      </Message>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Subtotal</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {order.itemsPrice &&\r\n                          order.itemsPrice.toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Shipping</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {order.shippingPrice &&\r\n                          order.shippingPrice.toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Total</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        {order.totalPrice &&\r\n                          order.totalPrice.toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {!order.isPaid && order.paymentMethod === \"Stripe\" && (\r\n                    <>\r\n                      <ListGroup.Item>\r\n                        {loadingPay && <Loader />}\r\n                        <Elements stripe={stripePromise}>\r\n                          <CheckoutForm\r\n                            price={order.totalPrice * 100}\r\n                            orderID={orderID}\r\n                          />\r\n                        </Elements>\r\n                      </ListGroup.Item>\r\n                    </>\r\n                  )}\r\n                  {!order.isPaid && order.paymentMethod !== \"Stripe\" && (\r\n                    <ListGroup.Item>\r\n                      {loadingPay && <Loader />}\r\n                      <p>Please Upload Your Payment ScreenShot Here</p>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                        id=\"file\"\r\n                        ref={inputFile}\r\n                        onChange={handleFileUpload}\r\n                      />\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"primary\"\r\n                        className=\"mt-2\"\r\n                        onClick={handlePayment}\r\n                      >\r\n                        Upload & Confirm Payment\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  ) }\r\n                  {/* show this only to admins, after payment is done */}\r\n                  {userInfo &&\r\n                    userInfo.isAdmin &&\r\n                    order.isPaid &&\r\n                    !order.isDelivered && (\r\n                      <ListGroup.Item>\r\n                        {loadingDeliver && <Loader />}\r\n                        <div className=\"d-grid\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            variant=\"info\"\r\n                            size=\"md\"\r\n                            onClick={successDeliveryHandler}\r\n                          >\r\n                            Mark as Delivered\r\n                          </Button>\r\n                        </div>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { resetUserPassword } from \"../actions/userActions\";\r\n\r\nconst PasswordResetPage = ({ match, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [typePassword, setTypePassword] = useState(\"password\");\r\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState(\"password\");\r\n  const [message, setMessage] = useState(null);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userResetPassword = useSelector((state) => state.userResetPassword);\r\n  const { loading, resetPassword, error } = userResetPassword;\r\n\r\n  // get the name stored in the local storage and ask that user to reset password\r\n  useEffect(() => {\r\n    const nameFromLocalStorage = localStorage.getItem(\"EcommerceUserName\");\r\n    if (nameFromLocalStorage) {\r\n      setName(nameFromLocalStorage);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (resetPassword) {\r\n      setTimeout(() => {\r\n        history.push(\"/login\");\r\n      }, 10000);\r\n    }\r\n  }, [history, resetPassword]);\r\n\r\n  const showHidePassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypePassword(typePassword === \"password\" ? \"text\" : \"password\");\r\n  };\r\n  const showHideConfirmPassword = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setTypeConfirmPassword(\r\n      typeConfirmPassword === \"password\" ? \"text\" : \"password\"\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match. Please retry.\");\r\n    } else {\r\n      dispatch(resetUserPassword(match.params.token, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>{name ? `${name}, reset password` : \"Reset Password\"}</h1>\r\n      {message && (\r\n        <Message  duration={8} variant=\"warning\">\r\n          {message}\r\n        </Message>\r\n      )}\r\n      {resetPassword && (\r\n        <Message  variant=\"success\" duration={8}>\r\n          Password Changed Successfully.\r\n        </Message>\r\n      )}\r\n      {error && (\r\n        <Message  variant=\"danger\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Form onSubmit={handleSubmit} style={{ width: \"33em\" }}>\r\n          <Form.Group className=\"mb-2\">\r\n            <InputGroup style={{ width: \"100%\" }}>\r\n              <FloatingLabel\r\n                controlId=\"passwordinput\"\r\n                label=\"Password\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  size=\"lg\"\r\n                  type={typePassword}\r\n                  placeholder=\"Enter your password\"\r\n                  value={password}\r\n                  style={{\r\n                    borderRight: \"none\",\r\n                    width: \"205%\",\r\n                  }}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </FloatingLabel>\r\n              <div className=\"input-group-append\">\r\n                <InputGroup.Text\r\n                  onClick={showHidePassword}\r\n                  style={{\r\n                    paddingLeft: \"1em\",\r\n                    fontSize: \"1rem\",\r\n                    width: \"17.5%\",\r\n                    height: \"78%\",\r\n                    marginLeft: \"15rem\",\r\n                    background: \"transparent\",\r\n                  }}\r\n                >\r\n                  {typePassword === \"text\" ? (\r\n                    <i className=\"far fa-eye-slash\" />\r\n                  ) : (\r\n                    <i className=\"far fa-eye\" />\r\n                  )}\r\n                </InputGroup.Text>\r\n              </div>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <Form.Group className=\"my-2\">\r\n            <InputGroup style={{ width: \"100%\" }}>\r\n              <FloatingLabel\r\n                controlId=\"confirmpasswordinput\"\r\n                label=\"Confirm password\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  size=\"lg\"\r\n                  type={typeConfirmPassword}\r\n                  placeholder=\"Confirm your password\"\r\n                  value={confirmPassword}\r\n                  style={{\r\n                    borderRight: \"none\",\r\n                    width: \"205%\",\r\n                  }}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n              </FloatingLabel>\r\n              <div className=\"input-group-append\">\r\n                <InputGroup.Text\r\n                  onClick={showHideConfirmPassword}\r\n                  style={{\r\n                    paddingLeft: \"1em\",\r\n                    fontSize: \"1rem\",\r\n                    width: \"17.5%\",\r\n                    height: \"78%\",\r\n                    marginLeft: \"15rem\",\r\n                    background: \"transparent\",\r\n                  }}\r\n                >\r\n                  {typeConfirmPassword === \"text\" ? (\r\n                    <i className=\"far fa-eye-slash\" />\r\n                  ) : (\r\n                    <i className=\"far fa-eye\" />\r\n                  )}\r\n                </InputGroup.Text>\r\n              </div>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              padding: \"0.5em 1em\",\r\n              width: \"8rem\",\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PasswordResetPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listAllUsers, deleteUser, refreshLogin } from \"../actions/userActions\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\nconst UserListPage = ({ match, history }) => {\r\n  const pageNumber = match.params.pageNumber || 1; // to fetch various pages of orders\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, users, error, page, pages, total } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) dispatch(listAllUsers(pageNumber));\r\n    else history.push(\"/login\");\r\n  }, [dispatch, history, userInfo, successDelete, pageNumber]);\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Are you sure you wanna delete user?\"))\r\n      dispatch(deleteUser(id));\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Users ({`${total || 0}`})</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message  variant=\"danger\" duration={10}>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <Table striped bordered responsive className=\"table-sm text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>CONFIRMED</th>\r\n              <th>ADMIN</th>\r\n              <th>ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users &&\r\n              users.map((user) => {\r\n                return (\r\n                  <tr key={user._id}>\r\n                    <td>{user._id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>\r\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                    </td>\r\n                    <td>\r\n                      {user.isConfirmed ? (\r\n                        <i\r\n                          className=\"fas fa-check\"\r\n                          style={{ color: \"green\" }}\r\n                        />\r\n                      ) : (\r\n                        <i className=\"fas fa-times\" style={{ color: \"red\" }} />\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {user.isAdmin ? (\r\n                        <i\r\n                          className=\"fas fa-check\"\r\n                          style={{ color: \"green\" }}\r\n                        />\r\n                      ) : (\r\n                        <i className=\"fas fa-times\" style={{ color: \"red\" }} />\r\n                      )}\r\n                    </td>\r\n\r\n                    <td\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                        <Button variant=\"link\" className=\"btn-sm\">\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      <Button\r\n                        className=\"btn-sm\"\r\n                        variant=\"danger\"\r\n                        onClick={() => handleDelete(user._id)}\r\n                      >\r\n                        <i className=\"fas fa-trash\" />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <Paginate pages={pages} page={page} isAdmin={true} forUsers={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {\r\n  getUserDetails,\r\n  updateUser,\r\n  refreshLogin,\r\n} from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditPage = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // get new access tokens\r\n  useEffect(() => {\r\n    if (error && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [error, dispatch, userInfo]);\r\n\r\n  // update user details from the admin panel view\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user || !user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\">\r\n        <Button variant=\"outline-primary\" className=\"my-3\">\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <FormContainer>\r\n        {user && <Meta title={`Edit ${user.name} | Facon`} />}\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate ? (\r\n          <Loader />\r\n        ) : errorUpdate ? (\r\n          <Message  variant=\"danger\" duration={10}>\r\n            {errorUpdate}\r\n          </Message>\r\n        ) : (\r\n          <>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <Form onSubmit={handleSubmit}>\r\n                {error && (\r\n                  <Message  variant=\"danger\" duration={10}>\r\n                    {error}\r\n                  </Message>\r\n                )}\r\n\r\n                <Form.Group controlId=\"name\" className=\"mb-2\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    placeholder=\"Enter Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\" className=\"my-2\">\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    placeholder=\"Enter Email Address\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"isAdmin\" className=\"my-2\">\r\n                  <InputGroup>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      label=\"Is Admin\"\r\n                      style={{ borderRight: \"none\" }}\r\n                      checked={isAdmin}\r\n                      onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    ></Form.Check>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"dark\" className=\"my-1\">\r\n                  Edit\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\n\r\nconst ProductListPage = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error, pages, page } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    error: errorCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  // fetch user login info\r\n  useEffect(() => {\r\n    userInfo && dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // refresh token for expired access tokens\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo.isAdmin) history.push(\"/login\");\r\n    dispatch({ type: PRODUCT_CREATE_RESET }); //reset the new product detail\r\n    if (successCreate)\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    else dispatch(listProducts(\"\", pageNumber, 10)); // 3rd parameter is the no of products to be listed per page\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  // delete product after confirming\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Are you sure you wanna delete this product?\"))\r\n      dispatch(deleteProduct(id));\r\n  };\r\n  // create a new dummy product\r\n  const handleCreateProduct = () => {\r\n    dispatch(createProduct());\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            className=\"my-3\"\r\n            style={{\r\n              padding: \"0.5em 1em\",\r\n            }}\r\n            onClick={handleCreateProduct}\r\n          >\r\n            <i className=\"fas fa-plus\" /> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {errorDelete && (\r\n        <Message  variant=\"danger\" duration={10}>\r\n          {errorDelete}\r\n        </Message>\r\n      )}\r\n      {errorCreate && (\r\n        <Message  variant=\"danger\" duration={10}>\r\n          {errorCreate}\r\n        </Message>\r\n      )}\r\n      {loading || loadingCreate || loadingDelete ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message  variant=\"danger\" duration={10}>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered responsive className=\"table-sm text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products &&\r\n                products.map((product) => {\r\n                  return (\r\n                    <tr key={product._id}>\r\n                      <td>{product._id}</td>\r\n                      <td>{product.name}</td>\r\n                      <td>\r\n                        {product.price &&\r\n                          product.price.toLocaleString(\"en-IN\", {\r\n                            maximumFractionDigits: 2,\r\n                            style: \"currency\",\r\n                            currency: \"INR\",\r\n                          })}\r\n                      </td>\r\n                      <td>{product.category}</td>\r\n                      <td>{product.brand}</td>\r\n\r\n                      <td\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"space-around\",\r\n                        }}\r\n                      >\r\n                        <LinkContainer\r\n                          to={`/admin/product/${product._id}/edit`}\r\n                        >\r\n                          <Button variant=\"link\" className=\"btn-sm\">\r\n                            <i className=\"fas fa-edit\" />\r\n                          </Button>\r\n                        </LinkContainer>\r\n                        <Button\r\n                          className=\"btn-sm\"\r\n                          onClick={() => handleDelete(product._id)}\r\n                          variant=\"danger\"\r\n                        >\r\n                          <i\r\n                            style={{\r\n                              fontSize: \"0.9em\",\r\n                              padding: \"0\",\r\n                            }}\r\n                            className=\"fas fa-trash\"\r\n                          />\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Button, Image, Row, Col } from \"react-bootstrap\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { refreshLogin, getUserDetails } from \"../actions/userActions\";\r\n\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst ProductEditPage = ({ match, history }) => {\r\n  // all variable for stroing product details\r\n  const productId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [price, setPrice] = useState(0.0);\r\n  const [countInStock, setCountInStock] = useState(0);\r\n\r\n  // to upload product image\r\n  const [uploading, setUploading] = useState(false);\r\n  const [errorImageUpload, setErrorImageUpload] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n  } = productUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  // fetch user login details\r\n  useEffect(() => {\r\n    userInfo && dispatch(getUserDetails(\"profile\"));\r\n  }, [userInfo, dispatch]);\r\n\r\n  // fetch new access tokens if user details fail, using the refresh token\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo ) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(productId));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // update the product details in state\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setDescription(product.description);\r\n        setCountInStock(product.countInStock);\r\n      }\r\n    }\r\n  }, [product, dispatch, productId, history, successUpdate]);\r\n\r\n  // submit the product details\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        brand,\r\n        price,\r\n        category,\r\n        description,\r\n        countInStock,\r\n        image,\r\n      })\r\n    );\r\n  };\r\n\r\n  // for image input, use a ref\r\n  const inputFile = useRef(null);\r\n\r\n  // click the above ref, to handle the overlay div above the product image\r\n  const handleImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  // submit file to aws bucket, get the url\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setImage(data.secure_url);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setErrorImageUpload(\"Please choose a valid image\");\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\">\r\n        <Button variant=\"outline-primary\" className=\"mt-3\">\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <FormContainer style={{ marginTop: \"-2em\" }}>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate ? (\r\n          <Loader />\r\n        ) : errorUpdate ? (\r\n          <Message  variant=\"danger\" duration={10}>\r\n            {errorUpdate}\r\n          </Message>\r\n        ) : (\r\n          <>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <Form onSubmit={handleSubmit}>\r\n                {error && (\r\n                  <Message  variant=\"danger\" duration={10}>\r\n                    {error}\r\n                  </Message>\r\n                )}\r\n                <Form.Group controlId=\"name\">\r\n                  <FloatingLabel\r\n                    controlId=\"nameinput\"\r\n                    label=\"Name\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      placeholder=\"Enter Name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"price\">\r\n                  <FloatingLabel\r\n                    controlId=\"priceinput\"\r\n                    label=\"Price\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      placeholder=\"Enter price\"\r\n                      type=\"number\"\r\n                      value={price}\r\n                      min=\"0\"\r\n                      max=\"1000\"\r\n                      step=\"0.1\"\r\n                      onChange={(e) => setPrice(e.target.value)}\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                {errorImageUpload && (\r\n                  <Message  variant=\"danger\" duration={10}>\r\n                    {errorImageUpload}\r\n                  </Message>\r\n                )}\r\n                {uploading ? (\r\n                  <div>Uploading...</div>\r\n                ) : (\r\n                  <Form.Group controlId=\"image\">\r\n                    <Row>\r\n                      <Col md={9}>\r\n                        <FloatingLabel\r\n                          controlId=\"imageinput\"\r\n                          label=\"Image URL\"\r\n                          className=\"mb-3\"\r\n                        >\r\n                          <Form.Control\r\n                            placeholder=\"Enter image URL\"\r\n                            type=\"text\"\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                          />\r\n                        </FloatingLabel>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <input\r\n                          accept=\"image/*\"\r\n                          type=\"file\"\r\n                          id=\"file\"\r\n                          ref={inputFile}\r\n                          onChange={handleFileUpload}\r\n                          style={{ display: \"none\" }}\r\n                        />\r\n                        <div\r\n                          className=\"profile-page-image\"\r\n                          style={{\r\n                            alignSelf: \"center\",\r\n                          }}\r\n                        >\r\n                          <Image\r\n                            src={image}\r\n                            alt={name}\r\n                            title=\"Click to input file\"\r\n                            style={{\r\n                              width: \"100%\",\r\n                              border: \"1px solid #ced4da\",\r\n                              marginBottom: \"1em\",\r\n                              cursor: \"pointer\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            className=\"image-overlay-product\"\r\n                            onClick={handleImageClick}\r\n                          >\r\n                            Click to upload image\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                )}\r\n                <Form.Group controlId=\"brand\">\r\n                  <FloatingLabel\r\n                    controlId=\"brandinput\"\r\n                    label=\"Brand\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      placeholder=\"Enter brand\"\r\n                      type=\"text\"\r\n                      value={brand}\r\n                      onChange={(e) => setBrand(e.target.value)}\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"category\">\r\n                  <FloatingLabel\r\n                    controlId=\"categoryinput\"\r\n                    label=\"Category\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      placeholder=\"Enter category\"\r\n                      type=\"text\"\r\n                      value={category}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"description\">\r\n                  <FloatingLabel\r\n                    controlId=\"descinput\"\r\n                    label=\"Description\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      placeholder=\"Enter description URL\"\r\n                      type=\"text\"\r\n                      value={description}\r\n                      onChange={(e) => setDescription(e.target.value)}\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"countInStock\">\r\n                  <FloatingLabel\r\n                    controlId=\"countinstockinput\"\r\n                    label=\"CountInStock\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      placeholder=\"Enter Count In Stock\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      max=\"1000\"\r\n                      value={countInStock}\r\n                      onChange={(e) => setCountInStock(e.target.value)}\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <div className=\"d-flex\">\r\n                  <Button type=\"submit\" className=\"my-1 ms-auto\">\r\n                    Update Product\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { refreshLogin } from \"../actions/userActions\";\r\nimport { listAllOrders } from \"../actions/orderActions\";\r\nimport getDateString from \"../utils/getDateString\";\r\n\r\n\r\nconst ProductListPage = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1; // to fetch various pages of orders\r\n  const dispatch = useDispatch();\r\n  const orderListAll = useSelector((state) => state.orderListAll); // to avoid blank screen display\r\n  const { loading, orders, error, page, pages, total } = orderListAll;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: userLoginError } = userDetails;\r\n\r\n  // refresh access tokens aif user details are failed\r\n  useEffect(() => {\r\n    if (userLoginError && userInfo ) {\r\n      const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      user && dispatch(refreshLogin(user.email));\r\n    }\r\n  }, [userLoginError, dispatch, userInfo]);\r\n\r\n  // get all orders by pagenumber\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) dispatch(listAllOrders(pageNumber));\r\n    else history.push(\"/login\");\r\n  }, [dispatch, history, userInfo, pageNumber]);\r\n\r\n  const downloadImage = (url) => {\r\n    var element = document.createElement(\"a\");\r\n    var file = new Blob(\r\n      [\r\n      url\r\n      ],\r\n      { type: \"image/*\" }\r\n    );\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"payment-proof.png\";\r\n    element.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>All Orders ({`${total || 0}`})</h1>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message  variant=\"danger\" duration={10}>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <Table striped bordered responsive className=\"table-sm text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>TOTAL</th>\r\n              <th>DATE</th>\r\n              <th>PAID</th>\r\n              <th>Payment Verification</th>\r\n              <th>DELIVERED</th>\r\n              <th>ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders &&\r\n              orders.map((order) => {\r\n                return (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.user && order.user.name}</td>\r\n                    <td>\r\n                      {order.totalPrice.toLocaleString(\"en-IN\", {\r\n                        maximumFractionDigits: 2,\r\n                        style: \"currency\",\r\n                        currency: \"INR\",\r\n                      })}\r\n                    </td>\r\n                    <td>{getDateString(order.createdAt)}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        getDateString(order.paidAt)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{\r\n                            color: \"red\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.paymentResult && (\r\n                        <span\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyItems: \"center\",\r\n                            gap: \"10px\",\r\n                            cursor:\"pointer\" \r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={order.paymentResult.imageUrl}\r\n                            alt=\"payment-verified\"\r\n                            style={{ width: \"50px\" }}\r\n                          />\r\n                            <i className=\"fa fa-download\" onClick={()=> downloadImage(order.paymentResult.imageUrl)} />\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        getDateString(order.deliveredAt)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{\r\n                            color: \"red\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button variant=\"link\" className=\"btn-sm\">\r\n                          View Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <Paginate pages={pages} page={page} isAdmin={true} forOrders={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;\r\n","export default __webpack_public_path__ + \"static/media/404Error.0ed04e00.png\";","import React from \"react\";\r\nimport errorImg from \"../assets/404Error.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/error-page.css\";\r\n\r\n// 404 page\r\nconst ErrorPage = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <img className=\"error-img\" alt=\"error\" src={errorImg} />\r\n      <p className=\"mb-0 mt-3 text-error\">\r\n        <i className=\"far fa-frown\" /> Looks like this page does not exist.\r\n      </p>\r\n      <p className=\"mt-0 text-error\">\r\n        Go Back to the <Link to=\"/\">Home Page</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null &&\r\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then((registration) => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport './styles/update-toast.css';\r\n\r\nconst ServiceWorkerWrapper = () => {\r\n\tconst [showReload, setShowReload] = useState(false);\r\n\tconst [waitingWorker, setWaitingWorker] = useState(null);\r\n\r\n\tconst onSWUpdate = (registration) => {\r\n\t\tsetShowReload(true);\r\n\t\tsetWaitingWorker(registration.waiting);\r\n\t};\r\n\r\n\t// register the service worker on page load\r\n\tuseEffect(() => {\r\n\t\tserviceWorkerRegistration.register({ onUpdate: onSWUpdate });\r\n\t}, []);\r\n\r\n\t// skip waiting and install new updates on page reload\r\n\tconst reloadPage = () => {\r\n\t\twaitingWorker?.postMessage({ type: 'SKIP_WAITING' });\r\n\t\tsetShowReload(false);\r\n\t\twindow.location.reload(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ToastContainer className='update-toast' onClick={reloadPage}>\r\n\t\t\t<Toast show={showReload} onClose={reloadPage} bg='dark'>\r\n\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t<strong className='me-auto text-black'>\r\n\t\t\t\t\t\tNew Version Available\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</Toast.Header>\r\n\t\t\t\t<Toast.Body className='text-white'>\r\n\t\t\t\t\tReload to see whats new!\r\n\t\t\t\t</Toast.Body>\r\n\t\t\t</Toast>\r\n\t\t</ToastContainer>\r\n\t);\r\n};\r\n\r\nexport default ServiceWorkerWrapper;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ProductPage from \"./pages/ProductPage\";\r\nimport CartPage from \"./pages/CartPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport ConfirmPage from \"./pages/ConfirmPage\";\r\nimport ShippingPage from \"./pages/ShippingPage\";\r\nimport PaymentPage from \"./pages/PaymentPage\";\r\nimport PlaceOrderPage from \"./pages/PlaceOrderPage\";\r\nimport OrderPage from \"./pages/OrderPage\";\r\nimport PasswordResetPage from \"./pages/PasswordResetPage\";\r\nimport UserListPage from \"./pages/UserListPage\";\r\nimport UserEditPage from \"./pages/UserEditPage\";\r\nimport ProductListPage from \"./pages/ProductListPage\";\r\nimport ProductEditPage from \"./pages/ProductEditPage\";\r\nimport OrderListPage from \"./pages/OrderListPage\";\r\nimport ErrorPage from \"./pages/ErrorPage\";\r\n\r\n// for showing the 'new update available' banner and to register the service worker\r\nimport ServiceWorkerWrapper from \"./ServiceWorkerWrapper\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <ServiceWorkerWrapper />\r\n\r\n      <main className=\"py-2\">\r\n        <Container>\r\n          <Switch>\r\n            <Route path=\"/\" component={HomePage} exact />\r\n            <Route path=\"/search/:keyword\" component={HomePage} exact />\r\n            <Route path=\"/page/:pageNumber\" component={HomePage} exact />\r\n            <Route\r\n              path=\"/search/:keyword/page/:pageNumber\"\r\n              exact\r\n              component={HomePage}\r\n            />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n            <Route path=\"/register\" component={RegisterPage} />\r\n            <Route\r\n              path=\"/user/password/reset/:token\"\r\n              component={PasswordResetPage}\r\n            />\r\n            <Route path=\"/profile\" component={ProfilePage} />\r\n            <Route path=\"/product/:id\" component={ProductPage} />\r\n            <Route path=\"/cart/:id?\" component={CartPage} />\r\n            <Route path=\"/user/confirm/:token\" component={ConfirmPage} exact />\r\n            <Route path=\"/shipping\" component={ShippingPage} />\r\n            <Route path=\"/payment\" component={PaymentPage} />\r\n            <Route path=\"/placeorder\" component={PlaceOrderPage} />\r\n            <Route path=\"/order/:id\" component={OrderPage} />\r\n            <Route path=\"/admin/userlist\" component={UserListPage} exact />\r\n            <Route\r\n              path=\"/admin/userlist/:pageNumber\"\r\n              component={UserListPage}\r\n              exact\r\n            />\r\n            <Route path=\"/admin/user/:id/edit\" component={UserEditPage} />\r\n            <Route\r\n              path=\"/admin/productlist\"\r\n              exact\r\n              component={ProductListPage}\r\n            />\r\n            <Route\r\n              path=\"/admin/productlist/:pageNumber\"\r\n              component={ProductListPage}\r\n              exact\r\n            />\r\n            <Route path=\"/admin/product/:id/edit\" component={ProductEditPage} />\r\n            <Route path=\"/admin/orderlist\" component={OrderListPage} exact />\r\n            <Route\r\n              path=\"/admin/orderlist/:pageNumber\"\r\n              component={OrderListPage}\r\n              exact\r\n            />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n\tproductListReducer,\r\n\tproductDetailsReducer,\r\n\tproductDeleteReducer,\r\n\tproductCreateReducer,\r\n\tproductCreateReviewReducer,\r\n\tproductUpdateReducer,\r\n\tproductTopRatedReducer,\r\n} from './reducers/productReducers';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserLoginRefreshReducer,\r\n\tuserRegisterReducer,\r\n\tuserSendEmailVerficationReducer,\r\n\tuserConfirmReducer,\r\n\tuserResetPasswordReducer,\r\n\tuserDetailsReducer,\r\n\tuserProfileUpdateReducer,\r\n\tuserListReducer,\r\n\tuserDeleteReducer,\r\n\tuserUpdateReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport {\r\n\torderCreateReducer,\r\n\torderDetailsReducer,\r\n\torderPayReducer,\r\n\torderDeliverReducer,\r\n\torderListUserReducer,\r\n\torderListAllReducer,\r\n} from './reducers/orderReducers';\r\n\r\n// combine all the above reducers to the store\r\nconst reducer = combineReducers({\r\n\tproductList: productListReducer,\r\n\tproductDetails: productDetailsReducer,\r\n\tproductDelete: productDeleteReducer,\r\n\tproductCreate: productCreateReducer,\r\n\tproductCreateReview: productCreateReviewReducer,\r\n\tproductUpdate: productUpdateReducer,\r\n\tproductTopRated: productTopRatedReducer,\r\n\tcart: cartReducer,\r\n\tuserLogin: userLoginReducer,\r\n\tuserLoginRefresh: userLoginRefreshReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\tuserSendEmailVerfication: userSendEmailVerficationReducer,\r\n\tuserConfirm: userConfirmReducer,\r\n\tuserResetPassword: userResetPasswordReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tuserProfileUpdate: userProfileUpdateReducer,\r\n\tuserList: userListReducer,\r\n\tuserDelete: userDeleteReducer,\r\n\tuserUpdate: userUpdateReducer,\r\n\torderCreate: orderCreateReducer,\r\n\torderDetails: orderDetailsReducer,\r\n\torderPay: orderPayReducer,\r\n\torderDeliver: orderDeliverReducer,\r\n\torderListUser: orderListUserReducer,\r\n\torderListAll: orderListAllReducer,\r\n});\r\n\r\n// get a few cart items from the local storage\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems')\r\n\t? JSON.parse(localStorage.getItem('cartItems'))\r\n\t: [];\r\n\r\n// get the user info from local storage\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\r\n\t? JSON.parse(localStorage.getItem('userInfo'))\r\n\t: null;\r\n\r\n// get the shipping address from local storage\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress')\r\n\t? JSON.parse(localStorage.getItem('shippingAddress'))\r\n\t: {};\r\n\r\n// get refresh token from the local storage\r\nconst tokenInfoFromLocalStoage = localStorage.getItem('refreshToken')\r\n\t? localStorage.getItem('refreshToken')\r\n\t: null;\r\n\r\n// set the initial state based on above local storage values\r\nconst initialState = {\r\n\tcart: {\r\n\t\tcartItems: [...cartItemsFromLocalStorage],\r\n\t\tshippingAddress: shippingAddressFromLocalStorage,\r\n\t},\r\n\tuserLogin: {\r\n\t\tuserInfo: userInfoFromLocalStorage,\r\n\t},\r\n\tuserLoginRefresh: {\r\n\t\ttokenInfo: tokenInfoFromLocalStoage,\r\n\t},\r\n};\r\n\r\n// user redux thunk for making async calls\r\nconst middleware = [thunk];\r\n\r\n// create the redux store\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_LIST_FAILURE,\r\n\tPRODUCT_DETAILS_FAILURE,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DELETE_FAILURE,\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_CREATE_SUCCESS,\r\n\tPRODUCT_CREATE_FAILURE,\r\n\tPRODUCT_CREATE_REQUEST,\r\n\tPRODUCT_CREATE_RESET,\r\n\tPRODUCT_UPDATE_SUCCESS,\r\n\tPRODUCT_UPDATE_FAILURE,\r\n\tPRODUCT_UPDATE_REQUEST,\r\n\tPRODUCT_UPDATE_RESET,\r\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\r\n\tPRODUCT_CREATE_REVIEW_FAILURE,\r\n\tPRODUCT_CREATE_REVIEW_REQUEST,\r\n\tPRODUCT_CREATE_REVIEW_RESET,\r\n\tPRODUCT_TOP_RATED_SUCCESS,\r\n\tPRODUCT_TOP_RATED_FAILURE,\r\n\tPRODUCT_TOP_RATED_REQUEST,\r\n} from '../constants/productConstants';\r\n\r\n// list products based on keyword and paginated page number\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_LIST_REQUEST:\r\n\t\t\treturn { loading: true, products: [] };\r\n\r\n\t\tcase PRODUCT_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tproducts: action.payload.products,\r\n\t\t\t\tpage: action.payload.page,\r\n\t\t\t\tpages: action.payload.pages,\r\n\t\t\t};\r\n\r\n\t\tcase PRODUCT_LIST_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn { state };\r\n\t}\r\n};\r\n\r\n// details about a particular product\r\nexport const productDetailsReducer = (\r\n\tstate = { product: { reviews: [] } },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_DETAILS_REQUEST:\r\n\t\t\treturn { loading: true, ...state };\r\n\t\tcase PRODUCT_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, product: action.payload };\r\n\t\tcase PRODUCT_DETAILS_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_DELETE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase PRODUCT_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\t\tcase PRODUCT_DELETE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_CREATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase PRODUCT_CREATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, product: action.payload };\r\n\t\tcase PRODUCT_CREATE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase PRODUCT_CREATE_RESET:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_CREATE_REVIEW_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase PRODUCT_CREATE_REVIEW_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\t\tcase PRODUCT_CREATE_REVIEW_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase PRODUCT_CREATE_REVIEW_RESET:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase PRODUCT_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, product: action.payload };\r\n\t\tcase PRODUCT_UPDATE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase PRODUCT_UPDATE_RESET:\r\n\t\t\treturn { product: {} };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// fetching top rated products\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_TOP_RATED_REQUEST:\r\n\t\t\treturn { loading: true, products: [] };\r\n\t\tcase PRODUCT_TOP_RATED_SUCCESS:\r\n\t\t\treturn { loading: false, products: action.payload };\r\n\t\tcase PRODUCT_TOP_RATED_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n","import {\r\n\tCART_ADD_ITEM,\r\n\tCART_REMOVE_ITEM,\r\n\tCART_SAVE_SHIPPING_ADDRESS,\r\n\tCART_SAVE_PAYMENT_METHOD,\r\n\tCART_RESET,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n\tstate = { cartItems: [], shippingAddress: {} },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase CART_ADD_ITEM:\r\n\t\t\tconst item = action.payload;\r\n\r\n\t\t\t// check if the item exists in the cart\r\n\t\t\tconst existingItem = state.cartItems.find(\r\n\t\t\t\t(ele) => ele.product === item.product\r\n\t\t\t);\r\n\t\t\tif (existingItem) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcartItems: state.cartItems.map((ele) =>\r\n\t\t\t\t\t\tele.product === existingItem.product ? item : ele\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcartItems: [...state.cartItems, item],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\tcase CART_REMOVE_ITEM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcartItems: state.cartItems.filter(\r\n\t\t\t\t\t(ele) => ele.product !== action.payload\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\tcase CART_SAVE_SHIPPING_ADDRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshippingAddress: action.payload,\r\n\t\t\t};\r\n\t\tcase CART_SAVE_PAYMENT_METHOD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpaymentMethod: action.payload,\r\n\t\t\t};\r\n\t\tcase CART_RESET: {\r\n\t\t\treturn {\r\n\t\t\t\tcartItems: [],\r\n\t\t\t\tshippingAddress: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n","import {\r\n\tUSER_LOGIN_FAILURE,\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_FAILURE,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_RESET_PASSWORD_FAILURE,\r\n\tUSER_RESET_PASSWORD_SUCCESS,\r\n\tUSER_RESET_PASSWORD_REQUEST,\r\n\tUSER_EMAIL_VERIFICATION_REQUEST,\r\n\tUSER_EMAIL_VERIFICATION_SUCCESS,\r\n\tUSER_EMAIL_VERIFICATION_FAILURE,\r\n\tUSER_CONFIRM_REQUEST,\r\n\tUSER_CONFIRM_SUCCESS,\r\n\tUSER_CONFIRM_FAILURE,\r\n\tUSER_DETAILS_FAILURE,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_PROFILE_UPDATE_REQUEST,\r\n\tUSER_PROFILE_UPDATE_SUCCESS,\r\n\tUSER_PROFILE_UPDATE_FAILURE,\r\n\tUSER_PROFILE_UPDATE_RESET,\r\n\tUSER_LOGIN_REFRESH_REQUEST,\r\n\tUSER_LOGIN_REFRESH_SUCCESS,\r\n\tUSER_LOGIN_REFRESH_FAILURE,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAILURE,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAILURE,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAILURE,\r\n\tUSER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LOGIN_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_LOGIN_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload };\r\n\t\tcase USER_LOGIN_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_LOGOUT:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// use refresh token to obtain new access token for the logged in user\r\nexport const userLoginRefreshReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LOGIN_REFRESH_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_LOGIN_REFRESH_SUCCESS:\r\n\t\t\treturn { loading: false, tokenInfo: action.payload };\r\n\t\tcase USER_LOGIN_REFRESH_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// sending an email for account verification\r\nexport const userSendEmailVerficationReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_EMAIL_VERIFICATION_REQUEST:\r\n\t\t\treturn { isLoading: true };\r\n\t\tcase USER_EMAIL_VERIFICATION_SUCCESS:\r\n\t\t\treturn { isLoading: true, emailSent: action.payload };\r\n\t\tcase USER_EMAIL_VERIFICATION_FAILURE:\r\n\t\t\treturn { isLoading: true, hasError: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update user account to confirmed\r\nexport const userConfirmReducer = (state = { isConfirmed: false }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_CONFIRM_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_CONFIRM_SUCCESS:\r\n\t\t\treturn { loading: false, isConfirmed: action.payload };\r\n\t\tcase USER_CONFIRM_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// reset the user password\r\nexport const userResetPasswordReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_RESET_PASSWORD_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_RESET_PASSWORD_SUCCESS:\r\n\t\t\treturn { loading: false, resetPassword: action.payload };\r\n\t\tcase USER_RESET_PASSWORD_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault: {\r\n\t\t\treturn { ...state };\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// register user using email and password\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_REGISTER_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_REGISTER_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload };\r\n\t\tcase USER_REGISTER_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// fetch user details\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_DETAILS_REQUEST:\r\n\t\t\treturn { ...state, loading: true };\r\n\t\tcase USER_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, user: action.payload };\r\n\t\tcase USER_DETAILS_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_DETAILS_RESET:\r\n\t\t\treturn { user: {} };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update user profile, not in admin view\r\nexport const userProfileUpdateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_PROFILE_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_PROFILE_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, userInfo: action.payload };\r\n\t\tcase USER_PROFILE_UPDATE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_PROFILE_UPDATE_RESET:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// list all users for the admin view\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LIST_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tusers: action.payload.users,\r\n\t\t\t\tpage: action.payload.page,\r\n\t\t\t\tpages: action.payload.pages,\r\n\t\t\t\ttotal: action.payload.total,\r\n\t\t\t};\r\n\t\tcase USER_LIST_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_LIST_RESET:\r\n\t\t\treturn { users: [] };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_DELETE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\t\tcase USER_DELETE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update user from the admin panel view\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase USER_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\t\tcase USER_UPDATE_FAILURE:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tcase USER_UPDATE_RESET:\r\n\t\t\treturn { user: {} };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n","import {\r\n\tORDER_CREATE_REQUEST,\r\n\tORDER_CREATE_SUCCESS,\r\n\tORDER_CREATE_FAILURE,\r\n\tORDER_CREATE_RESET,\r\n\tORDER_DETAILS_REQUEST,\r\n\tORDER_DETAILS_SUCCESS,\r\n\tORDER_DETAILS_FAILURE,\r\n\tORDER_PAY_REQUEST,\r\n\tORDER_PAY_SUCCESS,\r\n\tORDER_PAY_FAILURE,\r\n\tORDER_PAY_RESET,\r\n\tORDER_DELIVER_REQUEST,\r\n\tORDER_DELIVER_SUCCESS,\r\n\tORDER_DELIVER_FAILURE,\r\n\tORDER_DELIVER_RESET,\r\n\tORDER_USER_LIST_REQUEST,\r\n\tORDER_USER_LIST_SUCCESS,\r\n\tORDER_USER_LIST_FAILURE,\r\n\tORDER_USER_LIST_RESET,\r\n\tORDER_ALL_LIST_REQUEST,\r\n\tORDER_ALL_LIST_SUCCESS,\r\n\tORDER_ALL_LIST_FAILURE,\r\n} from '../constants/orderConstants';\r\n\r\n// create an order\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ORDER_CREATE_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tcase ORDER_CREATE_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\torder: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDER_CREATE_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDER_CREATE_RESET:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// get order details\r\nexport const orderDetailsReducer = (\r\n\tstate = { loading: true, orderItems: [], shippingAddress: {} },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase ORDER_DETAILS_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tcase ORDER_DETAILS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\torder: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDER_DETAILS_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update order payment options\r\nexport const orderPayReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ORDER_PAY_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tcase ORDER_PAY_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsuccess: true,\r\n\t\t\t};\r\n\t\tcase ORDER_PAY_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDER_PAY_RESET:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// update order to be delivered or not\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ORDER_DELIVER_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tcase ORDER_DELIVER_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsuccess: true,\r\n\t\t\t};\r\n\t\tcase ORDER_DELIVER_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDER_DELIVER_RESET:\r\n\t\t\treturn {};\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// reducer to list orders of the particular user\r\nexport const orderListUserReducer = (state = { orders: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ORDER_USER_LIST_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tcase ORDER_USER_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\torders: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDER_USER_LIST_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tcase ORDER_USER_LIST_RESET:\r\n\t\t\treturn { orders: [] };\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n\r\n// reducer to list all orders for the admin panel view\r\nexport const orderListAllReducer = (state = { orders: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ORDER_ALL_LIST_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\tcase ORDER_ALL_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\torders: action.payload.orders,\r\n\t\t\t\tpage: action.payload.page,\r\n\t\t\t\tpages: action.payload.pages,\r\n\t\t\t\ttotal: action.payload.total,\r\n\t\t\t};\r\n\t\tcase ORDER_ALL_LIST_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport \"./bootstrap.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HelmetProvider>\r\n      <App />\r\n    </HelmetProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}